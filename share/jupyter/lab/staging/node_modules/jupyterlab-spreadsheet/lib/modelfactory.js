import { Base64ModelFactory, DocumentModel } from "@jupyterlab/docregistry";
import { SpreadsheetModel } from "./model";
import { Subject } from "rxjs";
export class JupyterSpreadsheetModel extends DocumentModel {
    constructor(modelDB) {
        super(void 0, modelDB);
        this._observable = new Subject();
        this._model = new SpreadsheetModel({
            value: this._observable
        });
        this._observable.next(this.value.text);
        this.value.changed.connect(this.valueChanged, this);
    }
    get model() { return this._model; }
    dispose() {
        if (this.isDisposed)
            return;
        this._observable.complete();
        this.value.changed.disconnect(this.valueChanged, this);
        this._model.dispose();
    }
    valueChanged() {
        this._observable.next(this.value.text);
    }
}
export class SpreadsheetModelFactory extends Base64ModelFactory {
    createNew(languagePreference, modelDB) {
        return new JupyterSpreadsheetModel(modelDB);
    }
    get name() {
        return "workbook";
    }
}
