{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/style/grid.css","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/style/widget.css","webpack://@jupyterlab/application-top/./node_modules/slickgrid/slick.grid.css","webpack://@jupyterlab/application-top/./node_modules/jquery/dist/jquery-exposed.js","webpack://@jupyterlab/application-top/./node_modules/expose-loader/dist/runtime/getGlobalThis.js","webpack://@jupyterlab/application-top/./node_modules/slickgrid/images/sort-asc.gif","webpack://@jupyterlab/application-top/./node_modules/slickgrid/images/sort-desc.gif","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/lib/model.js","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/lib/modelfactory.js","webpack://@jupyterlab/application-top/./node_modules/slickgrid/slick.grid.css?76b3","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/lib/formatter.js","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/style/grid.css?1d9f","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/lib/grid.js","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/style/widget.css?aa81","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/lib/widget.js","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/lib/widgetfactory.js","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/lib/registry.js","webpack://@jupyterlab/application-top/./node_modules/jupyterlab-spreadsheet/lib/index.js","webpack://@jupyterlab/application-top/./node_modules/slickgrid/lib/jquery.event.drag-2.3.0.js","webpack://@jupyterlab/application-top/./node_modules/slickgrid/slick.core.js","webpack://@jupyterlab/application-top/./node_modules/slickgrid/slick.dataview.js","webpack://@jupyterlab/application-top/./node_modules/slickgrid/slick.grid.js"],"names":["___CSS_LOADER_EXPORT___","push","module","id","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___EXPOSE_LOADER_IMPORT___","___EXPOSE_LOADER_GET_GLOBAL_THIS___","___EXPOSE_LOADER_GLOBAL_THIS___","exports","globalThis","g","this","Function","e","window","self","SpreadsheetModel","constructor","value","_workbookChanged","Subject","_sheetChanged","_activeSheet","_isDisposed","_value","_subscription","subscribe","handleContentChanged","bind","dispose","complete","unsubscribe","_workbook","setSheet","name","next","getSheetNames","SheetNames","getExtent","s","c","r","sheetData","Sheets","range","sheetRangeExclusive","utils","getLength","extent","getItem","rowModel","Object","freeze","nCols","cell","data","getItemMetadata","index","metadata","columns","merges","i","length","merge","mergeDown","colspan","getColumnConfig","config","field","cssClass","headerCssClass","formatter","row","colName","colWidth","width","toCsv","sheetName","sheetToConv","sheet","FS","content","read","JupyterSpreadsheetModel","DocumentModel","modelDB","super","_observable","_model","text","changed","connect","valueChanged","isDisposed","disconnect","SpreadsheetModelFactory","Base64ModelFactory","createNew","languagePreference","options","insert","singleton","update","SpreadsheetFormatter","column","columnCfg","rowObject","grid","returnValue","addClasses","removeClasses","getData","colId","h","w","v","type","t","GridWidget","Widget","model","addClass","sheetChanged","workbookChanged","_columnConfig","_grid","buildGrid","destroy","onUpdateRequest","onAfterShow","render","onResize","resizeCanvas","Slick","Grid","node","defaultFormatter","enableColumnReorder","SpreadsheetWidget","CSS_CLASS","layout","BoxLayout","tabBar","TabBar","allowDeselect","tabsMovable","addWidget","currentChanged","handleSheetChanged","handleModelContentChanged","_sender","currentTitle","label","clearTabs","sheetNames","addTab","owner","currentIndex","indexOf","activeSheet","SpreadsheetWidgetFactory","ABCWidgetFactory","createNewWidget","context","widget","DocumentWidget","XLS_MIMETYPE","XLSX_MIMETYPE","ODF_MIMETYPE","CSF_MIMETYPE","ISpreadsheetTracker","Token","activateSpreadsheet","app","restorer","docRegistry","tracker","WidgetTracker","namespace","factory","modelName","fileTypes","defaultFor","modelFactory","addModelFactory","addWidgetFactory","addFileType","displayName","fileFormat","extensions","mimeTypes","widgetCreated","sender","add","pathChanged","save","restore","command","args","path","autoStart","requires","ILayoutRestorer","provides","activate","$","fn","drag","str","arg","opts","isFunction","on","trigger","$event","event","$special","special","defaults","which","distance","not","handle","relative","drop","click","datakey","noBubble","obj","related","each","key","def","undefined","remove","setup","extend","init","attachEvent","dontstart","teardown","removeData","textselect","detachEvent","touched","dd","results","targetClass","target","attr","is","toString","closest","currentTarget","propagates","mousedown","interactions","interaction","pageX","pageY","dragging","hijack","flatten","handler","document","live","elem","offset","ownerDocument","top","left","callback","droppable","preventDefault","Math","pow","Date","getTime","x","orig","originalEvent","mode","result","ia","$elems","len","isNaN","noop","jQuery","Event","stopPropagation","stopImmediatePropagation","cancelled","properties","p","subject","isPropagationStopped","dispatch","call","element","proxy","startX","startY","deltaX","deltaY","originalX","originalY","offsetX","offsetY","slice","available","jquery","nodeType","arr","map","member","makeArray","bool","css","unselectable","prototype","locate","$dispatch","apply","arguments","draginit","dragstart","dragend","EventData","isImmediatePropagationStopped","handlers","splice","notify","scope","EventHandler","unsubscribeAll","Range","fromRow","fromCell","toRow","toCell","min","max","isSingleRow","isSingleCell","contains","NonDataItem","__nonDataRow","Group","__group","level","count","title","collapsed","selectChecked","totals","rows","groups","groupingKey","equals","group","GroupTotals","__groupTotals","initialized","EditorLock","activeEditController","isActive","editController","Error","commitCurrentEdit","cancelCurrentEdit","deactivate","TreeColumns","treeColumns","columnsById","mapToId","forEach","filter","condition","valid","sort","a","b","indexA","getOrDefault","getColumnIndex","indexB","getDepth","getColumnsInDepth","depth","current","n","extractColumns","concat","hasOwnProperty","cloneTreeColumns","hasDepth","getTreeColumns","getColumnsInGroup","visibleColumns","visible","reOrder","getById","getInIds","ids","Map","get","set","has","delete","SPACE","BACKSPACE","DELETE","DOWN","END","ENTER","ESCAPE","HOME","INSERT","LEFT","PAGE_DOWN","PAGE_UP","RIGHT","TAB","UP","A","None","LegacyOff","LegacyForceFit","IgnoreViewport","FitColsToViewport","FitViewportToCols","Locked","Guide","Content","ContentIntelligent","FirstRow","FirstNRows","AllRows","LastRow","DeDuplicate","GetGreatestAndSub","GetLongestTextAndSub","GetLongestText","CanvasTextSize","HTML","DataView","groupItemMetadataProvider","inlineFilters","idProperty","items","idxById","rowsById","updated","suspend","isBulkSuspend","bulkDeleteIds","sortAsc","fastSortField","sortComparer","refreshHints","prevRefreshHints","filterArgs","filteredItems","compiledFilter","compiledFilterWithCaching","filterCache","groupingInfoDefaults","getter","comparer","predefinedValues","aggregators","aggregateEmpty","aggregateCollapsed","aggregateChildGroups","displayTotalsRow","lazyTotalsCalculation","groupingInfos","toggledGroupsByLevel","groupingDelimiter","selectedRowIds","pagesize","pagenum","totalRows","onSetItemsCalled","onRowCountChanged","onRowsChanged","onRowsOrCountChanged","onBeforePagingInfoChanged","onPagingInfoChanged","onGroupExpanded","onGroupCollapsed","beginUpdate","bulkUpdate","endUpdate","wasBulkSuspend","processBulkDelete","ensureIdUniqueness","refresh","onSelectedRowsChanged","onCellCssStylesChanged","setRefreshHints","hints","setFilterArgs","item","newIdx","l","updateIdxById","startingIndex","getItems","getIdPropertyName","setItems","objectIdProperty","itemCount","setPagingOptions","getPagingInfo","pageSize","ceil","pageNum","totalPages","dataView","ascending","reverse","fastSort","oldToString","reSort","getFilteredItems","getFilteredItemCount","getFilter","setFilter","filterFn","compileFilter","compileFilterWithCaching","getGrouping","setGrouping","groupingInfo","Data","GroupItemMetadataProvider","Array","gi","getterIsAFn","compiledAccumulators","idx","compileAccumulatorLoop","groupBy","valueGetter","valueFormatter","setAggregators","groupAggregators","includeCollapsed","getItemByIdx","getIdxById","ensureRowsByIdCache","getRowByItem","getRowById","getItemById","mapItemsToRows","itemArray","mapIdsToRows","idArray","mapRowsToIds","rowArray","updateSingleItem","newId","updateItem","updateItems","newItems","insertItem","insertBefore","insertItems","addItem","addItems","deleteItem","deleteItems","indexesToDelete","sortedAddItem","sortedIndex","sortedUpdateItem","oldItem","searchItem","low","high","mid","getItemCount","calculateTotals","getGroupRowMetadata","getTotalsRowMetadata","expandCollapseAllGroups","collapse","collapseAllGroups","expandAllGroups","expandCollapseGroup","collapseGroup","varArgs","arg0","split","join","expandGroup","getGroups","extractGroups","parentGroup","val","groupsByVal","addTotals","isLeafLevel","agg","storeResult","addGroupTotals","groupCollapsed","toggledGroups","flattenGroupedRows","groupedRows","gl","j","jj","getFunctionInfo","fnStr","usingEs5","fnRegex","matches","match","params","body","aggregator","accumulate","accumulatorInfo","fnName","setFunctionName","noAccumulator","filterInfo","filterPath1","filterPath2","filterBody","replace","tpl","defineProperty","writable","err","uncompiledFilter","retval","ii","uncompiledFilterWithCaching","cache","getFilteredAndPagedItems","batchFilter","batchFilterWithCaching","isFilterNarrowing","isFilterExpanding","isFilterUnchanged","paged","floor","getRowDiffs","newRows","eitherIsNonData","diff","from","to","ignoreDiffsBefore","ignoreDiffsAfter","rl","recalc","_items","previousPagingInfo","countBefore","totalRowsBefore","previous","callingOnRowsChanged","calledOnRowCountChanged","rowsDiff","previousRowCount","currentRowCount","rowCountChanged","rowsChanged","syncGridSelection","preserveHidden","preserveHiddenOnSelectionChange","inHandler","getSelectedRows","onSelectedRowIdsChanged","setSelectedRowIds","rowIds","selectedRows","setSelectedRows","newSelectedRowIds","getOptions","multiSelect","existing","grep","getAllSelectedIds","getAllSelectedItems","selectedData","selectedIds","syncGridCellCssStyles","hashById","storeCellCssStyles","getCellCssStyles","hash","newHash","setCellCssStyles","AvgAggregator","field_","count_","nonNullCount_","sum_","parseFloat","groupTotals","avg","MinAggregator","min_","MaxAggregator","max_","SumAggregator","sum","CountAggregator","Aggregators","Avg","Min","Max","Sum","Count","scrollbarDimensions","maxSupportedCssHeight","SlickGrid","container","alwaysShowVerticalScroll","alwaysAllowHorizontalScroll","explicitInitialization","rowHeight","defaultColumnWidth","enableAddRow","leaveSpaceForNewRows","editable","autoEdit","suppressActiveCellChangeOnEdit","enableCellNavigation","asyncEditorLoading","asyncEditorLoadDelay","forceFitColumns","enableAsyncPostRender","asyncPostRenderDelay","enableAsyncPostRenderCleanup","asyncPostRenderCleanupDelay","autoHeight","editorLock","GlobalEditorLock","showColumnHeader","showHeaderRow","headerRowHeight","createFooterRow","showFooterRow","footerRowHeight","createPreHeaderPanel","showPreHeaderPanel","preHeaderPanelHeight","showTopPanel","topPanelHeight","formatterFactory","editorFactory","cellFlashingCssClass","selectedCellCssClass","enableTextSelectionOnCells","dataItemColumnValueExtractor","frozenBottom","frozenColumn","frozenRow","frozenRightViewportMinWidth","fullWidthRows","multiColumnSort","numberedMultiColumnSort","tristateMultiColumnSort","sortColNumberInSeparateSpan","forceSyncScrolling","addNewRowCssClass","preserveCopiedSelectionOnPaste","showCellSelection","viewportClass","minRowBuffer","emulatePagingWhenScrolling","editorCellNavOnLRKeys","enableMouseWheelScrollHandler","doPaging","autosizeColsMode","GridAutosizeColsMode","autosizeColPaddingPx","autosizeTextAvgToMWidthRatio","viewportSwitchToScrollModeWidthPercent","viewportMinWidthPx","viewportMaxWidthPx","suppressCssChangesOnHiddenInit","columnDefaults","resizable","sortable","minWidth","maxWidth","rerenderOnResize","defaultSortAsc","focusable","selectable","columnAutosizeDefaults","ignoreHeaderText","colValueArray","allowAddlPercent","formatterOverride","autosizeMode","ColAutosizeMode","rowSelectionModeOnInit","rowSelectionMode","RowSelectionMode","rowSelectionCount","valueFilterMode","ValueFilterMode","widthEvalMode","WidthEvalMode","sizeToRemaining","widthPx","colDataTypeOf","th","ph","cj","page","vScrollDir","$container","uid","round","random","$focusSink","$focusSink2","$groupHeaders","$headerScroller","$headers","$headerRow","$headerRowScroller","$headerRowSpacerL","$headerRowSpacerR","$footerRow","$footerRowScroller","$footerRowSpacerL","$footerRowSpacerR","$preHeaderPanel","$preHeaderPanelScroller","$preHeaderPanelSpacer","$preHeaderPanelR","$preHeaderPanelScrollerR","$preHeaderPanelSpacerR","$topPanelScroller","$topPanel","$viewport","$canvas","$style","$boundAncestors","stylesheet","columnCssRulesL","columnCssRulesR","viewportH","viewportW","canvasWidth","canvasWidthL","canvasWidthR","headersWidth","headersWidthL","headersWidthR","viewportHasHScroll","viewportHasVScroll","headerColumnWidthDiff","headerColumnHeightDiff","cellWidthDiff","cellHeightDiff","jQueryNewWidthBehaviour","absoluteColumnMinWidth","hasFrozenRows","frozenRowsHeight","actualFrozenRow","paneTopH","paneBottomH","viewportTopH","viewportBottomH","topPanelH","headerRowH","footerRowH","tabbingDirection","$activeCanvasNode","$activeViewportNode","activePosX","activeRow","activeCell","activeCellNode","currentEditor","serializedEditorValue","rowsCache","renderedRows","numVisibleRows","prevScrollTop","scrollTop","lastRenderedScrollTop","lastRenderedScrollLeft","prevScrollLeft","scrollLeft","selectionModel","plugins","cellCssClasses","sortColumns","columnPosLeft","columnPosRight","pagingActive","pagingIsLastPage","scrollThrottle","ActionThrottle","h_editorLoader","h_render","h_postrender","h_postrenderCleanup","postProcessedRows","postProcessToRow","postProcessFromRow","postProcessedCleanupQueue","postProcessgroupId","counter_rows_rendered","counter_rows_removed","$paneHeaderL","$paneHeaderR","$paneTopL","$paneTopR","$paneBottomL","$paneBottomR","$headerScrollerL","$headerScrollerR","$headerL","$headerR","$groupHeadersL","$groupHeadersR","$headerRowScrollerL","$headerRowScrollerR","$footerRowScrollerL","$footerRowScrollerR","$headerRowL","$headerRowR","$footerRowL","$footerRowR","$topPanelScrollerL","$topPanelScrollerR","$topPanelL","$topPanelR","$viewportTopL","$viewportTopR","$viewportBottomL","$viewportBottomR","$canvasTopL","$canvasTopR","$canvasBottomL","$canvasBottomR","$viewportScrollContainerX","$viewportScrollContainerY","$headerScrollContainer","$headerRowScrollContainer","$footerRowScrollContainer","cssShow","position","visibility","display","$hiddenParents","oldProps","columnResizeDragging","getMaxSupportedCssHeight","validateAndEnforceOptions","cacheCssForHiddenInit","updateColumnProps","empty","test","appendTo","hide","toggleClass","measureScrollbar","getCanvasWidth","getHeadersWidth","clone","finishInitialization","getViewportWidth","getViewportHeight","measureCellPaddingAndBorder","disableSelection","setFrozenOptions","setPaneVisibility","setScroller","setOverflow","updateColumnCaches","createColumnHeaders","createColumnGroupHeaders","createColumnFooter","setupColumnSort","createCssRules","bindAncestorScrollEvents","handleScroll","mousewheel","handleMouseWheel","handleHeaderContextMenu","handleHeaderClick","handleHeaderMouseEnter","handleHeaderMouseLeave","handleHeaderRowScroll","handleHeaderRowMouseEnter","handleHeaderRowMouseLeave","handleFooterContextMenu","handleFooterClick","handleFooterRowScroll","handlePreHeaderPanelScroll","handleKeyDown","handleClick","handleDblClick","handleContextMenu","handleDragInit","handleDragStart","handleDrag","handleDragEnd","handleMouseEnter","handleMouseLeave","restoreCssFromHiddenInit","parents","addBack","old","style","hasFrozenColumns","registerPlugin","plugin","unshift","unregisterPlugin","getPluginByName","pluginName","setSelectionModel","onSelectedRangesChanged","handleSelectedRangesChanged","getSelectionModel","getCanvasNode","columnIdOrIdx","rowIndex","_getContainerElement","getCanvases","getActiveCanvasNode","setActiveCanvasNode","getViewportNode","getViewports","getActiveViewportNode","setActiveViewportNode","$targetContainers","isBottomSide","isRightSide","$outerdiv","className","$innerdiv","dim","offsetWidth","clientWidth","height","offsetHeight","clientHeight","includeScrollbar","getHeadersWidthL","getHeadersWidthR","availableWidth","totalRowWidth","updateCanvasWidth","forceColumnWidthsUpdate","oldCanvasWidth","oldCanvasWidthL","oldCanvasWidthR","widthChanged","applyColumnWidths","$target","supportedHeight","testUpTo","navigator","userAgent","toLowerCase","div","getUID","getHeaderColumnWidthDiff","getScrollbarDimensions","getDisplayedScrollbarDimensions","getAbsoluteColumnMinWidth","parentNode","scrollWidth","scrollHeight","$elem","handleActiveCellPositionChange","unbindAncestorScrollEvents","off","updateColumnHeader","columnId","toolTip","columnDef","$header","children","eq","onBeforeHeaderCellDestroy","html","onHeaderCellRendered","getHeader","getHeaderColumn","targetHeader","targetIndex","$rtn","getHeaderRow","getFooterRow","getPreHeaderPanel","getPreHeaderPanelRight","getHeaderRowColumn","$headerRowTarget","getFooterRowColumn","$footerRowTarget","$footer","find","onBeforeFooterRowCellDestroy","m","footerRowCell","onFooterRowCellRendered","columnsLength","frozenColumnsValid","groupColumns","indexGroup","alert","applyColumnGroupHeaderWidths","onMouseEnter","onMouseLeave","removeClass","onBeforeHeaderRowCellDestroy","$headerTarget","header","headerCellAttrs","append","headerRowCell","onHeaderRowCellRendered","setSortColumns","setupColumnResize","setColumns","setupColumnReorder","metaKey","ctrlKey","hasClass","$col","getEditorLock","previousSortColumns","sortColumn","hadSortCol","shiftKey","onSortArgs","sortCol","sortCols","col","onBeforeSort","onSort","currentPositionInHeader","currentPosition","limitPositionInGroup","idColumn","groupColumnOfPreviousPosition","startLimit","endLimit","some","groupColumn","start","end","lastIndexOf","columnPositionValidInGroup","$item","limit","positionValid","message","columnScrollTimer","scrollColumnsRight","scrollColumnsLeft","canDragScroll","containment","axis","cursor","tolerance","helper","placeholder","ui","outerWidth","beforeStop","setInterval","clearInterval","stop","cancel","validPositionInGroup","reorderedIds","reorderedColumns","onColumnsReordered","impactedColumns","getImpactedColumns","k","columnElements","minPageX","maxPageX","firstResizable","lastResizable","frozenLeftColMaxWidth","parent","shrinkLeewayOnRight","stretchLeewayOnRight","previousWidth","shrinkLeewayOnLeft","stretchLeewayOnLeft","actualMinWidth","d","newCanvasWidthL","newCanvasWidthR","viewportWidth","newWidth","resizedCanvasWidthL","applyColumnHeaderWidths","syncColumnCellResize","onColumnsDrag","triggeredByColumn","resizeHandle","onBeforeColumnsResize","invalidateAllRows","onColumnsResized","setTimeout","onColumnsResizeDblClick","getVBoxDelta","$el","delta","parseInt","dataLength","getDataLength","show","el","verArray","rules","styleSheet","cssText","appendChild","createTextNode","getColumnCssRules","sheets","styleSheets","ownerNode","owningElement","cssRules","columnIdx","selector","selectorText","exec","substr","removeCssRules","shouldDestroyAllElements","onBeforeDestroy","destroyAllElements","canvas","canvas_context","autosizeColumn","columnOrIndexOrId","isInit","Id","$gridCanvas","getColAutosizeWidth","autosizeColumns","legacyAutosizeColumns","createElement","getContext","reRender","totalWidth","totalWidthLessSTR","strColsMinWidth","totalMinWidth","totalLockedColWidth","autoSize","strColTotalGuideWidth","setWidth","totalSTRViewportWidth","unallocatedColWidth","unallocatedViewportWidth","reRenderColumns","LogColWidths","console","log","dl","colDataItem","tempRow","getDataItem","moment","getColContentSize","addlPercentMultiplier","widthAdjustRatio","maxColWidth","headerWidth","getColHeaderWidth","getColWidth","rowsDict","keys","tempVal","maxVal","maxAbsVal","abs","maxLen","maxIndex","colIndex","$rowEl","$cellEl","maxText","formatterResult","font","isArray","measureText","applyFormatResultToCellNode","headerColElId","headerColEl","getElementById","dummyHeaderColElId","cloneNode","removeChild","widths","shrinkLeeway","total","prevTotal","availWidth","shrinkProportion","absMinWidth","shrinkSize","growProportion","currentWidth","growSize","onAutosizeColumns","evt","getEditController","$groupHeader","currentColumnIndex","$groupHeaderColumn","$headerColumn","headers","rule","right","setSortColumn","cols","numberCols","headerColumnEls","columnIndex","getSortColumns","ranges","previousSelectedRows","canCellBeSelected","simpleArrayEquals","caller","detail","newSelectedAdditions","newSelectedDeletions","changedSelectedRows","changedUnselectedRows","arr1","arr2","getColumns","widthRequest","columnDefinitions","onBeforeSetColumns","previousColumns","newColumns","_treeColumns","setOptions","suppressRender","suppressColumnSet","suppressSetOverflow","makeActiveCellNormal","setColumnHeaderVisibility","invalidateRow","originalOptions","onSetOptions","viewportEvents","_data","setData","newData","scrollToTop","updateRowCount","scrollTo","getDataLengthIncludingAddNew","getTopPanel","setTopPanelVisibility","animate","animated","slideDown","slideUp","setHeaderRowVisibility","setFooterRowVisibility","setPreHeaderPanelVisibility","getContainerNode","getRowTop","getRowFromPosition","y","oldOffset","newScrollTop","getVisibleRange","cleanupRows","updateRowPositions","onViewportChanged","dataContext","getFormatter","rowMetadata","columnOverrides","getEditor","columnMetadata","editor","getDataItemValueForColumn","appendRowHtml","stringArrayL","stringArrayR","dataLoading","rowCss","cssClasses","frozenRowOffset","getFrozenRowOffset","rowHtml","columnData","leftPx","alwaysRenderColumn","rightPx","appendCellHtml","stringArray","cellCss","addlCssClasses","onBeforeAppendCell","customAttrStr","cellAttrs","cellRenderQueue","cellColSpans","rangeToKeep","removeFrozenRow","bottom","removeRowFromCache","startPostProcessingCleanup","invalidate","queuePostProcessedRowForCleanup","cacheEntry","postProcessedRow","rowIdx","actionType","groupId","cellNodesByColumnIdx","rowNode","detach","queuePostProcessedCellForCleanup","cellnode","parentElement","invalidateRows","cellNode","suppressRemove","innerHTML","sanitizeHtmlString","updateCell","getCellNode","loadValue","invalidatePostProcessingResults","updateRow","ensureCellNodesInRowsCache","fullHeight","outerHeight","columnNamesH","preHeaderH","paneBottomTop","updatePagingStatusFromView","pagingInfo","dataLengthIncludingAddNew","numberOfRows","oldH","tempViewportH","oldViewportHasVScroll","r1","resetActiveCell","oldScrollTopInRange","viewportTop","viewportLeft","getRenderedRange","buffer","minBuffer","$lastNode","last","pop","prev","cleanUpCells","totalCellsRemoved","cellsToRemove","cellToRemove","cleanUpAndRenderCells","processedRows","cellsAdded","totalCellsAdded","btm","processedRow","lastChild","renderRows","needToReselectCell","xRight","firstChild","startPostProcessing","clearTimeout","asyncPostProcessRows","asyncPostProcessCleanupRows","rowNumber","dequeue","rendered","renderedFrozenRows","onRendered","startRow","endRow","handleHeaderScroll","handleElementScroll","_handleScroll","isMouseWheel","maxScrollDistanceY","maxScrollDistanceX","vScrollDist","hScrollDist","dx","dy","enqueue","onScroll","action","minPeriod_ms","blocked","queued","blockAndExecute","unblock","processedStatus","asyncPostRender","entry","shift","asyncPostRenderCleanup","updateCellCssStylesOnRenderedRows","addedHash","removedHash","addedRowHash","removedRowHash","addCellCssStyles","removeCellCssStyles","prevHash","flashCell","speed","toggleCellClass","$cell","times","queue","handled","getCellFromEvent","cellExists","onDragInit","onDragStart","onDrag","onDragEnd","onKeyDown","keyCode","altKey","keyCaptureList","navigateTop","navigateRowStart","navigateBottom","navigateRowEnd","cancelEditAndSetFocus","navigatePageDown","navigatePageUp","navigateLeft","navigateRight","navigateUp","navigateDown","navigateNext","commitEditAndSetFocus","makeActiveCellEditable","navigatePrev","error","activeElement","selection","getTextSelection","setFocus","setTextSelection","onClick","canCellBeActive","scrollRowIntoView","preClickModeOn","preClickClassName","suppressActiveCellChangedEvent","setActiveCellInternal","onContextMenu","onDblClick","gotoCell","onHeaderMouseEnter","onHeaderMouseLeave","onHeaderRowMouseEnter","onHeaderRowMouseLeave","onHeaderContextMenu","onHeaderClick","onFooterContextMenu","onFooterClick","getCellFromPoint","getCellFromNode","cls","getRowFromNode","rowOffset","isBottom","clientX","clientY","getCellNodeBox","y1","y2","x1","x2","focus","scrollCellIntoView","getColspan","internalScrollColumnIntoView","scrollRight","scrollColumnIntoView","newCell","opt_editMode","activeCellChanged","$activeCellNode","$activeCellOffset","isCellPotentiallyEditable","onActiveCellChanged","getActiveCell","clearTextSelection","getSelection","sel","removeAllRanges","cannotTriggerInsert","onBeforeCellEditorDestroy","onBeforeEditCell","useEditor","suppressClearOnEdit","columnMetaData","gridPosition","absBox","commitChanges","cancelChanges","preClick","serializeValue","box","offsetTop","offsetLeft","offsetParent","getActiveCellPosition","getGridPosition","onActiveCellPositionChanged","cellBox","getCellEditor","getActiveCellNode","textSelection","rangeCount","getRangeAt","addRange","viewportScrollH","rowAtTop","rowAtBottom","scrollRowToTop","scrollPage","dir","deltaRows","bottomOfTopmostFullyVisibleRow","prevCell","prevActivePosX","navigateToRow","num_rows","findFirstFocusableCell","findLastFocusableCell","lastFocusableCell","gotoRight","posX","gotoLeft","firstFocusableCell","pos","gotoDown","gotoUp","gotoNext","gotoPrev","lastSelectableCell","gotoRowStart","gotoRowEnd","navigate","tabbingDirections","stepFunctions","stepFn","isAddNewRow","setActiveCell","setActiveRow","suppressScrollIntoView","forceEdit","isValueChanged","validationResults","validate","editCommand","serializedValue","prevSerializedValue","execute","applyValue","onCellChange","undo","editCommandHandler","newItem","onAddNewRow","onValidationError","rowsToRanges","lastCell","setSelectedRanges","dirtyHtml","sanitizer","dirtyHtmlStr","debug","eval","expr"],"mappings":"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","file":"9142.38666818a55cfaef1121.js?v=38666818a55cfaef1121","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp-Grid {\\n    color: var(--jp-ui-font-color0);\\n    background-color: var(--jp-rendermime-table-row-background);\\n}\\n\\n.sp-GridHeader {\\n    font-weight: bold;\\n    background-color: var(--jp-border-color2);\\n    color: var(--jp-ui-font-color0);\\n}\\n\\n.sp-Row-Index {\\n    border-right-style: solid;\\n    background-color: var(--jp-border-color2);\\n}\\n\\n.sp-Cell {\\n    white-space: pre;\\n}\\n\\n.sp-Cell-Number {\\n    text-align: end;\\n}\\n\\n.sp-Cell-Error {\\n    font-weight: bold;\\n    color: red;\\n}\\n\\n.sp-Cell-MergeDown {\\n    border-bottom-color: transparent;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/jupyterlab-spreadsheet/style/grid.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,+BAA+B;IAC/B,2DAA2D;AAC/D;;AAEA;IACI,iBAAiB;IACjB,yCAAyC;IACzC,+BAA+B;AACnC;;AAEA;IACI,yBAAyB;IACzB,yCAAyC;AAC7C;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,gCAAgC;AACpC\",\"sourcesContent\":[\".sp-Grid {\\n    color: var(--jp-ui-font-color0);\\n    background-color: var(--jp-rendermime-table-row-background);\\n}\\n\\n.sp-GridHeader {\\n    font-weight: bold;\\n    background-color: var(--jp-border-color2);\\n    color: var(--jp-ui-font-color0);\\n}\\n\\n.sp-Row-Index {\\n    border-right-style: solid;\\n    background-color: var(--jp-border-color2);\\n}\\n\\n.sp-Cell {\\n    white-space: pre;\\n}\\n\\n.sp-Cell-Number {\\n    text-align: end;\\n}\\n\\n.sp-Cell-Error {\\n    font-weight: bold;\\n    color: red;\\n}\\n\\n.sp-Cell-MergeDown {\\n    border-bottom-color: transparent;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp-SpreadsheetWidget > .p-TabBar {\\n    height: 26px;\\n    background-color: var(--jp-border-color1);\\n    padding-left: 10px;\\n}\\n\\n.sp-SpreadsheetWidget > .p-TabBar .p-TabBar-tab {\\n    padding: 0 0.5em;\\n    background-color: var(--jp-layout-color2);\\n    border: 1px solid var(--jp-border-color1);\\n    border-left: 0px;\\n    border-bottom: 0px;\\n    color: var(--jp-ui-font-color0);\\n}\\n\\n.sp-SpreadsheetWidget > .p-TabBar .p-TabBar-tab.p-mod-current {\\n    background-color: var(--jp-layout-color0);\\n    border-top: 0px;\\n    border-bottom: 2px solid var(--jp-brand-color0);\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/jupyterlab-spreadsheet/style/widget.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,YAAY;IACZ,yCAAyC;IACzC,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,yCAAyC;IACzC,yCAAyC;IACzC,gBAAgB;IAChB,kBAAkB;IAClB,+BAA+B;AACnC;;AAEA;IACI,yCAAyC;IACzC,eAAe;IACf,+CAA+C;AACnD\",\"sourcesContent\":[\".sp-SpreadsheetWidget > .p-TabBar {\\n    height: 26px;\\n    background-color: var(--jp-border-color1);\\n    padding-left: 10px;\\n}\\n\\n.sp-SpreadsheetWidget > .p-TabBar .p-TabBar-tab {\\n    padding: 0 0.5em;\\n    background-color: var(--jp-layout-color2);\\n    border: 1px solid var(--jp-border-color1);\\n    border-left: 0px;\\n    border-bottom: 0px;\\n    color: var(--jp-ui-font-color0);\\n}\\n\\n.sp-SpreadsheetWidget > .p-TabBar .p-TabBar-tab.p-mod-current {\\n    background-color: var(--jp-layout-color0);\\n    border-top: 0px;\\n    border-bottom: 2px solid var(--jp-brand-color0);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"./images/sort-desc.gif\";\nimport ___CSS_LOADER_URL_IMPORT_1___ from \"./images/sort-asc.gif\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\r\\nIMPORTANT:\\r\\nIn order to preserve the uniform grid appearance, all cell styles need to have padding, margin and border sizes.\\r\\nNo built-in (selected, editable, highlight, flashing, invalid, loading, :focus) or user-specified CSS\\r\\nclasses should alter those!\\r\\n*/\\r\\n\\r\\n.slick-header.ui-state-default, .slick-headerrow.ui-state-default, .slick-footerrow.ui-state-default, .slick-top-panel-scroller.ui-state-default, .slick-group-header.ui-state-default {\\r\\n  width: 100%;\\r\\n  overflow: auto;\\r\\n  position: relative;\\r\\n  border-left: 0px !important;\\r\\n}\\r\\n\\r\\n.slick-header.ui-state-default {\\r\\n  overflow: inherit;\\r\\n}\\r\\n\\r\\n.slick-header::-webkit-scrollbar,  .slick-headerrow::-webkit-scrollbar, .slick-footerrow::-webkit-scrollbar {\\r\\n  display: none\\r\\n}\\r\\n\\r\\n.slick-header-columns, .slick-headerrow-columns, .slick-footerrow-columns, .slick-group-header-columns {\\r\\n  position: relative;\\r\\n  white-space: nowrap;\\r\\n  cursor: default;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.slick-header-column.ui-state-default, .slick-group-header-column.ui-state-default {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  box-sizing: content-box !important; /* this here only for Firefox! */ \\r\\n  overflow: hidden;\\r\\n  -o-text-overflow: ellipsis;\\r\\n  text-overflow: ellipsis;\\r\\n  height: 16px;\\r\\n  line-height: 16px;\\r\\n  margin: 0;\\r\\n  padding: 4px;\\r\\n  border-right: 1px solid silver;\\r\\n  border-left: 0px !important;\\r\\n  border-top: 0px !important;\\r\\n  border-bottom: 0px !important;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.slick-footerrow-column.ui-state-default {\\r\\n  -o-text-overflow: ellipsis;\\r\\n  text-overflow: ellipsis;\\r\\n  margin: 0;\\r\\n  padding: 4px;\\r\\n  border-right: 1px solid silver;\\r\\n  border-left: 0px;\\r\\n  border-top: 0px;\\r\\n  border-bottom: 0px;\\r\\n  float: left;\\r\\n  line-height: 20px;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.slick-headerrow-column.ui-state-default, .slick-footerrow-column.ui-state-default {\\r\\n  padding: 4px;\\r\\n}\\r\\n\\r\\n.slick-header-column-sorted {\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\n.slick-sort-indicator {\\r\\n  display: inline-block;\\r\\n  width: 8px;\\r\\n  height: 5px;\\r\\n  margin-left: 4px;\\r\\n  margin-top: 6px;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.slick-sort-indicator-numbered {\\r\\n  display: inline-block;\\r\\n  width: 8px;\\r\\n  height: 5px;\\r\\n  margin-left: 4px;\\r\\n  margin-top: 0;\\r\\n  line-height: 20px;\\r\\n  float: left;\\r\\n  font-family: Arial;\\r\\n  font-style: normal;\\r\\n  font-weight: bold;\\r\\n  color: #6190CD;\\r\\n}\\r\\n\\r\\n.slick-sort-indicator-desc {\\r\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\r\\n}\\r\\n\\r\\n.slick-sort-indicator-asc {\\r\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\r\\n}\\r\\n\\r\\n.slick-resizable-handle {\\r\\n  position: absolute;\\r\\n  font-size: 0.1px;\\r\\n  display: block;\\r\\n  cursor: col-resize;\\r\\n  width: 9px;\\r\\n  right: -5px;\\r\\n  top: 0;\\r\\n  height: 100%;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.slick-sortable-placeholder {\\r\\n  background: silver;\\r\\n}\\r\\n\\r\\n.grid-canvas {\\r\\n  position: relative;\\r\\n  outline: 0;\\r\\n}\\r\\n\\r\\n.slick-row.ui-widget-content, .slick-row.ui-state-active {\\r\\n  position: absolute;\\r\\n  border: 0px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.slick-cell, .slick-headerrow-column , .slick-footerrow-column{\\r\\n  position: absolute;\\r\\n  border: 1px solid transparent;\\r\\n  border-right: 1px dotted silver;\\r\\n  border-bottom-color: silver;\\r\\n  overflow: hidden;\\r\\n  -o-text-overflow: ellipsis;\\r\\n  text-overflow: ellipsis;\\r\\n  vertical-align: middle;\\r\\n  z-index: 1;\\r\\n  padding: 1px 2px 2px 1px;\\r\\n  margin: 0;\\r\\n  white-space: nowrap;\\r\\n  cursor: default;\\r\\n}\\r\\n.slick-cell, .slick-headerrow-column{\\r\\n  border-bottom-color: silver;\\r\\n}\\r\\n.slick-footerrow-column {\\r\\n  border-top-color: silver;\\r\\n}\\r\\n\\r\\n.slick-group {\\r\\n}\\r\\n\\r\\n.slick-group-toggle {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.slick-cell.highlighted {\\r\\n  background: lightskyblue;\\r\\n  background: rgba(0, 0, 255, 0.2);\\r\\n  -webkit-transition: all 0.5s;\\r\\n  -moz-transition: all 0.5s;\\r\\n  -o-transition: all 0.5s;\\r\\n  transition: all 0.5s;\\r\\n}\\r\\n\\r\\n.slick-cell.flashing {\\r\\n  border: 1px solid red !important;\\r\\n}\\r\\n\\r\\n.slick-cell.editable {\\r\\n  z-index: 11;\\r\\n  overflow: visible;\\r\\n  background: white;\\r\\n  border-color: black;\\r\\n  border-style: solid;\\r\\n}\\r\\n\\r\\n.slick-cell:focus {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.slick-reorder-proxy {\\r\\n  display: inline-block;\\r\\n  background: blue;\\r\\n  opacity: 0.15;\\r\\n  filter: alpha(opacity = 15);\\r\\n  cursor: move;\\r\\n}\\r\\n\\r\\n.slick-reorder-guide {\\r\\n  display: inline-block;\\r\\n  height: 2px;\\r\\n  background: blue;\\r\\n  opacity: 0.7;\\r\\n  filter: alpha(opacity = 70);\\r\\n}\\r\\n\\r\\n.slick-reorder-shadow-row {\\r\\n  position: absolute;\\r\\n  z-index: 999999;\\r\\n  box-shadow: rgb(0 0 0 / 20%) 8px 2px 8px 4px, rgb(0 0 0 / 19%) 2px 2px 0px 0px;\\r\\n}\\r\\n\\r\\n.slick-selection {\\r\\n  z-index: 10;\\r\\n  position: absolute;\\r\\n  border: 2px dashed black;\\r\\n}\\r\\n\\r\\n.slick-pane {\\r\\n  position: absolute;\\r\\n  outline: 0;\\r\\n  overflow: hidden;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.slick-pane-header {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.slick-header {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.slick-headerrow {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.slick-top-panel-scroller {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.slick-top-panel {\\r\\n  width: 10000px\\r\\n}\\r\\n\\r\\n.slick-viewport {\\r\\n  position: relative;\\r\\n  outline: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/slickgrid/slick.grid.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;CAKC;;AAED;EACE,WAAW;EACX,cAAc;EACd,kBAAkB;EAClB,2BAA2B;AAC7B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE;AACF;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;EACrB,kCAAkC,EAAE,gCAAgC;EACpE,gBAAgB;EAChB,0BAA0B;EAC1B,uBAAuB;EACvB,YAAY;EACZ,iBAAiB;EACjB,SAAS;EACT,YAAY;EACZ,8BAA8B;EAC9B,2BAA2B;EAC3B,0BAA0B;EAC1B,6BAA6B;EAC7B,WAAW;AACb;;AAEA;EACE,0BAA0B;EAC1B,uBAAuB;EACvB,SAAS;EACT,YAAY;EACZ,8BAA8B;EAC9B,gBAAgB;EAChB,eAAe;EACf,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;EACrB,UAAU;EACV,WAAW;EACX,gBAAgB;EAChB,eAAe;EACf,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,UAAU;EACV,WAAW;EACX,gBAAgB;EAChB,aAAa;EACb,iBAAiB;EACjB,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,mDAAqC;AACvC;;AAEA;EACE,mDAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,cAAc;EACd,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,MAAM;EACN,YAAY;EACZ,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,+BAA+B;EAC/B,2BAA2B;EAC3B,gBAAgB;EAChB,0BAA0B;EAC1B,uBAAuB;EACvB,sBAAsB;EACtB,UAAU;EACV,wBAAwB;EACxB,SAAS;EACT,mBAAmB;EACnB,eAAe;AACjB;AACA;EACE,2BAA2B;AAC7B;AACA;EACE,wBAAwB;AAC1B;;AAEA;AACA;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,wBAAwB;EACxB,gCAAgC;EAChC,4BAA4B;EAC5B,yBAAyB;EACzB,uBAAuB;EACvB,oBAAoB;AACtB;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,iBAAiB;EACjB,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;EAChB,aAAa;EACb,2BAA2B;EAC3B,YAAY;AACd;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,2BAA2B;AAC7B;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,8EAA8E;AAChF;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE;AACF;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,WAAW;AACb\",\"sourcesContent\":[\"/*\\r\\nIMPORTANT:\\r\\nIn order to preserve the uniform grid appearance, all cell styles need to have padding, margin and border sizes.\\r\\nNo built-in (selected, editable, highlight, flashing, invalid, loading, :focus) or user-specified CSS\\r\\nclasses should alter those!\\r\\n*/\\r\\n\\r\\n.slick-header.ui-state-default, .slick-headerrow.ui-state-default, .slick-footerrow.ui-state-default, .slick-top-panel-scroller.ui-state-default, .slick-group-header.ui-state-default {\\r\\n  width: 100%;\\r\\n  overflow: auto;\\r\\n  position: relative;\\r\\n  border-left: 0px !important;\\r\\n}\\r\\n\\r\\n.slick-header.ui-state-default {\\r\\n  overflow: inherit;\\r\\n}\\r\\n\\r\\n.slick-header::-webkit-scrollbar,  .slick-headerrow::-webkit-scrollbar, .slick-footerrow::-webkit-scrollbar {\\r\\n  display: none\\r\\n}\\r\\n\\r\\n.slick-header-columns, .slick-headerrow-columns, .slick-footerrow-columns, .slick-group-header-columns {\\r\\n  position: relative;\\r\\n  white-space: nowrap;\\r\\n  cursor: default;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.slick-header-column.ui-state-default, .slick-group-header-column.ui-state-default {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  box-sizing: content-box !important; /* this here only for Firefox! */ \\r\\n  overflow: hidden;\\r\\n  -o-text-overflow: ellipsis;\\r\\n  text-overflow: ellipsis;\\r\\n  height: 16px;\\r\\n  line-height: 16px;\\r\\n  margin: 0;\\r\\n  padding: 4px;\\r\\n  border-right: 1px solid silver;\\r\\n  border-left: 0px !important;\\r\\n  border-top: 0px !important;\\r\\n  border-bottom: 0px !important;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.slick-footerrow-column.ui-state-default {\\r\\n  -o-text-overflow: ellipsis;\\r\\n  text-overflow: ellipsis;\\r\\n  margin: 0;\\r\\n  padding: 4px;\\r\\n  border-right: 1px solid silver;\\r\\n  border-left: 0px;\\r\\n  border-top: 0px;\\r\\n  border-bottom: 0px;\\r\\n  float: left;\\r\\n  line-height: 20px;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.slick-headerrow-column.ui-state-default, .slick-footerrow-column.ui-state-default {\\r\\n  padding: 4px;\\r\\n}\\r\\n\\r\\n.slick-header-column-sorted {\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\n.slick-sort-indicator {\\r\\n  display: inline-block;\\r\\n  width: 8px;\\r\\n  height: 5px;\\r\\n  margin-left: 4px;\\r\\n  margin-top: 6px;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.slick-sort-indicator-numbered {\\r\\n  display: inline-block;\\r\\n  width: 8px;\\r\\n  height: 5px;\\r\\n  margin-left: 4px;\\r\\n  margin-top: 0;\\r\\n  line-height: 20px;\\r\\n  float: left;\\r\\n  font-family: Arial;\\r\\n  font-style: normal;\\r\\n  font-weight: bold;\\r\\n  color: #6190CD;\\r\\n}\\r\\n\\r\\n.slick-sort-indicator-desc {\\r\\n  background: url(images/sort-desc.gif);\\r\\n}\\r\\n\\r\\n.slick-sort-indicator-asc {\\r\\n  background: url(images/sort-asc.gif);\\r\\n}\\r\\n\\r\\n.slick-resizable-handle {\\r\\n  position: absolute;\\r\\n  font-size: 0.1px;\\r\\n  display: block;\\r\\n  cursor: col-resize;\\r\\n  width: 9px;\\r\\n  right: -5px;\\r\\n  top: 0;\\r\\n  height: 100%;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.slick-sortable-placeholder {\\r\\n  background: silver;\\r\\n}\\r\\n\\r\\n.grid-canvas {\\r\\n  position: relative;\\r\\n  outline: 0;\\r\\n}\\r\\n\\r\\n.slick-row.ui-widget-content, .slick-row.ui-state-active {\\r\\n  position: absolute;\\r\\n  border: 0px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.slick-cell, .slick-headerrow-column , .slick-footerrow-column{\\r\\n  position: absolute;\\r\\n  border: 1px solid transparent;\\r\\n  border-right: 1px dotted silver;\\r\\n  border-bottom-color: silver;\\r\\n  overflow: hidden;\\r\\n  -o-text-overflow: ellipsis;\\r\\n  text-overflow: ellipsis;\\r\\n  vertical-align: middle;\\r\\n  z-index: 1;\\r\\n  padding: 1px 2px 2px 1px;\\r\\n  margin: 0;\\r\\n  white-space: nowrap;\\r\\n  cursor: default;\\r\\n}\\r\\n.slick-cell, .slick-headerrow-column{\\r\\n  border-bottom-color: silver;\\r\\n}\\r\\n.slick-footerrow-column {\\r\\n  border-top-color: silver;\\r\\n}\\r\\n\\r\\n.slick-group {\\r\\n}\\r\\n\\r\\n.slick-group-toggle {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.slick-cell.highlighted {\\r\\n  background: lightskyblue;\\r\\n  background: rgba(0, 0, 255, 0.2);\\r\\n  -webkit-transition: all 0.5s;\\r\\n  -moz-transition: all 0.5s;\\r\\n  -o-transition: all 0.5s;\\r\\n  transition: all 0.5s;\\r\\n}\\r\\n\\r\\n.slick-cell.flashing {\\r\\n  border: 1px solid red !important;\\r\\n}\\r\\n\\r\\n.slick-cell.editable {\\r\\n  z-index: 11;\\r\\n  overflow: visible;\\r\\n  background: white;\\r\\n  border-color: black;\\r\\n  border-style: solid;\\r\\n}\\r\\n\\r\\n.slick-cell:focus {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.slick-reorder-proxy {\\r\\n  display: inline-block;\\r\\n  background: blue;\\r\\n  opacity: 0.15;\\r\\n  filter: alpha(opacity = 15);\\r\\n  cursor: move;\\r\\n}\\r\\n\\r\\n.slick-reorder-guide {\\r\\n  display: inline-block;\\r\\n  height: 2px;\\r\\n  background: blue;\\r\\n  opacity: 0.7;\\r\\n  filter: alpha(opacity = 70);\\r\\n}\\r\\n\\r\\n.slick-reorder-shadow-row {\\r\\n  position: absolute;\\r\\n  z-index: 999999;\\r\\n  box-shadow: rgb(0 0 0 / 20%) 8px 2px 8px 4px, rgb(0 0 0 / 19%) 2px 2px 0px 0px;\\r\\n}\\r\\n\\r\\n.slick-selection {\\r\\n  z-index: 10;\\r\\n  position: absolute;\\r\\n  border: 2px dashed black;\\r\\n}\\r\\n\\r\\n.slick-pane {\\r\\n  position: absolute;\\r\\n  outline: 0;\\r\\n  overflow: hidden;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.slick-pane-header {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.slick-header {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.slick-headerrow {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.slick-top-panel-scroller {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.slick-top-panel {\\r\\n  width: 10000px\\r\\n}\\r\\n\\r\\n.slick-viewport {\\r\\n  position: relative;\\r\\n  outline: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var ___EXPOSE_LOADER_IMPORT___ = require(\"-!./jquery.js\");\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\"../../expose-loader/dist/runtime/getGlobalThis.js\");\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"$\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"$\"] = ___EXPOSE_LOADER_IMPORT___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"jQuery\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"jQuery\"] = ___EXPOSE_LOADER_IMPORT___;\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n","\"use strict\";\n\n// eslint-disable-next-line func-names\nmodule.exports = function () {\n  if (typeof globalThis === \"object\") {\n    return globalThis;\n  }\n\n  var g;\n\n  try {\n    // This works if eval is allowed (see CSP)\n    // eslint-disable-next-line no-new-func\n    g = this || new Function(\"return this\")();\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === \"object\") {\n      return window;\n    } // This works if the self reference is available\n\n\n    if (typeof self === \"object\") {\n      return self;\n    } // This works if the global reference is available\n\n\n    if (typeof global !== \"undefined\") {\n      return global;\n    }\n  }\n\n  return g;\n}();","export default __webpack_public_path__ + \"a320ae93e846a3918e40919ba7e78efb9da208a3d3708f355da3979bdd09d3b3.gif\";","export default __webpack_public_path__ + \"dd4b6c9f688cf8d29e01bf94a5d10c6d5d285f73dc2c0e124ba205127533e165.gif\";","import { read, utils } from \"xlsx\";\nimport { Subject } from \"rxjs\";\nexport class SpreadsheetModel {\n    constructor({ value }) {\n        this._workbookChanged = new Subject();\n        this._sheetChanged = new Subject();\n        this._activeSheet = null;\n        this._isDisposed = false;\n        this._value = value;\n        this._subscription = value.subscribe(this.handleContentChanged.bind(this));\n    }\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    get workbookChanged() {\n        return this._workbookChanged;\n    }\n    /** A Signal that emits whenever the selected sheet has changed.\n     *\n     * Changes of this nature often require a re-render of the slickgrid\n     */\n    get sheetChanged() {\n        return this._sheetChanged;\n    }\n    /** Return the currently selected sheet, or null if no sheet is selected */\n    get activeSheet() {\n        return this._activeSheet;\n    }\n    /**\n     * Dispose all resources held by this model, including the worksheet model.\n     * This will render the model unusable.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._sheetChanged.complete();\n        this._workbookChanged.complete();\n        this._subscription.unsubscribe();\n        // Make sure that the workbook isn't pinned in memory by this object\n        delete this._workbook;\n    }\n    /**\n     * Set the worksheet to display, and trigger the sheetChanged event.\n     * @see sheetChanged\n     */\n    setSheet(name) {\n        this._activeSheet = name;\n        this._sheetChanged.next(name);\n    }\n    /**\n     * Get the sheet names for the active workbook.\n     *\n     * If the workbook is null, this will return an empty array.\n     */\n    getSheetNames() {\n        if (this._workbook == null) {\n            return [];\n        }\n        return this._workbook.SheetNames;\n    }\n    /**\n     * Returns the extent of the current sheet, from the top-left A1 column to\n     * the bottom-right-most cell, so that views can calculate columns and\n     * row numbers.\n     */\n    getExtent() {\n        if (this._activeSheet == null || this._workbook == null) {\n            return { s: { c: 0, r: 0 }, e: { c: 0, r: 0 } };\n        }\n        const sheetData = this._workbook.Sheets[this._activeSheet];\n        // if undefined, SheetJS spec allows us to assume it is empty\n        // cf. https://github.com/SheetJS/js-xlsx#sheet-objects, \"Special Sheet Keys\"\n        // TODO: Low: Inspect sheet data to attempt to guess at the true size\n        const range = sheetData[\"!ref\"] || \"A1:A1\";\n        // This range is _not_ from the top-left cell! It's from the first\n        // cell _with_ data, so it can actually skip rows/columns. We can't\n        // allow this as it'll cause misaligned rendering.\n        const sheetRangeExclusive = utils.decode_range(range);\n        // force the start of the range to be the top-most cell, always\n        sheetRangeExclusive.s = { c: 0, r: 0 };\n        return sheetRangeExclusive;\n    }\n    /**\n     * Returns the number of rows in the active worksheet\n     */\n    getLength() {\n        const extent = this.getExtent();\n        // `end.row - start.row` plus one, since end is inclusive\n        return extent.e.r - extent.s.r + 1;\n    }\n    /**\n     * Returns the SlickGrid model for a single row\n     */\n    getItem(r) {\n        const rowModel = { id: r };\n        if (this._workbook == null || this._activeSheet == null) {\n            return Object.freeze(rowModel);\n        }\n        const sheetData = this._workbook.Sheets[this._activeSheet];\n        const range = this.getExtent();\n        // `end.col - start.col`\n        const nCols = range.e.c - range.s.c;\n        for (let c = 0; c <= nCols; c++) {\n            const cell = utils.encode_cell({ r, c });\n            let data = null;\n            if (cell in sheetData) {\n                data = sheetData[cell];\n            }\n            rowModel[\"c\" + c] = data;\n        }\n        return Object.freeze(rowModel);\n    }\n    getItemMetadata(index) {\n        const metadata = {\n            columns: {}\n        };\n        if (this._workbook == null || this._activeSheet == null) {\n            return Object.freeze(metadata);\n        }\n        const sheetData = this._workbook.Sheets[this._activeSheet];\n        if (sheetData[\"!merges\"] == null) {\n            return Object.freeze(metadata);\n        }\n        const merges = sheetData[\"!merges\"];\n        for (let i = 0; i < merges.length; i++) {\n            const merge = merges[i];\n            if (index < merge.s.r || merge.e.r < index) {\n                continue;\n            }\n            // whether the merge continues below this row\n            const mergeDown = merge.e.r - merge.s.r > 0 && index < merge.e.r;\n            // eslint-disable-next-line\n            metadata.columns[\"c\" + merge.s.c] = {\n                colspan: merge.e.c - merge.s.c + 1,\n                mergeDown\n            };\n        }\n        return Object.freeze(metadata);\n    }\n    /**\n     * Returns a SlickGrid column config, respecting formatting options in the sheet\n     * @param sheetData The worksheet to generate the columns from\n     */\n    getColumnConfig() {\n        if (this._workbook == null || this._activeSheet == null) {\n            return [];\n        }\n        const sheetData = this._workbook.Sheets[this._activeSheet];\n        const range = this.getExtent();\n        const config = [\n            {\n                // row number\n                id: \"row\",\n                name: \"#\",\n                field: \"id\",\n                cssClass: \"sp-Row-Index\",\n                headerCssClass: \"sp-GridHeader\",\n                formatter: (cell, row, value) => \"\" + (1 + value)\n            }\n        ];\n        for (let i = range.s.c; i <= range.e.c; i++) {\n            const colName = utils.encode_col(i);\n            const colWidth = (sheetData[\"!cols\"]) ? sheetData[\"!cols\"][i].width : void 0;\n            config.push({\n                id: \"c\" + i,\n                name: colName,\n                field: \"c\" + i,\n                width: colWidth,\n                headerCssClass: \"sp-GridHeader\"\n            });\n        }\n        return config;\n    }\n    /**\n     * Convert the active sheet to a CSV and return it.\n     */\n    toCsv(sheetName) {\n        const sheetToConv = sheetName || this._activeSheet;\n        if (this._workbook == null || sheetToConv == null) {\n            return null; // no conversion possible\n        }\n        const sheet = this._workbook.Sheets[sheetToConv];\n        return utils.sheet_to_csv(sheet, {\n            FS: \",\"\n        });\n    }\n    handleContentChanged(content) {\n        this._workbook = read(content);\n        this._activeSheet = this._workbook.SheetNames[0];\n        this._workbookChanged.next(void 0);\n    }\n}\n","import { Base64ModelFactory, DocumentModel } from \"@jupyterlab/docregistry\";\nimport { SpreadsheetModel } from \"./model\";\nimport { Subject } from \"rxjs\";\nexport class JupyterSpreadsheetModel extends DocumentModel {\n    constructor(modelDB) {\n        super(void 0, modelDB);\n        this._observable = new Subject();\n        this._model = new SpreadsheetModel({\n            value: this._observable\n        });\n        this._observable.next(this.value.text);\n        this.value.changed.connect(this.valueChanged, this);\n    }\n    get model() { return this._model; }\n    dispose() {\n        if (this.isDisposed)\n            return;\n        this._observable.complete();\n        this.value.changed.disconnect(this.valueChanged, this);\n        this._model.dispose();\n    }\n    valueChanged() {\n        this._observable.next(this.value.text);\n    }\n}\nexport class SpreadsheetModelFactory extends Base64ModelFactory {\n    createNew(languagePreference, modelDB) {\n        return new JupyterSpreadsheetModel(modelDB);\n    }\n    get name() {\n        return \"workbook\";\n    }\n}\n","import api from \"!../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../css-loader/dist/cjs.js!./slick.grid.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","/**\n * Grid formatter\n *\n * This formatter is naive and trusts the output of SheetJS to be largely correct.\n * This won't address all use cases but is a \"good enough\" solution to get the grid\n * to display things in a useful manner.\n *\n * SheetJS exposes the following types:\n *  - `b` (Boolean)\n *  - `e` (Error)- The cell is an error code. The formatted property `w` stores the common name.\n *  - `n` (Number)\n *  - `d` (Date or Date-like)\n *  - `s` (String)\n *  - `z` (Stub)\n *\n * For most cases, the value is plumbed through directly. Cells often have a formatted version\n * available, and the formatter will prefer that before falling back to the raw value. This is\n * the fallback strategy:\n *\n *  - HTML encoded RTF of cell string (`h`)\n *  - Formatted string of the cell (`w`)\n *  - Raw value of the cell, coerced to a string\n *\n * The HTML doesn't really support font renderings. Not like we should go overboard anyway, but\n * it'd be nice to have a faithful rendering from the RTF.\n *\n * The following type-specific cases are handled:\n *\n *  - Number: Right-aligned\n *  - Error: Display the text in bold red\n */\nexport function SpreadsheetFormatter(index, column, value, columnCfg, rowObject, grid) {\n    const cell = value;\n    const returnValue = {\n        text: \"\",\n        addClasses: \"sp-Cell \",\n        removeClasses: \"sp-Cell-Number sp-Cell-Error sp-Cell-MergeDown\"\n    };\n    const metadata = grid.getData().getItemMetadata(index);\n    const colId = columnCfg.id;\n    if (colId && metadata.columns && colId in metadata.columns) {\n        // check mergeDown\n        if (metadata.columns[colId].mergeDown) {\n            returnValue.addClasses += \"sp-Cell-MergeDown \";\n        }\n    }\n    if (cell == null) {\n        return returnValue;\n    }\n    returnValue.text = cell.h || cell.w || (\"\" + cell.v);\n    const type = cell.t;\n    switch (type) {\n        case \"n\":\n            returnValue.addClasses += \"sp-Cell-Number\";\n            break;\n        case \"e\":\n            returnValue.addClasses += \"sp-Cell-Error\";\n            break;\n        default:\n            break; // no real handling we can do\n    }\n    return Object.freeze(returnValue);\n}\n","import api from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../css-loader/dist/cjs.js!./grid.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","//#region SlickGrid ambient imports\n// Because SlickGrid isn't exactly WebPack friendly, comes as a global module, predates NPM, and\n// makes even the most elderly of frameworks feel young, we need to structure our imports\n// carefully. It depends on JQuery and JQuery UI, so we load those first.\n// To get global symbols working, we need to use `expose-loader` to set the global symbol,\n// since we don't have control over the webpack config.\nimport \"expose-loader?exposes=$,jQuery!jquery\";\nimport \"jquery-ui\";\nimport \"slickgrid/lib/jquery.event.drag-2.3.0.js\";\n// Now we load SlickGrid's library folders, in dependency order\nimport \"slickgrid/slick.core.js\";\nimport \"slickgrid/slick.dataview.js\";\nimport \"slickgrid/slick.grid.js\";\n// Finally, the built-in stylesheet to make it work\nimport \"slickgrid/slick.grid.css\";\n//#endregion\nimport { Widget } from \"@lumino/widgets\";\nimport { merge } from \"rxjs\";\nimport { SpreadsheetFormatter } from \"./formatter\";\nimport \"../style/grid.css\";\n/** A convenience wrapper around a SlickGrid component.\n * This wrapper handles things like updating on resize.\n */\nexport class GridWidget extends Widget {\n    constructor({ model }) {\n        super();\n        this.addClass(\"sp-Grid\");\n        this._model = model;\n        this._subscription = merge(model.sheetChanged, model.workbookChanged).subscribe(() => this.update());\n        this._columnConfig = model.getColumnConfig();\n        this._grid = this.buildGrid();\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._subscription.unsubscribe();\n        this._grid.destroy();\n    }\n    onUpdateRequest() {\n        this._columnConfig = this._model.getColumnConfig();\n        this._grid.destroy();\n        this._grid = this.buildGrid();\n    }\n    // TODO: The SlickGrid will might need to be reconstructed after a detatch/attach,\n    // but we have no handling for that right now.\n    onAfterShow() {\n        if (this._grid == null)\n            return;\n        this._grid.render();\n    }\n    onResize() {\n        if (this._grid == null)\n            return;\n        this._grid.resizeCanvas();\n    }\n    // Force a rebuild of the grid to side-step column initialization issues in\n    // SlickGrid\n    buildGrid() {\n        const grid = new Slick.Grid(this.node, this._model, this._columnConfig, {\n            // Cast to any since the typings don't recognize \"advanced\" formatters\n            defaultFormatter: SpreadsheetFormatter,\n            enableColumnReorder: false,\n        });\n        return grid;\n    }\n}\n","import api from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../css-loader/dist/cjs.js!./widget.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { Widget, TabBar, BoxLayout } from \"@lumino/widgets\";\nimport { GridWidget } from \"./grid\";\nimport \"../style/widget.css\";\nexport class SpreadsheetWidget extends Widget {\n    constructor({ model }) {\n        super();\n        this.addClass(SpreadsheetWidget.CSS_CLASS);\n        this.model = model;\n        this.layout = new BoxLayout({});\n        this.grid = new GridWidget({ model });\n        this.tabBar = new TabBar({\n            allowDeselect: false,\n            tabsMovable: false\n        });\n        this.layout.addWidget(this.grid);\n        this.layout.addWidget(this.tabBar);\n        BoxLayout.setSizeBasis(this.tabBar, 26);\n        BoxLayout.setStretch(this.grid, 1);\n        this.tabBar.currentChanged.connect(this.handleSheetChanged, this);\n        this._subscription = this.model\n            .workbookChanged\n            .subscribe(() => this.handleModelContentChanged());\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.grid.dispose();\n        this.tabBar.dispose();\n        this._subscription.unsubscribe();\n        super.dispose();\n    }\n    handleSheetChanged(_sender, { currentTitle }) {\n        if (currentTitle == null) {\n            return;\n        }\n        this.model.setSheet(currentTitle.label);\n    }\n    handleModelContentChanged() {\n        // Set the sheet names in the tab bar\n        this.tabBar.clearTabs();\n        const sheetNames = this.model.getSheetNames();\n        for (const sheet of sheetNames) {\n            this.tabBar.addTab({\n                label: sheet,\n                owner: void 0\n            });\n        }\n        this.tabBar.currentIndex = sheetNames.indexOf(this.model.activeSheet || \"\");\n    }\n}\n(function (SpreadsheetWidget) {\n    SpreadsheetWidget.CSS_CLASS = \"sp-SpreadsheetWidget\";\n})(SpreadsheetWidget || (SpreadsheetWidget = {}));\n","import { ABCWidgetFactory, DocumentWidget } from \"@jupyterlab/docregistry\";\nimport { SpreadsheetWidget } from \"./widget\";\nexport class SpreadsheetWidgetFactory extends ABCWidgetFactory {\n    createNewWidget(context) {\n        const model = context.model.model;\n        const content = new SpreadsheetWidget({ model });\n        const widget = new DocumentWidget({ content, context });\n        return widget;\n    }\n}\n","// import {\n//   DataTypeNoArgs,\n//   DataTypeStringArg,\n//   resolveExtensionConverter,\n//   createConverter,\n//   URLDataType,\n//   relativeNestedDataType,\n//   resolveDataType,\n//   URLTemplate\n// } from \"@jupyterlab/dataregistry\";\n// import {\n//     IRegistry,\n//     widgetDataType,\n//     CSVDataType\n// } from \"@jupyterlab/dataregistry-extension\";\n// import { Observable, throwError, merge, defer, BehaviorSubject } from \"rxjs\";\n// import { distinct, switchMap, map } from \"rxjs/operators\";\n// import { fromFetch } from \"rxjs/fetch\";\n// import { SpreadsheetModel } from \"./model\";\n// import { SpreadsheetWidget } from \"./widget\";\n/**\n * Mimetype for old-style (pre-2003) Excel format workbooks.\n *\n * These files have the extension \".xls\"\n */\nexport const XLS_MIMETYPE = \"application/vnd.ms-excel\";\n/**\n * Mimetype for XML-based Excel and SpreadsheetML workbooks.\n *\n * These files have the extension \".xlsx\"\n */\nexport const XLSX_MIMETYPE = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n/**\n * Mimetype for OpenOffice and LibreOffice spreadsheets.\n *\n * These files have the extension \".ods\"\n */\nexport const ODF_MIMETYPE = \"application/vnd.oasis.opendocument.spreadsheet\";\n/**\n * Mimetype for JSON-based Common Spreadsheet Format workbooks.\n *\n * No standard file extension exists for this format, it is merely a glorified\n * JSON schema. These workbooks are produced by the SheetJS library.\n *\n * For more information, see\n * {@link https://docs.sheetjs.com/#common-spreadsheet-format | the CSF docs}.\n *\n */\nexport const CSF_MIMETYPE = \"application/vnd.sheetjs.csf+json\";\n// /**\n//  * A datatype for Common Workbook Format spreadsheets.\n//  *\n//  * jupyterlab-spreadsheet parses Excel workbooks into this format, and all\n//  * UI components work on CWF.\n//  */\n// export const SheetJsWorkbookDataType = new DataTypeNoArgs<SpreadsheetModel>(\n//   CSF_MIMETYPE\n// );\n// /**\n//  * A datatype that points into a sheet inside a workbook.\n//  *\n//  * Remember that a single Excel workbook can have many different sheets- to get\n//  * a table, it is not enough to simply point at an xlsx file.\n//  */\n// const SheetJsDataType = new DataTypeStringArg<SpreadsheetModel>(\n//   CSF_MIMETYPE,\n//   \"worksheet\"\n// );\n// /** A datatype for shuttling Base64 around, much like the textDataType */\n// const Base64DataType = new DataTypeStringArg<Observable<string>>(\n//   \"application/octet-stream\",\n//   \"mimetype\"\n// );\n// /**\n//  * Register converters for ExcelSpreadsheets with a given Data Registry.\n//  *\n//  * @param registry The registry to hook into\n//  */\n// export function registerConverters(registry: IRegistry) {\n//   registry.addConverter(\n//     resolveExtensionConverter(\".xls\", XLS_MIMETYPE),\n//     resolveExtensionConverter(\".xlsx\", XLSX_MIMETYPE),\n//     // A converter to go between URLs and Base64 data\n//     createConverter(\n//       {\n//         from: URLDataType,\n//         to: Base64DataType\n//       },\n//       ({ data, type }) => ({\n//         type: type,\n//         data: data.pipe(\n//           distinct(),\n//           switchMap(i => fromFetch(i)),\n//           switchMap(i => {\n//             if (!i.ok) {\n//               return throwError(new Error(\"Bad response:\" + i));\n//             }\n//             return i.blob().then(\n//               blob =>\n//                 new Promise((res, rej) => {\n//                   // don't you love how most DOM APIs are\n//                   // constructed entirely out of duct tape?\n//                   const reader = new FileReader();\n//                   reader.onerror = rej;\n//                   reader.onload = () => {\n//                     const result = reader.result;\n//                     if (result == null || reader instanceof ArrayBuffer) {\n//                       return rej(\"Failed to load data\");\n//                     }\n//                     res((\"\" + result).replace(/^data:[^;]+;base64,/, \"\"));\n//                   };\n//                   reader.readAsDataURL(blob);\n//                 })\n//             );\n//           })\n//         )\n//       })\n//     ),\n//     createConverter(\n//       {\n//         from: Base64DataType,\n//         to: SheetJsWorkbookDataType\n//       },\n//       ({ type, data }) => {\n//         if (!(type === XLS_MIMETYPE || type === XLSX_MIMETYPE)) {\n//           return null;\n//         }\n//         return {\n//           type: void 0,\n//           data: new SpreadsheetModel({ value: data })\n//         };\n//       }\n//     ),\n//     createConverter(\n//       {\n//         from: SheetJsWorkbookDataType,\n//         to: widgetDataType\n//       },\n//       ({ data }) => {\n//         return {\n//           type: \"Spreadsheet\",\n//           data: () => new SpreadsheetWidget({ model: data })\n//         };\n//       }\n//     ),\n//     createConverter(\n//       {\n//         from: SheetJsWorkbookDataType,\n//         to: relativeNestedDataType\n//       },\n//       ({ data }) => ({\n//         type: void 0,\n//         data: defer(() => {\n//           return merge(new BehaviorSubject(void 0), data.workbookChanged).pipe(\n//             map(() => data.getSheetNames().map(i => \"#/sheet/\" + i))\n//           );\n//         })\n//       })\n//     ),\n//     createConverter(\n//       {\n//         from: resolveDataType,\n//         to: SheetJsDataType\n//       },\n//       ({ url }) => {\n//         const template = new URLTemplate(\"/sheet/{sheetName}/\", {\n//           sheetName: URLTemplate.string\n//         });\n//         const result = template.parse(url.href);\n//         if (\n//           url.protocol !== \"file:\" ||\n//           !/\\.xlsx?$/.test(url.pathname) ||\n//           result == null\n//         ) {\n//           return null;\n//         }\n//         const sheetName = result.sheetName;\n//         url.hash = \"\";\n//         const data = SheetJsWorkbookDataType.getDataset(\n//           registry.getURL(\"\" + url)\n//         );\n//         if (data == null) return null;\n//         return {\n//           type: sheetName,\n//           data\n//         };\n//       }\n//     ),\n//     createConverter(\n//       {\n//         from: SheetJsDataType,\n//         to: CSVDataType\n//       },\n//       ({ data, type }) => {\n//         return {\n//           type: void 0,\n//           data: defer(() => {\n//             return merge(\n//               new BehaviorSubject(void 0),\n//               data.workbookChanged\n//             ).pipe(map(() => data.toCsv(type)));\n//           })\n//         };\n//       }\n//     )\n//   );\n// }\n","import { ILayoutRestorer } from \"@jupyterlab/application\";\nimport { WidgetTracker } from \"@jupyterlab/apputils\";\nimport { Token } from \"@lumino/coreutils\";\nimport { SpreadsheetModelFactory } from \"./modelfactory\";\nimport { SpreadsheetWidgetFactory } from \"./widgetfactory\";\nimport { /* registerConverters, */ XLSX_MIMETYPE, XLS_MIMETYPE, ODF_MIMETYPE } from \"./registry\";\nexport const ISpreadsheetTracker = new Token(\"jupyterlab-spreadsheet:tracker\");\nfunction activateSpreadsheet(app, restorer) {\n    const { docRegistry } = app;\n    const tracker = new WidgetTracker({\n        namespace: \"jupyterlab-spreadsheet\"\n    });\n    const factory = new SpreadsheetWidgetFactory({\n        name: \"Spreadsheet\",\n        modelName: \"workbook\",\n        fileTypes: [\n            \"excel\",\n            \"csv\",\n            \"dsv\",\n            \"ods\"\n        ],\n        defaultFor: [\n            \"excel\",\n            \"ods\"\n        ],\n    });\n    const modelFactory = new SpreadsheetModelFactory();\n    docRegistry.addModelFactory(modelFactory);\n    docRegistry.addWidgetFactory(factory);\n    docRegistry.addFileType({\n        name: \"excel\",\n        displayName: \"Excel Workbook\",\n        fileFormat: \"base64\",\n        extensions: [\n            \".xls\",\n            \".xlsx\"\n        ],\n        mimeTypes: [\n            XLS_MIMETYPE,\n            XLSX_MIMETYPE,\n            \"application/octet-stream\",\n            \"text/plain\"\n        ]\n    });\n    docRegistry.addFileType({\n        name: \"ods\",\n        displayName: \"OpenOffice/LibreOffice Workbook\",\n        fileFormat: \"base64\",\n        extensions: [\n            \".ods\"\n        ],\n        mimeTypes: [\n            ODF_MIMETYPE,\n            \"application/octet-stream\",\n            \"text/plain\"\n        ]\n    });\n    // if (registry) {\n    //     registerConverters(registry)\n    // }\n    factory.widgetCreated.connect((sender, widget) => {\n        void tracker.add(widget);\n        widget.context.pathChanged.connect(() => {\n            void tracker.save(widget);\n        });\n    });\n    void restorer.restore(tracker, {\n        command: \"docmanager:open\",\n        args: widget => ({ path: widget.context.path, factory: \"Spreadsheet\" }),\n        name: widget => widget.context.path\n    });\n    return tracker;\n}\nconst plugin = {\n    id: \"jupyter-spreadsheet\",\n    autoStart: true,\n    requires: [ILayoutRestorer],\n    // optional: [IRegistry],\n    provides: ISpreadsheetTracker,\n    activate: activateSpreadsheet\n};\nexport default plugin;\n","/*!\r\n * jquery.event.drag - v 2.3.0\r\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\r\n * Open Source MIT License - http://threedubmedia.com/code/license\r\n */\r\n// Created: 2008-06-04\r\n// Updated: 2012-05-21\r\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\r\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\r\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\r\n\r\n;(function( $ ) {\r\n    // add the jquery instance method\r\n    $.fn.drag = function( str, arg, opts ){\r\n        // figure out the event type\r\n        var type = typeof str == \"string\" ? str : \"\",\r\n            // figure out the event handler...\r\n            fn = $.isFunction( str ) ? str : $.isFunction( arg ) ? arg : null;\r\n        // fix the event type\r\n        if ( type.indexOf(\"drag\") !== 0 )\r\n            type = \"drag\"+ type;\r\n        // were options passed\r\n        opts = ( str == fn ? arg : opts ) || {};\r\n        // trigger or bind event handler\r\n        return fn ? this.on( type, opts, fn ) : this.trigger( type );\r\n    };\r\n\r\n    // local refs (increase compression)\r\n    var $event = $.event,\r\n        $special = $event.special,\r\n        // configure the drag special event\r\n        drag = $special.drag = {\r\n\r\n            // these are the default settings\r\n            defaults: {\r\n                which: 1, // mouse button pressed to start drag sequence\r\n                distance: 0, // distance dragged before dragstart\r\n                not: ':input', // selector to suppress dragging on target elements\r\n                handle: null, // selector to match handle target elements\r\n                relative: false, // true to use \"position\", false to use \"offset\"\r\n                drop: true, // false to suppress drop events, true or selector to allow\r\n                click: false // false to suppress click events after dragend (no proxy)\r\n            },\r\n\r\n            // the key name for stored drag data\r\n            datakey: \"dragdata\",\r\n\r\n            // prevent bubbling for better performance\r\n            noBubble: true,\r\n\r\n            // count bound related events\r\n            add: function( obj ){\r\n                // read the interaction data\r\n                var data = $.data( this, drag.datakey ),\r\n                    // read any passed options\r\n                    opts = obj.data || {};\r\n                // count another realted event\r\n                data.related += 1;\r\n                // extend data options bound with this event\r\n                // don't iterate \"opts\" in case it is a node\r\n                $.each( drag.defaults, function( key, def ){\r\n                    if ( opts[ key ] !== undefined )\r\n                        data[ key ] = opts[ key ];\r\n                });\r\n            },\r\n\r\n            // forget unbound related events\r\n            remove: function(){\r\n                var data = $.data( this, drag.datakey );\r\n                if(data)\r\n                    data.related -= 1;\r\n            },\r\n\r\n            // configure interaction, capture settings\r\n            setup: function(){\r\n                // check for related events\r\n                if ( $.data( this, drag.datakey ) )\r\n                    return;\r\n                // initialize the drag data with copied defaults\r\n                var data = $.extend({ related:0 }, drag.defaults );\r\n                // store the interaction data\r\n                $.data( this, drag.datakey, data );\r\n                // bind the mousedown event, which starts drag interactions\r\n                $event.add( this, \"touchstart mousedown\", drag.init, data );\r\n                // prevent image dragging in IE...\r\n                if ( this.attachEvent )\r\n                    this.attachEvent(\"ondragstart\", drag.dontstart );\r\n            },\r\n\r\n            // destroy configured interaction\r\n            teardown: function(){\r\n                var data = $.data( this, drag.datakey ) || {};\r\n                // check for related events\r\n                if ( data.related )\r\n                    return;\r\n                // remove the stored data\r\n                $.removeData( this, drag.datakey );\r\n                // remove the mousedown event\r\n                $event.remove( this, \"touchstart mousedown\", drag.init );\r\n                // enable text selection\r\n                drag.textselect( true );\r\n                // un-prevent image dragging in IE...\r\n                if ( this.detachEvent )\r\n                    this.detachEvent(\"ondragstart\", drag.dontstart );\r\n            },\r\n\r\n            // initialize the interaction\r\n            init: function( event ){\r\n                // sorry, only one touch at a time\r\n                if ( drag.touched )\r\n                    return;\r\n                // the drag/drop interaction data\r\n                var dd = event.data, results;\r\n                // check the which directive\r\n                if ( event.which != 0 && dd.which > 0 && event.which != dd.which )\r\n                    return;\r\n                // check for suppressed selector and/or\r\n                // make sure the target css class starts with \"slick\" so that we know we are in a Slick Grid\r\n                var targetClass = $( event.target ).attr('class') || \"\";                \r\n                if ( $( event.target ).is( dd.not ) || (!targetClass || targetClass.toString().indexOf('slick') === -1))\r\n                    return;\r\n                \r\n                // check for handle selector\r\n                if ( dd.handle && !$( event.target ).closest( dd.handle, event.currentTarget ).length )\r\n                    return;\r\n\r\n                drag.touched = event.type == 'touchstart' ? this : null;\r\n                dd.propagates = 1;\r\n                dd.mousedown = this;\r\n                dd.interactions = [ drag.interaction( this, dd ) ];\r\n                dd.target = event.target;\r\n                dd.pageX = event.pageX;\r\n                dd.pageY = event.pageY;\r\n                dd.dragging = null;\r\n                // handle draginit event...\r\n                results = drag.hijack( event, \"draginit\", dd );\r\n                // early cancel\r\n                if ( !dd.propagates )\r\n                    return;\r\n                // flatten the result set\r\n                results = drag.flatten( results );\r\n                // insert new interaction elements\r\n                if ( results && results.length ){\r\n                    dd.interactions = [];\r\n                    $.each( results, function(){\r\n                        dd.interactions.push( drag.interaction( this, dd ) );\r\n                    });\r\n                }\r\n                // remember how many interactions are propagating\r\n                dd.propagates = dd.interactions.length;\r\n                // locate and init the drop targets\r\n                if ( dd.drop !== false && $special.drop )\r\n                    $special.drop.handler( event, dd );\r\n                // disable text selection\r\n                drag.textselect( false );\r\n                // bind additional events...\r\n                if ( drag.touched )\r\n                    $event.add( drag.touched, \"touchmove touchend\", drag.handler, dd );\r\n                else\r\n                    $event.add( document, \"mousemove mouseup\", drag.handler, dd );\r\n                // helps prevent text selection or scrolling\r\n                if ( !drag.touched || dd.live )\r\n                    return false;\r\n            },\r\n\r\n            // returns an interaction object\r\n            interaction: function( elem, dd ){\r\n                var offset = (elem && elem.ownerDocument)\r\n                    ? $( elem )[ dd.relative ? \"position\" : \"offset\" ]() || { top:0, left:0 }\r\n                    : { top: 0, left: 0 };\r\n                return {\r\n                    drag: elem,\r\n                    callback: new drag.callback(),\r\n                    droppable: [],\r\n                    offset: offset\r\n                };\r\n            },\r\n\r\n            // handle drag-releatd DOM events\r\n            handler: function( event ){\r\n                // read the data before hijacking anything\r\n                var dd = event.data;\r\n                // handle various events\r\n                switch ( event.type ){\r\n                    // mousemove, check distance, start dragging\r\n                    case !dd.dragging && 'touchmove':\r\n                        event.preventDefault();\r\n                    case !dd.dragging && 'mousemove':\r\n                        //  drag tolerance, x² + y² = distance²\r\n                        if ( Math.pow(  event.pageX-dd.pageX, 2 ) + Math.pow(  event.pageY-dd.pageY, 2 ) < Math.pow( dd.distance, 2 ) )\r\n                            break; // distance tolerance not reached\r\n                        event.target = dd.target; // force target from \"mousedown\" event (fix distance issue)\r\n                        drag.hijack( event, \"dragstart\", dd ); // trigger \"dragstart\"\r\n                        if ( dd.propagates ) // \"dragstart\" not rejected\r\n                            dd.dragging = true; // activate interaction\r\n                        // mousemove, dragging\r\n                    case 'touchmove':\r\n                        event.preventDefault();\r\n                    case 'mousemove':\r\n                        if ( dd.dragging ){\r\n                            // trigger \"drag\"\r\n                            drag.hijack( event, \"drag\", dd );\r\n                            if ( dd.propagates ){\r\n                                // manage drop events\r\n                                if ( dd.drop !== false && $special.drop )\r\n                                    $special.drop.handler( event, dd ); // \"dropstart\", \"dropend\"\r\n                                break; // \"drag\" not rejected, stop\r\n                            }\r\n                            event.type = \"mouseup\"; // helps \"drop\" handler behave\r\n                        }\r\n                        // mouseup, stop dragging\r\n                    case 'touchend':\r\n                    case 'mouseup':\r\n                    default:\r\n                        if ( drag.touched )\r\n                            $event.remove( drag.touched, \"touchmove touchend\", drag.handler ); // remove touch events\r\n                        else\r\n                            $event.remove( document, \"mousemove mouseup\", drag.handler ); // remove page events\r\n                        if ( dd.dragging ){\r\n                            if ( dd.drop !== false && $special.drop )\r\n                                $special.drop.handler( event, dd ); // \"drop\"\r\n                            drag.hijack( event, \"dragend\", dd ); // trigger \"dragend\"\r\n                        }\r\n                        drag.textselect( true ); // enable text selection\r\n                        // if suppressing click events...\r\n                        if ( dd.click === false && dd.dragging )\r\n                            $.data( dd.mousedown, \"suppress.click\", new Date().getTime() + 5 );\r\n                        dd.dragging = drag.touched = false; // deactivate element\r\n                        break;\r\n                }\r\n            },\r\n\r\n            // re-use event object for custom events\r\n            hijack: function( event, type, dd, x, elem ){\r\n                // not configured\r\n                if ( !dd )\r\n                    return;\r\n                // remember the original event and type\r\n                var orig = { event:event.originalEvent, type:event.type },\r\n                    // is the event drag related or drog related?\r\n                    mode = type.indexOf(\"drop\") ? \"drag\" : \"drop\",\r\n                    // iteration vars\r\n                    result, i = x || 0, ia, $elems, callback,\r\n                    len = !isNaN( x ) ? x : dd.interactions.length;\r\n                // modify the event type\r\n                event.type = type;\r\n                // protects originalEvent from side-effects\r\n                var noop = function(){};\r\n                event.originalEvent = new jQuery.Event(orig.event, {\r\n                    preventDefault: noop,\r\n                    stopPropagation: noop,\r\n                    stopImmediatePropagation: noop\r\n                });\r\n                // initialize the results\r\n                dd.results = [];\r\n                // handle each interacted element\r\n                do if ( ia = dd.interactions[ i ] ){\r\n                    // validate the interaction\r\n                    if ( type !== \"dragend\" && ia.cancelled )\r\n                        continue;\r\n                    // set the dragdrop properties on the event object\r\n                    callback = drag.properties( event, dd, ia );\r\n                    // prepare for more results\r\n                    ia.results = [];\r\n                    // handle each element\r\n                    $( elem || ia[ mode ] || dd.droppable ).each(function( p, subject ){\r\n                        // identify drag or drop targets individually\r\n                        callback.target = subject;\r\n                        // force propagtion of the custom event\r\n                        event.isPropagationStopped = function(){ return false; };\r\n                        // handle the event\r\n                        result = subject ? $event.dispatch.call( subject, event, callback ) : null;\r\n                        // stop the drag interaction for this element\r\n                        if ( result === false ){\r\n                            if ( mode == \"drag\" ){\r\n                                ia.cancelled = true;\r\n                                dd.propagates -= 1;\r\n                            }\r\n                            if ( type == \"drop\" ){\r\n                                ia[ mode ][p] = null;\r\n                            }\r\n                        }\r\n                        // assign any dropinit elements\r\n                        else if ( type == \"dropinit\" )\r\n                            ia.droppable.push( drag.element( result ) || subject );\r\n                        // accept a returned proxy element\r\n                        if ( type == \"dragstart\" )\r\n                            ia.proxy = $( drag.element( result ) || ia.drag )[0];\r\n                        // remember this result\r\n                        ia.results.push( result );\r\n                        // forget the event result, for recycling\r\n                        delete event.result;\r\n                        // break on cancelled handler\r\n                        if ( type !== \"dropinit\" )\r\n                            return result;\r\n                    });\r\n                    // flatten the results\r\n                    dd.results[ i ] = drag.flatten( ia.results );\r\n                    // accept a set of valid drop targets\r\n                    if ( type == \"dropinit\" )\r\n                        ia.droppable = drag.flatten( ia.droppable );\r\n                    // locate drop targets\r\n                    if ( type == \"dragstart\" && !ia.cancelled )\r\n                        callback.update();\r\n                }\r\n                while ( ++i < len )\r\n                    // restore the original event & type\r\n                    event.type = orig.type;\r\n                    event.originalEvent = orig.event;\r\n                    // return all handler results\r\n                    return drag.flatten( dd.results );\r\n            },\r\n\r\n            // extend the callback object with drag/drop properties...\r\n            properties: function( event, dd, ia ){\r\n                var obj = ia.callback;\r\n                // elements\r\n                obj.drag = ia.drag;\r\n                obj.proxy = ia.proxy || ia.drag;\r\n                // starting mouse position\r\n                obj.startX = dd.pageX;\r\n                obj.startY = dd.pageY;\r\n                // current distance dragged\r\n                obj.deltaX = event.pageX - dd.pageX;\r\n                obj.deltaY = event.pageY - dd.pageY;\r\n                // original element position\r\n                obj.originalX = ia.offset.left;\r\n                obj.originalY = ia.offset.top;\r\n                // adjusted element position\r\n                obj.offsetX = obj.originalX + obj.deltaX;\r\n                obj.offsetY = obj.originalY + obj.deltaY;\r\n                // assign the drop targets information\r\n                obj.drop = drag.flatten( ( ia.drop || [] ).slice() );\r\n                obj.available = drag.flatten( ( ia.droppable || [] ).slice() );\r\n                return obj;\r\n            },\r\n\r\n            // determine is the argument is an element or jquery instance\r\n            element: function( arg ){\r\n                if ( arg && ( arg.jquery || arg.nodeType == 1 ) )\r\n                    return arg;\r\n            },\r\n\r\n            // flatten nested jquery objects and arrays into a single dimension array\r\n            flatten: function( arr ){\r\n                return $.map( arr, function( member ){\r\n                    return member && member.jquery ? $.makeArray( member ) :\r\n                        member && member.length ? drag.flatten( member ) : member;\r\n                });\r\n            },\r\n\r\n            // toggles text selection attributes ON (true) or OFF (false)\r\n            textselect: function( bool ){\r\n                $( document )[ bool ? \"off\" : \"on\" ](\"selectstart\", drag.dontstart )\r\n                    .css(\"MozUserSelect\", bool ? \"\" : \"none\" );\r\n                // .attr(\"unselectable\", bool ? \"off\" : \"on\" )\r\n                document.unselectable = bool ? \"off\" : \"on\";\r\n            },\r\n\r\n            // suppress \"selectstart\" and \"ondragstart\" events\r\n            dontstart: function(){\r\n                return false;\r\n            },\r\n\r\n            // a callback instance contructor\r\n            callback: function(){}\r\n\r\n        };\r\n\r\n        // callback methods\r\n        drag.callback.prototype = {\r\n            update: function(){\r\n                if ( $special.drop && this.available.length )\r\n                    $.each( this.available, function( i ){\r\n                        $special.drop.locate( this, i );\r\n                    });\r\n            }\r\n        };\r\n\r\n        // patch $.event.$dispatch to allow suppressing clicks\r\n        var $dispatch = $event.dispatch;\r\n        $event.dispatch = function( event ){\r\n            if ( $.data( this, \"suppress.\"+ event.type ) - new Date().getTime() > 0 ){\r\n                $.removeData( this, \"suppress.\"+ event.type );\r\n                return;\r\n            }\r\n            return $dispatch.apply( this, arguments );\r\n        };\r\n\r\n        // share the same special event configuration with related events...\r\n        $special.draginit = $special.dragstart = $special.dragend = drag;\r\n})( jQuery );\r\n","/***\r\n * Contains core SlickGrid classes.\r\n * @module Core\r\n * @namespace Slick\r\n */\r\n\r\n(function ($) {\r\n  /***\r\n   * An event object for passing data to event handlers and letting them control propagation.\r\n   * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\r\n   * @class EventData\r\n   * @constructor\r\n   */\r\n  function EventData() {\r\n    var isPropagationStopped = false;\r\n    var isImmediatePropagationStopped = false;\r\n\r\n    /***\r\n     * Stops event from propagating up the DOM tree.\r\n     * @method stopPropagation\r\n     */\r\n    this.stopPropagation = function () {\r\n      isPropagationStopped = true;\r\n    };\r\n\r\n    /***\r\n     * Returns whether stopPropagation was called on this event object.\r\n     * @method isPropagationStopped\r\n     * @return {Boolean}\r\n     */\r\n    this.isPropagationStopped = function () {\r\n      return isPropagationStopped;\r\n    };\r\n\r\n    /***\r\n     * Prevents the rest of the handlers from being executed.\r\n     * @method stopImmediatePropagation\r\n     */\r\n    this.stopImmediatePropagation = function () {\r\n      isImmediatePropagationStopped = true;\r\n    };\r\n\r\n    /***\r\n     * Returns whether stopImmediatePropagation was called on this event object.\\\r\n     * @method isImmediatePropagationStopped\r\n     * @return {Boolean}\r\n     */\r\n    this.isImmediatePropagationStopped = function () {\r\n      return isImmediatePropagationStopped;\r\n    };\r\n  }\r\n\r\n  /***\r\n   * A simple publisher-subscriber implementation.\r\n   * @class Event\r\n   * @constructor\r\n   */\r\n  function Event() {\r\n    var handlers = [];\r\n\r\n    /***\r\n     * Adds an event handler to be called when the event is fired.\r\n     * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\r\n     * object the event was fired with.<p>\r\n     * @method subscribe\r\n     * @param fn {Function} Event handler.\r\n     */\r\n    this.subscribe = function (fn) {\r\n      handlers.push(fn);\r\n    };\r\n\r\n    /***\r\n     * Removes an event handler added with <code>subscribe(fn)</code>.\r\n     * @method unsubscribe\r\n     * @param fn {Function} Event handler to be removed.\r\n     */\r\n    this.unsubscribe = function (fn) {\r\n      for (var i = handlers.length - 1; i >= 0; i--) {\r\n        if (handlers[i] === fn) {\r\n          handlers.splice(i, 1);\r\n        }\r\n      }\r\n    };\r\n\r\n    /***\r\n     * Fires an event notifying all subscribers.\r\n     * @method notify\r\n     * @param args {Object} Additional data object to be passed to all handlers.\r\n     * @param e {EventData}\r\n     *      Optional.\r\n     *      An <code>EventData</code> object to be passed to all handlers.\r\n     *      For DOM events, an existing W3C/jQuery event object can be passed in.\r\n     * @param scope {Object}\r\n     *      Optional.\r\n     *      The scope (\"this\") within which the handler will be executed.\r\n     *      If not specified, the scope will be set to the <code>Event</code> instance.\r\n     */\r\n    this.notify = function (args, e, scope) {\r\n      e = e || new EventData();\r\n      scope = scope || this;\r\n\r\n      var returnValue;\r\n      for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++) {\r\n        returnValue = handlers[i].call(scope, e, args);\r\n      }\r\n\r\n      return returnValue;\r\n    };\r\n  }\r\n\r\n  function EventHandler() {\r\n    var handlers = [];\r\n\r\n    this.subscribe = function (event, handler) {\r\n      handlers.push({\r\n        event: event,\r\n        handler: handler\r\n      });\r\n      event.subscribe(handler);\r\n\r\n      return this;  // allow chaining\r\n    };\r\n\r\n    this.unsubscribe = function (event, handler) {\r\n      var i = handlers.length;\r\n      while (i--) {\r\n        if (handlers[i].event === event &&\r\n            handlers[i].handler === handler) {\r\n          handlers.splice(i, 1);\r\n          event.unsubscribe(handler);\r\n          return;\r\n        }\r\n      }\r\n\r\n      return this;  // allow chaining\r\n    };\r\n\r\n    this.unsubscribeAll = function () {\r\n      var i = handlers.length;\r\n      while (i--) {\r\n        handlers[i].event.unsubscribe(handlers[i].handler);\r\n      }\r\n      handlers = [];\r\n\r\n      return this;  // allow chaining\r\n    };\r\n  }\r\n\r\n  /***\r\n   * A structure containing a range of cells.\r\n   * @class Range\r\n   * @constructor\r\n   * @param fromRow {Integer} Starting row.\r\n   * @param fromCell {Integer} Starting cell.\r\n   * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\r\n   * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\r\n   */\r\n  function Range(fromRow, fromCell, toRow, toCell) {\r\n    if (toRow === undefined && toCell === undefined) {\r\n      toRow = fromRow;\r\n      toCell = fromCell;\r\n    }\r\n\r\n    /***\r\n     * @property fromRow\r\n     * @type {Integer}\r\n     */\r\n    this.fromRow = Math.min(fromRow, toRow);\r\n\r\n    /***\r\n     * @property fromCell\r\n     * @type {Integer}\r\n     */\r\n    this.fromCell = Math.min(fromCell, toCell);\r\n\r\n    /***\r\n     * @property toRow\r\n     * @type {Integer}\r\n     */\r\n    this.toRow = Math.max(fromRow, toRow);\r\n\r\n    /***\r\n     * @property toCell\r\n     * @type {Integer}\r\n     */\r\n    this.toCell = Math.max(fromCell, toCell);\r\n\r\n    /***\r\n     * Returns whether a range represents a single row.\r\n     * @method isSingleRow\r\n     * @return {Boolean}\r\n     */\r\n    this.isSingleRow = function () {\r\n      return this.fromRow == this.toRow;\r\n    };\r\n\r\n    /***\r\n     * Returns whether a range represents a single cell.\r\n     * @method isSingleCell\r\n     * @return {Boolean}\r\n     */\r\n    this.isSingleCell = function () {\r\n      return this.fromRow == this.toRow && this.fromCell == this.toCell;\r\n    };\r\n\r\n    /***\r\n     * Returns whether a range contains a given cell.\r\n     * @method contains\r\n     * @param row {Integer}\r\n     * @param cell {Integer}\r\n     * @return {Boolean}\r\n     */\r\n    this.contains = function (row, cell) {\r\n      return row >= this.fromRow && row <= this.toRow &&\r\n          cell >= this.fromCell && cell <= this.toCell;\r\n    };\r\n\r\n    /***\r\n     * Returns a readable representation of a range.\r\n     * @method toString\r\n     * @return {String}\r\n     */\r\n    this.toString = function () {\r\n      if (this.isSingleCell()) {\r\n        return \"(\" + this.fromRow + \":\" + this.fromCell + \")\";\r\n      }\r\n      else {\r\n        return \"(\" + this.fromRow + \":\" + this.fromCell + \" - \" + this.toRow + \":\" + this.toCell + \")\";\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  /***\r\n   * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\r\n   * @class NonDataItem\r\n   * @constructor\r\n   */\r\n  function NonDataItem() {\r\n    this.__nonDataRow = true;\r\n  }\r\n\r\n\r\n  /***\r\n   * Information about a group of rows.\r\n   * @class Group\r\n   * @extends Slick.NonDataItem\r\n   * @constructor\r\n   */\r\n  function Group() {\r\n    this.__group = true;\r\n\r\n    /**\r\n     * Grouping level, starting with 0.\r\n     * @property level\r\n     * @type {Number}\r\n     */\r\n    this.level = 0;\r\n\r\n    /***\r\n     * Number of rows in the group.\r\n     * @property count\r\n     * @type {Integer}\r\n     */\r\n    this.count = 0;\r\n\r\n    /***\r\n     * Grouping value.\r\n     * @property value\r\n     * @type {Object}\r\n     */\r\n    this.value = null;\r\n\r\n    /***\r\n     * Formatted display value of the group.\r\n     * @property title\r\n     * @type {String}\r\n     */\r\n    this.title = null;\r\n\r\n    /***\r\n     * Whether a group is collapsed.\r\n     * @property collapsed\r\n     * @type {Boolean}\r\n     */\r\n    this.collapsed = false;\r\n\r\n    /***\r\n     * Whether a group selection checkbox is checked.\r\n     * @property selectChecked\r\n     * @type {Boolean}\r\n     */\r\n    this.selectChecked = false;\r\n\r\n    /***\r\n     * GroupTotals, if any.\r\n     * @property totals\r\n     * @type {GroupTotals}\r\n     */\r\n    this.totals = null;\r\n\r\n    /**\r\n     * Rows that are part of the group.\r\n     * @property rows\r\n     * @type {Array}\r\n     */\r\n    this.rows = [];\r\n\r\n    /**\r\n     * Sub-groups that are part of the group.\r\n     * @property groups\r\n     * @type {Array}\r\n     */\r\n    this.groups = null;\r\n\r\n    /**\r\n     * A unique key used to identify the group.  This key can be used in calls to DataView\r\n     * collapseGroup() or expandGroup().\r\n     * @property groupingKey\r\n     * @type {Object}\r\n     */\r\n    this.groupingKey = null;\r\n  }\r\n\r\n  Group.prototype = new NonDataItem();\r\n\r\n  /***\r\n   * Compares two Group instances.\r\n   * @method equals\r\n   * @return {Boolean}\r\n   * @param group {Group} Group instance to compare to.\r\n   */\r\n  Group.prototype.equals = function (group) {\r\n    return this.value === group.value &&\r\n        this.count === group.count &&\r\n        this.collapsed === group.collapsed &&\r\n        this.title === group.title;\r\n  };\r\n\r\n  /***\r\n   * Information about group totals.\r\n   * An instance of GroupTotals will be created for each totals row and passed to the aggregators\r\n   * so that they can store arbitrary data in it.  That data can later be accessed by group totals\r\n   * formatters during the display.\r\n   * @class GroupTotals\r\n   * @extends Slick.NonDataItem\r\n   * @constructor\r\n   */\r\n  function GroupTotals() {\r\n    this.__groupTotals = true;\r\n\r\n    /***\r\n     * Parent Group.\r\n     * @param group\r\n     * @type {Group}\r\n     */\r\n    this.group = null;\r\n\r\n    /***\r\n     * Whether the totals have been fully initialized / calculated.\r\n     * Will be set to false for lazy-calculated group totals.\r\n     * @param initialized\r\n     * @type {Boolean}\r\n     */\r\n    this.initialized = false;\r\n  }\r\n\r\n  GroupTotals.prototype = new NonDataItem();\r\n\r\n  /***\r\n   * A locking helper to track the active edit controller and ensure that only a single controller\r\n   * can be active at a time.  This prevents a whole class of state and validation synchronization\r\n   * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\r\n   * and attempt a commit or cancel before proceeding.\r\n   * @class EditorLock\r\n   * @constructor\r\n   */\r\n  function EditorLock() {\r\n    var activeEditController = null;\r\n\r\n    /***\r\n     * Returns true if a specified edit controller is active (has the edit lock).\r\n     * If the parameter is not specified, returns true if any edit controller is active.\r\n     * @method isActive\r\n     * @param editController {EditController}\r\n     * @return {Boolean}\r\n     */\r\n    this.isActive = function (editController) {\r\n      return (editController ? activeEditController === editController : activeEditController !== null);\r\n    };\r\n\r\n    /***\r\n     * Sets the specified edit controller as the active edit controller (acquire edit lock).\r\n     * If another edit controller is already active, and exception will be throw new Error(.\r\n     * @method activate\r\n     * @param editController {EditController} edit controller acquiring the lock\r\n     */\r\n    this.activate = function (editController) {\r\n      if (editController === activeEditController) { // already activated?\r\n        return;\r\n      }\r\n      if (activeEditController !== null) {\r\n        throw new Error(\"SlickGrid.EditorLock.activate: an editController is still active, can't activate another editController\");\r\n      }\r\n      if (!editController.commitCurrentEdit) {\r\n        throw new Error(\"SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()\");\r\n      }\r\n      if (!editController.cancelCurrentEdit) {\r\n        throw new Error(\"SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()\");\r\n      }\r\n      activeEditController = editController;\r\n    };\r\n\r\n    /***\r\n     * Unsets the specified edit controller as the active edit controller (release edit lock).\r\n     * If the specified edit controller is not the active one, an exception will be throw new Error(.\r\n     * @method deactivate\r\n     * @param editController {EditController} edit controller releasing the lock\r\n     */\r\n    this.deactivate = function (editController) {\r\n      if (!activeEditController) {\r\n        return;\r\n      }\r\n      if (activeEditController !== editController) {\r\n        throw new Error(\"SlickGrid.EditorLock.deactivate: specified editController is not the currently active one\");\r\n      }\r\n      activeEditController = null;\r\n    };\r\n\r\n    /***\r\n     * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\r\n     * controller and returns whether the commit attempt was successful (commit may fail due to validation\r\n     * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\r\n     * and false otherwise.  If no edit controller is active, returns true.\r\n     * @method commitCurrentEdit\r\n     * @return {Boolean}\r\n     */\r\n    this.commitCurrentEdit = function () {\r\n      return (activeEditController ? activeEditController.commitCurrentEdit() : true);\r\n    };\r\n\r\n    /***\r\n     * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\r\n     * controller and returns whether the edit was successfully cancelled.  If no edit controller is\r\n     * active, returns true.\r\n     * @method cancelCurrentEdit\r\n     * @return {Boolean}\r\n     */\r\n    this.cancelCurrentEdit = function cancelCurrentEdit() {\r\n      return (activeEditController ? activeEditController.cancelCurrentEdit() : true);\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array} treeColumns Array com levels of columns\r\n   * @returns {{hasDepth: 'hasDepth', getTreeColumns: 'getTreeColumns', extractColumns: 'extractColumns', getDepth: 'getDepth', getColumnsInDepth: 'getColumnsInDepth', getColumnsInGroup: 'getColumnsInGroup', visibleColumns: 'visibleColumns', filter: 'filter', reOrder: reOrder}}\r\n   * @constructor\r\n   */\r\n  function TreeColumns(treeColumns) {\r\n\r\n    var columnsById = {};\r\n\r\n    function init() {\r\n      mapToId(treeColumns);\r\n    }\r\n\r\n    function mapToId(columns) {\r\n      columns\r\n        .forEach(function (column) {\r\n          columnsById[column.id] = column;\r\n\r\n          if (column.columns)\r\n            mapToId(column.columns);\r\n        });\r\n    }\r\n\r\n    function filter(node, condition) {\r\n\r\n      return node.filter(function (column) {\r\n\r\n        var valid = condition.call(column);\r\n\r\n        if (valid && column.columns)\r\n          column.columns = filter(column.columns, condition);\r\n\r\n        return valid && (!column.columns || column.columns.length);\r\n      });\r\n\r\n    }\r\n\r\n    function sort(columns, grid) {\r\n      columns\r\n        .sort(function (a, b) {\r\n          var indexA = getOrDefault(grid.getColumnIndex(a.id)),\r\n            indexB = getOrDefault(grid.getColumnIndex(b.id));\r\n\r\n          return indexA - indexB;\r\n        })\r\n        .forEach(function (column) {\r\n          if (column.columns)\r\n            sort(column.columns, grid);\r\n        });\r\n    }\r\n\r\n    function getOrDefault(value) {\r\n      return typeof value === 'undefined' ? -1 : value;\r\n    }\r\n\r\n    function getDepth(node) {\r\n      if (node.length)\r\n        for (var i in node)\r\n          return getDepth(node[i]);\r\n      else if (node.columns)\r\n        return 1 + getDepth(node.columns);\r\n      else\r\n        return 1;\r\n    }\r\n\r\n    function getColumnsInDepth(node, depth, current) {\r\n      var columns = [];\r\n      current = current || 0;\r\n\r\n      if (depth == current) {\r\n\r\n        if (node.length)\r\n          node.forEach(function(n) {\r\n            if (n.columns)\r\n              n.extractColumns = function() {\r\n                return extractColumns(n);\r\n              };\r\n          });\r\n\r\n        return node;\r\n      } else\r\n        for (var i in node)\r\n          if (node[i].columns) {\r\n            columns = columns.concat(getColumnsInDepth(node[i].columns, depth, current + 1));\r\n          }\r\n\r\n      return columns;\r\n    }\r\n\r\n    function extractColumns(node) {\r\n      var result = [];\r\n\r\n      if (node.hasOwnProperty('length')) {\r\n\r\n        for (var i = 0; i < node.length; i++)\r\n          result = result.concat(extractColumns(node[i]));\r\n\r\n      } else {\r\n\r\n        if (node.hasOwnProperty('columns'))\r\n\r\n          result = result.concat(extractColumns(node.columns));\r\n\r\n        else\r\n          return node;\r\n\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    function cloneTreeColumns() {\r\n      return $.extend(true, [], treeColumns);\r\n    }\r\n\r\n    init();\r\n\r\n    this.hasDepth = function () {\r\n\r\n      for (var i in treeColumns)\r\n        if (treeColumns[i].hasOwnProperty('columns'))\r\n          return true;\r\n\r\n      return false;\r\n    };\r\n\r\n    this.getTreeColumns = function () {\r\n      return treeColumns;\r\n    };\r\n\r\n    this.extractColumns = function () {\r\n      return this.hasDepth()? extractColumns(treeColumns): treeColumns;\r\n    };\r\n\r\n    this.getDepth = function () {\r\n      return getDepth(treeColumns);\r\n    };\r\n\r\n    this.getColumnsInDepth = function (depth) {\r\n      return getColumnsInDepth(treeColumns, depth);\r\n    };\r\n\r\n    this.getColumnsInGroup = function (groups) {\r\n      return extractColumns(groups);\r\n    };\r\n\r\n    this.visibleColumns = function () {\r\n      return filter(cloneTreeColumns(), function () {\r\n        return this.visible;\r\n      });\r\n    };\r\n\r\n    this.filter = function (condition) {\r\n      return filter(cloneTreeColumns(), condition);\r\n    };\r\n\r\n    this.reOrder = function (grid) {\r\n      return sort(treeColumns, grid);\r\n    };\r\n\r\n    this.getById = function (id) {\r\n      return columnsById[id];\r\n    };\r\n\r\n    this.getInIds = function (ids) {\r\n      return ids.map(function (id) {\r\n        return columnsById[id];\r\n      });\r\n    };\r\n  }\r\n  \r\n  /***\r\n   * Polyfill for Map to support old browsers but\r\n   * benefit of the Map speed in modern browsers.\r\n   * @class Map\r\n   * @constructor\r\n   */\r\n  var Map = 'Map' in window ? window.Map : function Map() {\r\n    var data = {};\r\n    \r\n    /***\r\n     * Gets the item with the given key from the map or undefined if\r\n     * the map does not contain the item. \r\n     * @method get\r\n     * @param key {Map} The key of the item in the map.\r\n     */\r\n    this.get = function(key) {\r\n      return data[key];\r\n    };\r\n\r\n    /***\r\n     * Adds or updates the item with the given key in the map. \r\n     * @method set\r\n     * @param key The key of the item in the map.\r\n     * @param value The value to insert into the map of the item in the map.\r\n     */\r\n    this.set = function(key, value) {\r\n      data[key] = value;\r\n    };\r\n    \r\n    /***\r\n     * Gets a value indicating whether the given key is present in the map.\r\n     * @method has\r\n     * @param key The key of the item in the map.\r\n     * @return {Boolean}\r\n     */    \r\n    this.has = function(key) {\r\n      return key in data;\r\n    };\r\n    \r\n    /***\r\n     * Removes the item with the given key from the map. \r\n     * @method delete\r\n     * @param key The key of the item in the map.\r\n     */\r\n    this.delete = function(key) {\r\n      delete data[key];\r\n    };\r\n  };\r\n  \r\n  // exports\r\n  $.extend(true, window, {\r\n    \"Slick\": {\r\n      \"Event\": Event,\r\n      \"EventData\": EventData,\r\n      \"EventHandler\": EventHandler,\r\n      \"Range\": Range,\r\n      \"Map\": Map,      \r\n      \"NonDataRow\": NonDataItem,\r\n      \"Group\": Group,\r\n      \"GroupTotals\": GroupTotals,\r\n      \"EditorLock\": EditorLock,\r\n  \r\n      /***\r\n       * A global singleton editor lock.\r\n       * @class GlobalEditorLock\r\n       * @static\r\n       * @constructor\r\n       */\r\n      \"GlobalEditorLock\": new EditorLock(),\r\n      \"TreeColumns\": TreeColumns,\r\n\r\n      \"keyCode\": {\r\n        SPACE: 8,\r\n        BACKSPACE: 8,\r\n        DELETE: 46,\r\n        DOWN: 40,\r\n        END: 35,\r\n        ENTER: 13,\r\n        ESCAPE: 27,\r\n        HOME: 36,\r\n        INSERT: 45,\r\n        LEFT: 37,\r\n        PAGE_DOWN: 34,\r\n        PAGE_UP: 33,\r\n        RIGHT: 39,\r\n        TAB: 9,\r\n        UP: 38,\r\n        A: 65\r\n      },\r\n      \"preClickClassName\" : \"slick-edit-preclick\",\r\n      \r\n      \"GridAutosizeColsMode\": {\r\n        None: 'NOA',\r\n        LegacyOff: 'LOF',\r\n        LegacyForceFit: 'LFF',\r\n        IgnoreViewport: 'IGV',\r\n        FitColsToViewport: 'FCV',\r\n        FitViewportToCols: 'FVC'\r\n      },\r\n      \r\n      \"ColAutosizeMode\": {\r\n          Locked: 'LCK',\r\n          Guide: 'GUI',\r\n          Content: 'CON',\r\n          ContentIntelligent: 'CTI'\r\n      },\r\n      \r\n      \"RowSelectionMode\": {\r\n          FirstRow: 'FS1',\r\n          FirstNRows: 'FSN',\r\n          AllRows: 'ALL',\r\n          LastRow: 'LS1'\r\n      },\r\n      \r\n      \"ValueFilterMode\": {\r\n          None: 'NONE',\r\n          DeDuplicate: 'DEDP',\r\n          GetGreatestAndSub: 'GR8T',\r\n          GetLongestTextAndSub: 'LNSB',\r\n          GetLongestText: 'LNSC'\r\n      },\r\n      \r\n      \"WidthEvalMode\": {\r\n          CanvasTextSize: 'CANV',\r\n          HTML: 'HTML'\r\n      }      \r\n    }\r\n  });\r\n})(jQuery);\r\n\r\n\r\n","(function ($) {\r\n  /***\r\n   * A sample Model implementation.\r\n   * Provides a filtered view of the underlying data.\r\n   *\r\n   * Relies on the data item having an \"id\" property uniquely identifying it.\r\n   */\r\n  function DataView(options) {\r\n    var self = this;\r\n\r\n    var defaults = {\r\n      groupItemMetadataProvider: null,\r\n      inlineFilters: false\r\n    };\r\n\r\n    // private\r\n    var idProperty = \"id\";          // property holding a unique row id\r\n    var items = [];                 // data by index\r\n    var rows = [];                  // data by row\r\n    var idxById = new Slick.Map();   // indexes by id\r\n    var rowsById = null;            // rows by id; lazy-calculated\r\n    var filter = null;              // filter function\r\n    var updated = null;             // updated item ids\r\n    var suspend = false;            // suspends the recalculation\r\n    var isBulkSuspend = false;      // delays various operations like the\r\n                                    // index update and delete to efficient\r\n                                    // versions at endUpdate\r\n    var bulkDeleteIds = new Slick.Map();\r\n    var sortAsc = true;\r\n    var fastSortField;\r\n    var sortComparer;\r\n    var refreshHints = {};\r\n    var prevRefreshHints = {};\r\n    var filterArgs;\r\n    var filteredItems = [];\r\n    var compiledFilter;\r\n    var compiledFilterWithCaching;\r\n    var filterCache = [];\r\n    var _grid = null;\r\n\r\n    // grouping\r\n    var groupingInfoDefaults = {\r\n      getter: null,\r\n      formatter: null,\r\n      comparer: function (a, b) {\r\n        return (a.value === b.value ? 0 :\r\n          (a.value > b.value ? 1 : -1)\r\n        );\r\n      },\r\n      predefinedValues: [],\r\n      aggregators: [],\r\n      aggregateEmpty: false,\r\n      aggregateCollapsed: false,\r\n      aggregateChildGroups: false,\r\n      collapsed: false,\r\n      displayTotalsRow: true,\r\n      lazyTotalsCalculation: false\r\n    };\r\n    var groupingInfos = [];\r\n    var groups = [];\r\n    var toggledGroupsByLevel = [];\r\n    var groupingDelimiter = ':|:';\r\n    var selectedRowIds = null;\r\n\r\n    var pagesize = 0;\r\n    var pagenum = 0;\r\n    var totalRows = 0;\r\n\r\n    // events\r\n    var onSetItemsCalled = new Slick.Event();\r\n    var onRowCountChanged = new Slick.Event();\r\n    var onRowsChanged = new Slick.Event();\r\n    var onRowsOrCountChanged = new Slick.Event();\r\n    var onBeforePagingInfoChanged = new Slick.Event();\r\n    var onPagingInfoChanged = new Slick.Event();\r\n    var onGroupExpanded = new Slick.Event();\r\n    var onGroupCollapsed = new Slick.Event();\r\n\r\n    options = $.extend(true, {}, defaults, options);\r\n\r\n    /***\r\n     * Begins a bached update of the items in the data view.\r\n     * @param bulkUpdate {Boolean} if set to true, most data view modifications\r\n     * including deletes and the related events are postponed to the endUpdate call.\r\n     * As certain operations are postponed during this update, some methods might not\r\n     * deliver fully consistent information.\r\n     */\r\n    function beginUpdate(bulkUpdate) {\r\n      suspend = true;\r\n      isBulkSuspend = bulkUpdate === true;\r\n    }\r\n\r\n    function endUpdate() {\r\n      var wasBulkSuspend = isBulkSuspend;\r\n      isBulkSuspend = false;\r\n      suspend = false;\r\n      if (wasBulkSuspend) {\r\n        processBulkDelete();\r\n        ensureIdUniqueness();\r\n      }\r\n      refresh();\r\n    }\r\n\r\n    function destroy() {\r\n      items = [];\r\n      idxById = null;\r\n      rowsById = null;\r\n      filter = null;\r\n      updated = null;\r\n      sortComparer = null;\r\n      filterCache = [];\r\n      filteredItems = [];\r\n      compiledFilter = null;\r\n      compiledFilterWithCaching = null;\r\n\r\n      if (_grid && _grid.onSelectedRowsChanged && _grid.onCellCssStylesChanged) {\r\n        _grid.onSelectedRowsChanged.unsubscribe();\r\n        _grid.onCellCssStylesChanged.unsubscribe();\r\n      }\r\n      if (self.onRowsOrCountChanged) {\r\n        self.onRowsOrCountChanged.unsubscribe();\r\n      }\r\n    }\r\n\r\n    function setRefreshHints(hints) {\r\n      refreshHints = hints;\r\n    }\r\n\r\n    function setFilterArgs(args) {\r\n      filterArgs = args;\r\n    }\r\n\r\n    /***\r\n     * Processes all delete requests placed during bulk update\r\n     * by recomputing the items and idxById members.\r\n     */\r\n    function processBulkDelete() {\r\n      // the bulk update is processed by\r\n      // recomputing the whole items array and the index lookup in one go.\r\n      // this is done by placing the not-deleted items\r\n      // from left to right into the array and shrink the array the the new\r\n      // size afterwards.\r\n      // see https://github.com/6pac/SlickGrid/issues/571 for further details.\r\n\r\n      var id, item, newIdx = 0;\r\n      for (var i = 0, l = items.length; i < l; i++) {\r\n        item = items[i];\r\n        id = item[idProperty];\r\n        if (id === undefined) {\r\n          throw new Error(\"[SlickGrid DataView] Each data element must implement a unique 'id' property\");\r\n        }\r\n\r\n        // if items have been marked as deleted we skip them for the new final items array\r\n        // and we remove them from the lookup table.\r\n        if(bulkDeleteIds.has(id)) {\r\n          idxById.delete(id);\r\n        } else {\r\n          // for items which are not deleted, we add them to the\r\n          // next free position in the array and register the index in the lookup.\r\n          items[newIdx] = item;\r\n          idxById.set(id, newIdx);\r\n          ++newIdx;\r\n        }\r\n      }\r\n\r\n      // here we shrink down the full item array to the ones actually\r\n      // inserted in the cleanup loop above.\r\n      items.length = newIdx;\r\n      // and finally cleanup the deleted ids to start cleanly on the next update.\r\n      bulkDeleteIds = new Slick.Map();\r\n    }\r\n\r\n    function updateIdxById(startingIndex) {\r\n      if (isBulkSuspend) { // during bulk update we do not reorganize\r\n        return;\r\n      }\r\n      startingIndex = startingIndex || 0;\r\n      var id;\r\n      for (var i = startingIndex, l = items.length; i < l; i++) {\r\n        id = items[i][idProperty];\r\n        if (id === undefined) {\r\n          throw new Error(\"[SlickGrid DataView] Each data element must implement a unique 'id' property\");\r\n        }\r\n        idxById.set(id, i);\r\n      }\r\n    }\r\n\r\n    function ensureIdUniqueness() {\r\n      if (isBulkSuspend) { // during bulk update we do not reorganize\r\n        return;\r\n      }\r\n      var id;\r\n      for (var i = 0, l = items.length; i < l; i++) {\r\n        id = items[i][idProperty];\r\n        if (id === undefined || idxById.get(id) !== i) {\r\n          throw new Error(\"[SlickGrid DataView] Each data element must implement a unique 'id' property\");\r\n        }\r\n      }\r\n    }\r\n\r\n    function getItems() {\r\n      return items;\r\n    }\r\n\r\n    function getIdPropertyName() {\r\n      return idProperty;\r\n    }\r\n\r\n    function setItems(data, objectIdProperty) {\r\n      if (objectIdProperty !== undefined) {\r\n        idProperty = objectIdProperty;\r\n      }\r\n      items = filteredItems = data;\r\n      onSetItemsCalled.notify({ idProperty: objectIdProperty, itemCount: items.length }, null, self);\r\n      idxById = new Slick.Map();\r\n      updateIdxById();\r\n      ensureIdUniqueness();\r\n      refresh();\r\n    }\r\n\r\n    function setPagingOptions(args) {\r\n      if (onBeforePagingInfoChanged.notify(getPagingInfo(), null, self) !== false) {\r\n        if (args.pageSize != undefined) {\r\n          pagesize = args.pageSize;\r\n          pagenum = pagesize ? Math.min(pagenum, Math.max(0, Math.ceil(totalRows / pagesize) - 1)) : 0;\r\n        }\r\n\r\n        if (args.pageNum != undefined) {\r\n          pagenum = Math.min(args.pageNum, Math.max(0, Math.ceil(totalRows / pagesize) - 1));\r\n        }\r\n\r\n        onPagingInfoChanged.notify(getPagingInfo(), null, self);\r\n\r\n        refresh();\r\n      }\r\n    }\r\n\r\n    function getPagingInfo() {\r\n      var totalPages = pagesize ? Math.max(1, Math.ceil(totalRows / pagesize)) : 1;\r\n      return { pageSize: pagesize, pageNum: pagenum, totalRows: totalRows, totalPages: totalPages, dataView: self };\r\n    }\r\n\r\n    function sort(comparer, ascending) {\r\n      sortAsc = ascending;\r\n      sortComparer = comparer;\r\n      fastSortField = null;\r\n      if (ascending === false) {\r\n        items.reverse();\r\n      }\r\n      items.sort(comparer);\r\n      if (ascending === false) {\r\n        items.reverse();\r\n      }\r\n      idxById = new Slick.Map();\r\n      updateIdxById();\r\n      refresh();\r\n    }\r\n\r\n    /***\r\n     * Provides a workaround for the extremely slow sorting in IE.\r\n     * Does a [lexicographic] sort on a give column by temporarily overriding Object.prototype.toString\r\n     * to return the value of that field and then doing a native Array.sort().\r\n     */\r\n    function fastSort(field, ascending) {\r\n      sortAsc = ascending;\r\n      fastSortField = field;\r\n      sortComparer = null;\r\n      var oldToString = Object.prototype.toString;\r\n      Object.prototype.toString = (typeof field == \"function\") ? field : function () {\r\n        return this[field];\r\n      };\r\n      // an extra reversal for descending sort keeps the sort stable\r\n      // (assuming a stable native sort implementation, which isn't true in some cases)\r\n      if (ascending === false) {\r\n        items.reverse();\r\n      }\r\n      items.sort();\r\n      Object.prototype.toString = oldToString;\r\n      if (ascending === false) {\r\n        items.reverse();\r\n      }\r\n      idxById = new Slick.Map();\r\n      updateIdxById();\r\n      refresh();\r\n    }\r\n\r\n    function reSort() {\r\n      if (sortComparer) {\r\n        sort(sortComparer, sortAsc);\r\n      } else if (fastSortField) {\r\n        fastSort(fastSortField, sortAsc);\r\n      }\r\n    }\r\n\r\n    function getFilteredItems() {\r\n      return filteredItems;\r\n    }\r\n\r\n    function getFilteredItemCount() {\r\n      return filteredItems.length;\r\n    }\r\n\r\n    function getFilter() {\r\n      return filter;\r\n    }\r\n\r\n    function setFilter(filterFn) {\r\n      filter = filterFn;\r\n      if (options.inlineFilters) {\r\n        compiledFilter = compileFilter();\r\n        compiledFilterWithCaching = compileFilterWithCaching();\r\n      }\r\n      refresh();\r\n    }\r\n\r\n    function getGrouping() {\r\n      return groupingInfos;\r\n    }\r\n\r\n    function setGrouping(groupingInfo) {\r\n      if (!options.groupItemMetadataProvider) {\r\n        options.groupItemMetadataProvider = new Slick.Data.GroupItemMetadataProvider();\r\n      }\r\n\r\n      groups = [];\r\n      toggledGroupsByLevel = [];\r\n      groupingInfo = groupingInfo || [];\r\n      groupingInfos = (groupingInfo instanceof Array) ? groupingInfo : [groupingInfo];\r\n\r\n      for (var i = 0; i < groupingInfos.length; i++) {\r\n        var gi = groupingInfos[i] = $.extend(true, {}, groupingInfoDefaults, groupingInfos[i]);\r\n        gi.getterIsAFn = typeof gi.getter === \"function\";\r\n\r\n        // pre-compile accumulator loops\r\n        gi.compiledAccumulators = [];\r\n        var idx = gi.aggregators.length;\r\n        while (idx--) {\r\n          gi.compiledAccumulators[idx] = compileAccumulatorLoop(gi.aggregators[idx]);\r\n        }\r\n\r\n        toggledGroupsByLevel[i] = {};\r\n      }\r\n\r\n      refresh();\r\n    }\r\n\r\n    /**\r\n     * @deprecated Please use {@link setGrouping}.\r\n     */\r\n    function groupBy(valueGetter, valueFormatter, sortComparer) {\r\n      if (valueGetter == null) {\r\n        setGrouping([]);\r\n        return;\r\n      }\r\n\r\n      setGrouping({\r\n        getter: valueGetter,\r\n        formatter: valueFormatter,\r\n        comparer: sortComparer\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @deprecated Please use {@link setGrouping}.\r\n     */\r\n    function setAggregators(groupAggregators, includeCollapsed) {\r\n      if (!groupingInfos.length) {\r\n        throw new Error(\"[SlickGrid DataView] At least one grouping must be specified before calling setAggregators().\");\r\n      }\r\n\r\n      groupingInfos[0].aggregators = groupAggregators;\r\n      groupingInfos[0].aggregateCollapsed = includeCollapsed;\r\n\r\n      setGrouping(groupingInfos);\r\n    }\r\n\r\n    function getItemByIdx(i) {\r\n      return items[i];\r\n    }\r\n\r\n    function getIdxById(id) {\r\n      return idxById.get(id);\r\n    }\r\n\r\n    function ensureRowsByIdCache() {\r\n      if (!rowsById) {\r\n        rowsById = {};\r\n        for (var i = 0, l = rows.length; i < l; i++) {\r\n          rowsById[rows[i][idProperty]] = i;\r\n        }\r\n      }\r\n    }\r\n\r\n    function getRowByItem(item) {\r\n      ensureRowsByIdCache();\r\n      return rowsById[item[idProperty]];\r\n    }\r\n\r\n    function getRowById(id) {\r\n      ensureRowsByIdCache();\r\n      return rowsById[id];\r\n    }\r\n\r\n    function getItemById(id) {\r\n      return items[idxById.get(id)];\r\n    }\r\n\r\n    function mapItemsToRows(itemArray) {\r\n      var rows = [];\r\n      ensureRowsByIdCache();\r\n      for (var i = 0, l = itemArray.length; i < l; i++) {\r\n        var row = rowsById[itemArray[i][idProperty]];\r\n        if (row != null) {\r\n          rows[rows.length] = row;\r\n        }\r\n      }\r\n      return rows;\r\n    }\r\n\r\n    function mapIdsToRows(idArray) {\r\n      var rows = [];\r\n      ensureRowsByIdCache();\r\n      for (var i = 0, l = idArray.length; i < l; i++) {\r\n        var row = rowsById[idArray[i]];\r\n        if (row != null) {\r\n          rows[rows.length] = row;\r\n        }\r\n      }\r\n      return rows;\r\n    }\r\n\r\n    function mapRowsToIds(rowArray) {\r\n      var ids = [];\r\n      for (var i = 0, l = rowArray.length; i < l; i++) {\r\n        if (rowArray[i] < rows.length) {\r\n          ids[ids.length] = rows[rowArray[i]][idProperty];\r\n        }\r\n      }\r\n      return ids;\r\n    }\r\n\r\n    /***\r\n     * Performs the update operations of a single item by id without\r\n     * triggering any events or refresh operations.\r\n     * @param id The new id of the item.\r\n     * @param item The item which should be the new value for the given id.\r\n     */\r\n    function updateSingleItem(id, item) {\r\n      // see also https://github.com/mleibman/SlickGrid/issues/1082\r\n      if (!idxById.has(id)) {\r\n        throw new Error(\"[SlickGrid DataView] Invalid id\");\r\n      }\r\n\r\n      // What if the specified item also has an updated idProperty?\r\n      // Then we'll have to update the index as well, and possibly the `updated` cache too.\r\n      if (id !== item[idProperty]) {\r\n        // make sure the new id is unique:\r\n        var newId = item[idProperty];\r\n        if (newId == null) {\r\n          throw new Error(\"[SlickGrid DataView] Cannot update item to associate with a null id\");\r\n        }\r\n        if (idxById.has(newId)) {\r\n          throw new Error(\"[SlickGrid DataView] Cannot update item to associate with a non-unique id\");\r\n        }\r\n        idxById.set(newId, idxById.get(id));\r\n        idxById.delete(id);\r\n\r\n        // Also update the `updated` hashtable/markercache? Yes, `recalc()` inside `refresh()` needs that one!\r\n        if (updated && updated[id]) {\r\n          delete updated[id];\r\n        }\r\n\r\n        // Also update the row indexes? no need since the `refresh()`, further down, blows away the `rowsById[]` cache!\r\n\r\n        id = newId;\r\n      }\r\n      items[idxById.get(id)] = item;\r\n\r\n      // Also update the rows? no need since the `refresh()`, further down, blows away the `rows[]` cache and recalculates it via `recalc()`!\r\n\r\n      if (!updated) {\r\n        updated = {};\r\n      }\r\n      updated[id] = true;\r\n    }\r\n\r\n    /***\r\n     * Updates a single item in the data view given the id and new value.\r\n     * @param id The new id of the item.\r\n     * @param item The item which should be the new value for the given id.\r\n     */\r\n    function updateItem(id, item) {\r\n      updateSingleItem(id, item);\r\n      refresh();\r\n    }\r\n\r\n    /***\r\n     * Updates multiple items in the data view given the new ids and new values.\r\n     * @param id {Array} The array of new ids which is in the same order as the items.\r\n     * @param newItems {Array} The new items that should be set in the data view for the given ids.\r\n     */\r\n    function updateItems(ids, newItems) {\r\n      if(ids.length !== newItems.length) {\r\n        throw new Error(\"[SlickGrid DataView] Mismatch on the length of ids and items provided to update\");\r\n      }\r\n      for (var i = 0, l = newItems.length; i < l; i++) {\r\n        updateSingleItem(ids[i], newItems[i]);\r\n      }\r\n      refresh();\r\n    }\r\n\r\n    /***\r\n     * Inserts a single item into the data view at the given position.\r\n     * @param insertBefore {Number} The 0-based index before which the item should be inserted.\r\n     * @param item The item to insert.\r\n     */\r\n    function insertItem(insertBefore, item) {\r\n      items.splice(insertBefore, 0, item);\r\n      updateIdxById(insertBefore);\r\n      refresh();\r\n    }\r\n\r\n    /***\r\n     * Inserts multiple items into the data view at the given position.\r\n     * @param insertBefore {Number} The 0-based index before which the items should be inserted.\r\n     * @param newItems {Array}  The items to insert.\r\n     */\r\n    function insertItems(insertBefore, newItems) {\r\n      Array.prototype.splice.apply(items, [insertBefore, 0].concat(newItems));\r\n      updateIdxById(insertBefore);\r\n      refresh();\r\n    }\r\n\r\n    /***\r\n     * Adds a single item at the end of the data view.\r\n     * @param item The item to add at the end.\r\n     */\r\n    function addItem(item) {\r\n      items.push(item);\r\n      updateIdxById(items.length - 1);\r\n      refresh();\r\n    }\r\n\r\n    /***\r\n     * Adds multiple items at the end of the data view.\r\n     * @param newItems {Array} The items to add at the end.\r\n     */\r\n    function addItems(newItems) {\r\n      items = items.concat(newItems);\r\n      updateIdxById(items.length - newItems.length);\r\n      refresh();\r\n    }\r\n\r\n    /***\r\n     * Deletes a single item identified by the given id from the data view.\r\n     * @param id The id identifying the object to delete.\r\n     */\r\n    function deleteItem(id) {\r\n      if (isBulkSuspend) {\r\n        bulkDeleteIds.set(id, true);\r\n      } else {\r\n        var idx = idxById.get(id);\r\n        if (idx === undefined) {\r\n          throw new Error(\"[SlickGrid DataView] Invalid id\");\r\n        }\r\n        idxById.delete(id);\r\n        items.splice(idx, 1);\r\n        updateIdxById(idx);\r\n        refresh();\r\n      }\r\n    }\r\n\r\n    /***\r\n     * Deletes multiple item identified by the given ids from the data view.\r\n     * @param ids {Array} The ids of the items to delete.\r\n     */\r\n    function deleteItems(ids) {\r\n      if (ids.length === 0) {\r\n        return;\r\n      }\r\n\r\n      if (isBulkSuspend) {\r\n        for (var i = 0, l = ids.length; i < l; i++) {\r\n          var id = ids[i];\r\n          var idx = idxById.get(id);\r\n          if (idx === undefined) {\r\n            throw new Error(\"[SlickGrid DataView] Invalid id\");\r\n          }\r\n          bulkDeleteIds.set(id, true);\r\n        }\r\n      } else {\r\n        // collect all indexes\r\n        var indexesToDelete = [];\r\n        for (var i = 0, l = ids.length; i < l; i++) {\r\n          var id = ids[i];\r\n          var idx = idxById.get(id);\r\n          if (idx === undefined) {\r\n            throw new Error(\"[SlickGrid DataView] Invalid id\");\r\n          }\r\n          idxById.delete(id);\r\n          indexesToDelete.push(idx);\r\n        }\r\n\r\n        // Remove from back to front\r\n        indexesToDelete.sort();\r\n        for (var i = indexesToDelete.length - 1; i >= 0; --i) {\r\n          items.splice(indexesToDelete[i], 1);\r\n        }\r\n\r\n        // update lookup from front to back\r\n        updateIdxById(indexesToDelete[0]);\r\n        refresh();\r\n      }\r\n    }\r\n\r\n    function sortedAddItem(item) {\r\n      if (!sortComparer) {\r\n        throw new Error(\"[SlickGrid DataView] sortedAddItem() requires a sort comparer, use sort()\");\r\n      }\r\n      insertItem(sortedIndex(item), item);\r\n    }\r\n\r\n    function sortedUpdateItem(id, item) {\r\n      if (!idxById.has(id) || id !== item[idProperty]) {\r\n        throw new Error(\"[SlickGrid DataView] Invalid or non-matching id \" + idxById.get(id));\r\n      }\r\n      if (!sortComparer) {\r\n        throw new Error(\"[SlickGrid DataView] sortedUpdateItem() requires a sort comparer, use sort()\");\r\n      }\r\n      var oldItem = getItemById(id);\r\n      if (sortComparer(oldItem, item) !== 0) {\r\n        // item affects sorting -> must use sorted add\r\n        deleteItem(id);\r\n        sortedAddItem(item);\r\n      }\r\n      else { // update does not affect sorting -> regular update works fine\r\n        updateItem(id, item);\r\n      }\r\n    }\r\n\r\n    function sortedIndex(searchItem) {\r\n      var low = 0, high = items.length;\r\n\r\n      while (low < high) {\r\n        var mid = low + high >>> 1;\r\n        if (sortComparer(items[mid], searchItem) === -1) {\r\n          low = mid + 1;\r\n        }\r\n        else {\r\n          high = mid;\r\n        }\r\n      }\r\n      return low;\r\n    }\r\n\r\n    function getItemCount() {\r\n      return items.length;\r\n    }\r\n\r\n    function getLength() {\r\n      return rows.length;\r\n    }\r\n\r\n    function getItem(i) {\r\n      var item = rows[i];\r\n\r\n      // if this is a group row, make sure totals are calculated and update the title\r\n      if (item && item.__group && item.totals && !item.totals.initialized) {\r\n        var gi = groupingInfos[item.level];\r\n        if (!gi.displayTotalsRow) {\r\n          calculateTotals(item.totals);\r\n          item.title = gi.formatter ? gi.formatter(item) : item.value;\r\n        }\r\n      }\r\n      // if this is a totals row, make sure it's calculated\r\n      else if (item && item.__groupTotals && !item.initialized) {\r\n        calculateTotals(item);\r\n      }\r\n\r\n      return item;\r\n    }\r\n\r\n    function getItemMetadata(i) {\r\n      var item = rows[i];\r\n      if (item === undefined) {\r\n        return null;\r\n      }\r\n\r\n      // overrides for grouping rows\r\n      if (item.__group) {\r\n        return options.groupItemMetadataProvider.getGroupRowMetadata(item);\r\n      }\r\n\r\n      // overrides for totals rows\r\n      if (item.__groupTotals) {\r\n        return options.groupItemMetadataProvider.getTotalsRowMetadata(item);\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    function expandCollapseAllGroups(level, collapse) {\r\n      if (level == null) {\r\n        for (var i = 0; i < groupingInfos.length; i++) {\r\n          toggledGroupsByLevel[i] = {};\r\n          groupingInfos[i].collapsed = collapse;\r\n\r\n          if (collapse === true) {\r\n            onGroupCollapsed.notify({ level: i, groupingKey: null });\r\n          } else {\r\n            onGroupExpanded.notify({ level: i, groupingKey: null });\r\n          }\r\n        }\r\n      } else {\r\n        toggledGroupsByLevel[level] = {};\r\n        groupingInfos[level].collapsed = collapse;\r\n\r\n        if (collapse === true) {\r\n          onGroupCollapsed.notify({ level: level, groupingKey: null });\r\n        } else {\r\n          onGroupExpanded.notify({ level: level, groupingKey: null });\r\n        }\r\n      }\r\n      refresh();\r\n    }\r\n\r\n    /**\r\n     * @param level {Number} Optional level to collapse.  If not specified, applies to all levels.\r\n     */\r\n    function collapseAllGroups(level) {\r\n      expandCollapseAllGroups(level, true);\r\n    }\r\n\r\n    /**\r\n     * @param level {Number} Optional level to expand.  If not specified, applies to all levels.\r\n     */\r\n    function expandAllGroups(level) {\r\n      expandCollapseAllGroups(level, false);\r\n    }\r\n\r\n    function expandCollapseGroup(level, groupingKey, collapse) {\r\n      toggledGroupsByLevel[level][groupingKey] = groupingInfos[level].collapsed ^ collapse;\r\n      refresh();\r\n    }\r\n\r\n    /**\r\n     * @param varArgs Either a Slick.Group's \"groupingKey\" property, or a\r\n     *     variable argument list of grouping values denoting a unique path to the row.  For\r\n     *     example, calling collapseGroup('high', '10%') will collapse the '10%' subgroup of\r\n     *     the 'high' group.\r\n     */\r\n    function collapseGroup(varArgs) {\r\n      var args = Array.prototype.slice.call(arguments);\r\n      var arg0 = args[0];\r\n      var groupingKey;\r\n      var level;\r\n\r\n      if (args.length === 1 && arg0.indexOf(groupingDelimiter) !== -1) {\r\n        groupingKey = arg0;\r\n        level = arg0.split(groupingDelimiter).length - 1;\r\n      } else {\r\n        groupingKey = args.join(groupingDelimiter);\r\n        level = args.length - 1;\r\n      }\r\n\r\n      expandCollapseGroup(level, groupingKey, true);\r\n      onGroupCollapsed.notify({ level: level, groupingKey: groupingKey });\r\n    }\r\n\r\n    /**\r\n     * @param varArgs Either a Slick.Group's \"groupingKey\" property, or a\r\n     *     variable argument list of grouping values denoting a unique path to the row.  For\r\n     *     example, calling expandGroup('high', '10%') will expand the '10%' subgroup of\r\n     *     the 'high' group.\r\n     */\r\n    function expandGroup(varArgs) {\r\n      var args = Array.prototype.slice.call(arguments);\r\n      var arg0 = args[0];\r\n      var groupingKey;\r\n      var level;\r\n\r\n      if (args.length === 1 && arg0.indexOf(groupingDelimiter) !== -1) {\r\n        level = arg0.split(groupingDelimiter).length - 1;\r\n        groupingKey = arg0;\r\n      } else {\r\n        level = args.length - 1;\r\n        groupingKey = args.join(groupingDelimiter);\r\n      }\r\n\r\n      expandCollapseGroup(level, groupingKey, false);\r\n      onGroupExpanded.notify({ level: level, groupingKey: groupingKey });\r\n    }\r\n\r\n    function getGroups() {\r\n      return groups;\r\n    }\r\n\r\n    function extractGroups(rows, parentGroup) {\r\n      var group;\r\n      var val;\r\n      var groups = [];\r\n      var groupsByVal = {};\r\n      var r;\r\n      var level = parentGroup ? parentGroup.level + 1 : 0;\r\n      var gi = groupingInfos[level];\r\n\r\n      for (var i = 0, l = gi.predefinedValues.length; i < l; i++) {\r\n        val = gi.predefinedValues[i];\r\n        group = groupsByVal[val];\r\n        if (!group) {\r\n          group = new Slick.Group();\r\n          group.value = val;\r\n          group.level = level;\r\n          group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\r\n          groups[groups.length] = group;\r\n          groupsByVal[val] = group;\r\n        }\r\n      }\r\n\r\n      for (var i = 0, l = rows.length; i < l; i++) {\r\n        r = rows[i];\r\n        val = gi.getterIsAFn ? gi.getter(r) : r[gi.getter];\r\n        group = groupsByVal[val];\r\n        if (!group) {\r\n          group = new Slick.Group();\r\n          group.value = val;\r\n          group.level = level;\r\n          group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\r\n          groups[groups.length] = group;\r\n          groupsByVal[val] = group;\r\n        }\r\n\r\n        group.rows[group.count++] = r;\r\n      }\r\n\r\n      if (level < groupingInfos.length - 1) {\r\n        for (var i = 0; i < groups.length; i++) {\r\n          group = groups[i];\r\n          group.groups = extractGroups(group.rows, group);\r\n        }\r\n      }\r\n\r\n      if(groups.length) {\r\n        addTotals(groups, level);\r\n      }\r\n\r\n      groups.sort(groupingInfos[level].comparer);\r\n\r\n      return groups;\r\n    }\r\n\r\n    function calculateTotals(totals) {\r\n      var group = totals.group;\r\n      var gi = groupingInfos[group.level];\r\n      var isLeafLevel = (group.level == groupingInfos.length);\r\n      var agg, idx = gi.aggregators.length;\r\n\r\n      if (!isLeafLevel && gi.aggregateChildGroups) {\r\n        // make sure all the subgroups are calculated\r\n        var i = group.groups.length;\r\n        while (i--) {\r\n          if (!group.groups[i].totals.initialized) {\r\n            calculateTotals(group.groups[i].totals);\r\n          }\r\n        }\r\n      }\r\n\r\n      while (idx--) {\r\n        agg = gi.aggregators[idx];\r\n        agg.init();\r\n        if (!isLeafLevel && gi.aggregateChildGroups) {\r\n          gi.compiledAccumulators[idx].call(agg, group.groups);\r\n        } else {\r\n          gi.compiledAccumulators[idx].call(agg, group.rows);\r\n        }\r\n        agg.storeResult(totals);\r\n      }\r\n      totals.initialized = true;\r\n    }\r\n\r\n    function addGroupTotals(group) {\r\n      var gi = groupingInfos[group.level];\r\n      var totals = new Slick.GroupTotals();\r\n      totals.group = group;\r\n      group.totals = totals;\r\n      if (!gi.lazyTotalsCalculation) {\r\n        calculateTotals(totals);\r\n      }\r\n    }\r\n\r\n    function addTotals(groups, level) {\r\n      level = level || 0;\r\n      var gi = groupingInfos[level];\r\n      var groupCollapsed = gi.collapsed;\r\n      var toggledGroups = toggledGroupsByLevel[level];\r\n      var idx = groups.length, g;\r\n      while (idx--) {\r\n        g = groups[idx];\r\n\r\n        if (g.collapsed && !gi.aggregateCollapsed) {\r\n          continue;\r\n        }\r\n\r\n        // Do a depth-first aggregation so that parent group aggregators can access subgroup totals.\r\n        if (g.groups) {\r\n          addTotals(g.groups, level + 1);\r\n        }\r\n\r\n        if (gi.aggregators.length && (\r\n          gi.aggregateEmpty || g.rows.length || (g.groups && g.groups.length))) {\r\n          addGroupTotals(g);\r\n        }\r\n\r\n        g.collapsed = groupCollapsed ^ toggledGroups[g.groupingKey];\r\n        g.title = gi.formatter ? gi.formatter(g) : g.value;\r\n      }\r\n    }\r\n\r\n    function flattenGroupedRows(groups, level) {\r\n      level = level || 0;\r\n      var gi = groupingInfos[level];\r\n      var groupedRows = [], rows, gl = 0, g;\r\n      for (var i = 0, l = groups.length; i < l; i++) {\r\n        g = groups[i];\r\n        groupedRows[gl++] = g;\r\n\r\n        if (!g.collapsed) {\r\n          rows = g.groups ? flattenGroupedRows(g.groups, level + 1) : g.rows;\r\n          for (var j = 0, jj = rows.length; j < jj; j++) {\r\n            groupedRows[gl++] = rows[j];\r\n          }\r\n        }\r\n\r\n        if (g.totals && gi.displayTotalsRow && (!g.collapsed || gi.aggregateCollapsed)) {\r\n          groupedRows[gl++] = g.totals;\r\n        }\r\n      }\r\n      return groupedRows;\r\n    }\r\n\r\n    function getFunctionInfo(fn) {\r\n      var fnStr = fn.toString();\r\n      var usingEs5 = fnStr.indexOf('function') >= 0; // with ES6, the word function is not present\r\n      var fnRegex = usingEs5 ? /^function[^(]*\\(([^)]*)\\)\\s*{([\\s\\S]*)}$/ : /^[^(]*\\(([^)]*)\\)\\s*{([\\s\\S]*)}$/;\r\n      var matches = fn.toString().match(fnRegex);\r\n      return {\r\n        params: matches[1].split(\",\"),\r\n        body: matches[2]\r\n      };\r\n    }\r\n\r\n    function compileAccumulatorLoop(aggregator) {\r\n      if (aggregator.accumulate) {\r\n        var accumulatorInfo = getFunctionInfo(aggregator.accumulate);\r\n        var fn = new Function(\r\n          \"_items\",\r\n          \"for (var \" + accumulatorInfo.params[0] + \", _i=0, _il=_items.length; _i<_il; _i++) {\" +\r\n          accumulatorInfo.params[0] + \" = _items[_i]; \" +\r\n          accumulatorInfo.body +\r\n          \"}\"\r\n        );\r\n        var fnName = \"compiledAccumulatorLoop\";\r\n        fn.displayName = fnName;\r\n        fn.name = setFunctionName(fn, fnName);\r\n        return fn;\r\n      } else {\r\n        return function noAccumulator() {\r\n        }\r\n      }\r\n    }\r\n\r\n    function compileFilter() {\r\n      var filterInfo = getFunctionInfo(filter);\r\n\r\n      var filterPath1 = \"{ continue _coreloop; }$1\";\r\n      var filterPath2 = \"{ _retval[_idx++] = $item$; continue _coreloop; }$1\";\r\n      // make some allowances for minification - there's only so far we can go with RegEx\r\n      var filterBody = filterInfo.body\r\n        .replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1)\r\n        .replace(/return!1([;}]|\\}|$)/gi, filterPath1)\r\n        .replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2)\r\n        .replace(/return!0([;}]|\\}|$)/gi, filterPath2)\r\n        .replace(/return ([^;}]+?)\\s*([;}]|$)/gi,\r\n          \"{ if ($1) { _retval[_idx++] = $item$; }; continue _coreloop; }$2\");\r\n\r\n      // This preserves the function template code after JS compression,\r\n      // so that replace() commands still work as expected.\r\n      var tpl = [\r\n        //\"function(_items, _args) { \",\r\n        \"var _retval = [], _idx = 0; \",\r\n        \"var $item$, $args$ = _args; \",\r\n        \"_coreloop: \",\r\n        \"for (var _i = 0, _il = _items.length; _i < _il; _i++) { \",\r\n        \"$item$ = _items[_i]; \",\r\n        \"$filter$; \",\r\n        \"} \",\r\n        \"return _retval; \"\r\n        //\"}\"\r\n      ].join(\"\");\r\n      tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\r\n      tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\r\n      tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\r\n\r\n      var fn = new Function(\"_items,_args\", tpl);\r\n      var fnName = \"compiledFilter\";\r\n      fn.displayName = fnName;\r\n      fn.name = setFunctionName(fn, fnName);\r\n      return fn;\r\n    }\r\n\r\n    function compileFilterWithCaching() {\r\n      var filterInfo = getFunctionInfo(filter);\r\n\r\n      var filterPath1 = \"{ continue _coreloop; }$1\";\r\n      var filterPath2 = \"{ _cache[_i] = true;_retval[_idx++] = $item$; continue _coreloop; }$1\";\r\n      // make some allowances for minification - there's only so far we can go with RegEx\r\n      var filterBody = filterInfo.body\r\n        .replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1)\r\n        .replace(/return!1([;}]|\\}|$)/gi, filterPath1)\r\n        .replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2)\r\n        .replace(/return!0([;}]|\\}|$)/gi, filterPath2)\r\n        .replace(/return ([^;}]+?)\\s*([;}]|$)/gi,\r\n          \"{ if ((_cache[_i] = $1)) { _retval[_idx++] = $item$; }; continue _coreloop; }$2\");\r\n\r\n      // This preserves the function template code after JS compression,\r\n      // so that replace() commands still work as expected.\r\n      var tpl = [\r\n        //\"function(_items, _args, _cache) { \",\r\n        \"var _retval = [], _idx = 0; \",\r\n        \"var $item$, $args$ = _args; \",\r\n        \"_coreloop: \",\r\n        \"for (var _i = 0, _il = _items.length; _i < _il; _i++) { \",\r\n        \"$item$ = _items[_i]; \",\r\n        \"if (_cache[_i]) { \",\r\n        \"_retval[_idx++] = $item$; \",\r\n        \"continue _coreloop; \",\r\n        \"} \",\r\n        \"$filter$; \",\r\n        \"} \",\r\n        \"return _retval; \"\r\n        //\"}\"\r\n      ].join(\"\");\r\n      tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\r\n      tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\r\n      tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\r\n\r\n      var fn = new Function(\"_items,_args,_cache\", tpl);\r\n      var fnName = \"compiledFilterWithCaching\";\r\n      fn.displayName = fnName;\r\n      fn.name = setFunctionName(fn, fnName);\r\n      return fn;\r\n    }\r\n\r\n    /**\r\n     * In ES5 we could set the function name on the fly but in ES6 this is forbidden and we need to set it through differently\r\n     * We can use Object.defineProperty and set it the property to writable, see MDN for reference\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\r\n     * @param {string} fn\r\n     * @param {string} fnName\r\n     */\r\n    function setFunctionName(fn, fnName) {\r\n      try {\r\n        Object.defineProperty(fn, 'name', {\r\n          writable: true,\r\n          value: fnName\r\n        });\r\n      } catch (err) {\r\n        fn.name = fnName;\r\n      }\r\n    }\r\n\r\n    function uncompiledFilter(items, args) {\r\n      var retval = [], idx = 0;\r\n\r\n      for (var i = 0, ii = items.length; i < ii; i++) {\r\n        if (filter(items[i], args)) {\r\n          retval[idx++] = items[i];\r\n        }\r\n      }\r\n\r\n      return retval;\r\n    }\r\n\r\n    function uncompiledFilterWithCaching(items, args, cache) {\r\n      var retval = [], idx = 0, item;\r\n\r\n      for (var i = 0, ii = items.length; i < ii; i++) {\r\n        item = items[i];\r\n        if (cache[i]) {\r\n          retval[idx++] = item;\r\n        } else if (filter(item, args)) {\r\n          retval[idx++] = item;\r\n          cache[i] = true;\r\n        }\r\n      }\r\n\r\n      return retval;\r\n    }\r\n\r\n    function getFilteredAndPagedItems(items) {\r\n      if (filter) {\r\n        var batchFilter = options.inlineFilters ? compiledFilter : uncompiledFilter;\r\n        var batchFilterWithCaching = options.inlineFilters ? compiledFilterWithCaching : uncompiledFilterWithCaching;\r\n\r\n        if (refreshHints.isFilterNarrowing) {\r\n          filteredItems = batchFilter(filteredItems, filterArgs);\r\n        } else if (refreshHints.isFilterExpanding) {\r\n          filteredItems = batchFilterWithCaching(items, filterArgs, filterCache);\r\n        } else if (!refreshHints.isFilterUnchanged) {\r\n          filteredItems = batchFilter(items, filterArgs);\r\n        }\r\n      } else {\r\n        // special case:  if not filtering and not paging, the resulting\r\n        // rows collection needs to be a copy so that changes due to sort\r\n        // can be caught\r\n        filteredItems = pagesize ? items : items.concat();\r\n      }\r\n\r\n      // get the current page\r\n      var paged;\r\n      if (pagesize) {\r\n        if (filteredItems.length <= pagenum * pagesize) {\r\n          if (filteredItems.length === 0) {\r\n            pagenum = 0;\r\n          } else {\r\n            pagenum = Math.floor((filteredItems.length - 1) / pagesize);\r\n          }\r\n        }\r\n        paged = filteredItems.slice(pagesize * pagenum, pagesize * pagenum + pagesize);\r\n      } else {\r\n        paged = filteredItems;\r\n      }\r\n      return { totalRows: filteredItems.length, rows: paged };\r\n    }\r\n\r\n    function getRowDiffs(rows, newRows) {\r\n      var item, r, eitherIsNonData, diff = [];\r\n      var from = 0, to = Math.max(newRows.length, rows.length);\r\n\r\n      if (refreshHints && refreshHints.ignoreDiffsBefore) {\r\n        from = Math.max(0,\r\n          Math.min(newRows.length, refreshHints.ignoreDiffsBefore));\r\n      }\r\n\r\n      if (refreshHints && refreshHints.ignoreDiffsAfter) {\r\n        to = Math.min(newRows.length,\r\n          Math.max(0, refreshHints.ignoreDiffsAfter));\r\n      }\r\n\r\n      for (var i = from, rl = rows.length; i < to; i++) {\r\n        if (i >= rl) {\r\n          diff[diff.length] = i;\r\n        } else {\r\n          item = newRows[i];\r\n          r = rows[i];\r\n\r\n          if (!item || (groupingInfos.length && (eitherIsNonData = (item.__nonDataRow) || (r.__nonDataRow)) &&\r\n            item.__group !== r.__group ||\r\n            item.__group && !item.equals(r))\r\n            || (eitherIsNonData &&\r\n              // no good way to compare totals since they are arbitrary DTOs\r\n              // deep object comparison is pretty expensive\r\n              // always considering them 'dirty' seems easier for the time being\r\n              (item.__groupTotals || r.__groupTotals))\r\n            || item[idProperty] != r[idProperty]\r\n            || (updated && updated[item[idProperty]])\r\n          ) {\r\n            diff[diff.length] = i;\r\n          }\r\n        }\r\n      }\r\n      return diff;\r\n    }\r\n\r\n    function recalc(_items) {\r\n      rowsById = null;\r\n\r\n      if (refreshHints.isFilterNarrowing != prevRefreshHints.isFilterNarrowing ||\r\n        refreshHints.isFilterExpanding != prevRefreshHints.isFilterExpanding) {\r\n        filterCache = [];\r\n      }\r\n\r\n      var filteredItems = getFilteredAndPagedItems(_items);\r\n      totalRows = filteredItems.totalRows;\r\n      var newRows = filteredItems.rows;\r\n\r\n      groups = [];\r\n      if (groupingInfos.length) {\r\n        groups = extractGroups(newRows);\r\n        if (groups.length) {\r\n          newRows = flattenGroupedRows(groups);\r\n        }\r\n      }\r\n\r\n      var diff = getRowDiffs(rows, newRows);\r\n\r\n      rows = newRows;\r\n\r\n      return diff;\r\n    }\r\n\r\n    function refresh() {\r\n      if (suspend) {\r\n        return;\r\n      }\r\n\r\n      var previousPagingInfo = $.extend(true, {}, getPagingInfo());\r\n\r\n      var countBefore = rows.length;\r\n      var totalRowsBefore = totalRows;\r\n\r\n      var diff = recalc(items, filter); // pass as direct refs to avoid closure perf hit\r\n\r\n      // if the current page is no longer valid, go to last page and recalc\r\n      // we suffer a performance penalty here, but the main loop (recalc) remains highly optimized\r\n      if (pagesize && totalRows < pagenum * pagesize) {\r\n        pagenum = Math.max(0, Math.ceil(totalRows / pagesize) - 1);\r\n        diff = recalc(items, filter);\r\n      }\r\n\r\n      updated = null;\r\n      prevRefreshHints = refreshHints;\r\n      refreshHints = {};\r\n\r\n      if (totalRowsBefore !== totalRows) {\r\n        // use the previously saved paging info\r\n        if (onBeforePagingInfoChanged.notify(previousPagingInfo, null, self) !== false) {\r\n          onPagingInfoChanged.notify(getPagingInfo(), null, self);\r\n        }\r\n      }\r\n      if (countBefore !== rows.length) {\r\n        onRowCountChanged.notify({ previous: countBefore, current: rows.length, itemCount: items.length, dataView: self, callingOnRowsChanged: (diff.length > 0) }, null, self);\r\n      }\r\n      if (diff.length > 0) {\r\n        onRowsChanged.notify({ rows: diff, itemCount: items.length, dataView: self, calledOnRowCountChanged: (countBefore !== rows.length) }, null, self);\r\n      }\r\n      if (countBefore !== rows.length || diff.length > 0) {\r\n        onRowsOrCountChanged.notify({\r\n          rowsDiff: diff, previousRowCount: countBefore, currentRowCount: rows.length, itemCount: items.length,\r\n          rowCountChanged: countBefore !== rows.length, rowsChanged: diff.length > 0, dataView: self\r\n        }, null, self);\r\n      }\r\n    }\r\n    /***\r\n     * Wires the grid and the DataView together to keep row selection tied to item ids.\r\n     * This is useful since, without it, the grid only knows about rows, so if the items\r\n     * move around, the same rows stay selected instead of the selection moving along\r\n     * with the items.\r\n     *\r\n     * NOTE:  This doesn't work with cell selection model.\r\n     *\r\n     * @param grid {Slick.Grid} The grid to sync selection with.\r\n     * @param preserveHidden {Boolean} Whether to keep selected items that go out of the\r\n     *     view due to them getting filtered out.\r\n     * @param preserveHiddenOnSelectionChange {Boolean} Whether to keep selected items\r\n     *     that are currently out of the view (see preserveHidden) as selected when selection\r\n     *     changes.\r\n     * @return {Slick.Event} An event that notifies when an internal list of selected row ids\r\n     *     changes.  This is useful since, in combination with the above two options, it allows\r\n     *     access to the full list selected row ids, and not just the ones visible to the grid.\r\n     * @method syncGridSelection\r\n     */\r\n    function syncGridSelection(grid, preserveHidden, preserveHiddenOnSelectionChange) {\r\n      var self = this;\r\n      _grid = grid;\r\n      var inHandler;\r\n      selectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\r\n      var onSelectedRowIdsChanged = new Slick.Event();\r\n\r\n      function setSelectedRowIds(rowIds) {\r\n        if (selectedRowIds.join(\",\") == rowIds.join(\",\")) {\r\n          return;\r\n        }\r\n\r\n        selectedRowIds = rowIds;\r\n\r\n        onSelectedRowIdsChanged.notify({\r\n          \"grid\": grid,\r\n          \"ids\": selectedRowIds,\r\n          \"dataView\": self\r\n        }, new Slick.EventData(), self);\r\n      }\r\n\r\n      function update() {\r\n        if (selectedRowIds.length > 0) {\r\n          inHandler = true;\r\n          var selectedRows = self.mapIdsToRows(selectedRowIds);\r\n          if (!preserveHidden) {\r\n            setSelectedRowIds(self.mapRowsToIds(selectedRows));\r\n          }\r\n          grid.setSelectedRows(selectedRows);\r\n          inHandler = false;\r\n        }\r\n      }\r\n\r\n      grid.onSelectedRowsChanged.subscribe(function (e, args) {\r\n        if (inHandler) { return; }\r\n        var newSelectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\r\n        if (!preserveHiddenOnSelectionChange || !grid.getOptions().multiSelect) {\r\n          setSelectedRowIds(newSelectedRowIds);\r\n        } else {\r\n          // keep the ones that are hidden\r\n          var existing = $.grep(selectedRowIds, function (id) { return self.getRowById(id) === undefined; });\r\n          // add the newly selected ones\r\n          setSelectedRowIds(existing.concat(newSelectedRowIds));\r\n        }\r\n      });\r\n\r\n      this.onRowsOrCountChanged.subscribe(update);\r\n\r\n      return onSelectedRowIdsChanged;\r\n    }\r\n\r\n    /** Get all selected IDs */\r\n    function getAllSelectedIds(){\r\n      return selectedRowIds;\r\n    }\r\n\r\n    /** Get all selected dataContext items */\r\n    function getAllSelectedItems() {\r\n      var selectedData = [];\r\n      var selectedIds = getAllSelectedIds();\r\n      selectedIds.forEach(function (id) {\r\n          selectedData.push(self.getItemById(id));\r\n      });\r\n      return selectedData;\r\n    }\r\n\r\n    function syncGridCellCssStyles(grid, key) {\r\n      var hashById;\r\n      var inHandler;\r\n\r\n      // since this method can be called after the cell styles have been set,\r\n      // get the existing ones right away\r\n      storeCellCssStyles(grid.getCellCssStyles(key));\r\n\r\n      function storeCellCssStyles(hash) {\r\n        hashById = {};\r\n        for (var row in hash) {\r\n          var id = rows[row][idProperty];\r\n          hashById[id] = hash[row];\r\n        }\r\n      }\r\n\r\n      function update() {\r\n        if (hashById) {\r\n          inHandler = true;\r\n          ensureRowsByIdCache();\r\n          var newHash = {};\r\n          for (var id in hashById) {\r\n            var row = rowsById[id];\r\n            if (row != undefined) {\r\n              newHash[row] = hashById[id];\r\n            }\r\n          }\r\n          grid.setCellCssStyles(key, newHash);\r\n          inHandler = false;\r\n        }\r\n      }\r\n\r\n      grid.onCellCssStylesChanged.subscribe(function (e, args) {\r\n        if (inHandler) { return; }\r\n        if (key != args.key) { return; }\r\n        if (args.hash) {\r\n          storeCellCssStyles(args.hash);\r\n        } else {\r\n          grid.onCellCssStylesChanged.unsubscribe();\r\n          self.onRowsOrCountChanged.unsubscribe(update);\r\n        }\r\n      });\r\n\r\n      this.onRowsOrCountChanged.subscribe(update);\r\n    }\r\n\r\n    $.extend(this, {\r\n      // methods\r\n      \"beginUpdate\": beginUpdate,\r\n      \"endUpdate\": endUpdate,\r\n      \"destroy\": destroy,\r\n      \"setPagingOptions\": setPagingOptions,\r\n      \"getPagingInfo\": getPagingInfo,\r\n      \"getIdPropertyName\": getIdPropertyName,\r\n      \"getItems\": getItems,\r\n      \"setItems\": setItems,\r\n      \"setFilter\": setFilter,\r\n      \"getFilter\": getFilter,\r\n      \"getFilteredItems\": getFilteredItems,\r\n      \"getFilteredItemCount\": getFilteredItemCount,\r\n      \"sort\": sort,\r\n      \"fastSort\": fastSort,\r\n      \"reSort\": reSort,\r\n      \"setGrouping\": setGrouping,\r\n      \"getGrouping\": getGrouping,\r\n      \"groupBy\": groupBy,\r\n      \"setAggregators\": setAggregators,\r\n      \"collapseAllGroups\": collapseAllGroups,\r\n      \"expandAllGroups\": expandAllGroups,\r\n      \"collapseGroup\": collapseGroup,\r\n      \"expandGroup\": expandGroup,\r\n      \"getGroups\": getGroups,\r\n      \"getAllSelectedIds\": getAllSelectedIds,\r\n      \"getAllSelectedItems\": getAllSelectedItems,\r\n      \"getIdxById\": getIdxById,\r\n      \"getRowByItem\": getRowByItem,\r\n      \"getRowById\": getRowById,\r\n      \"getItemById\": getItemById,\r\n      \"getItemByIdx\": getItemByIdx,\r\n      \"mapItemsToRows\": mapItemsToRows,\r\n      \"mapRowsToIds\": mapRowsToIds,\r\n      \"mapIdsToRows\": mapIdsToRows,\r\n      \"setRefreshHints\": setRefreshHints,\r\n      \"setFilterArgs\": setFilterArgs,\r\n      \"refresh\": refresh,\r\n      \"updateItem\": updateItem,\r\n      \"updateItems\": updateItems,\r\n      \"insertItem\": insertItem,\r\n      \"insertItems\": insertItems,\r\n      \"addItem\": addItem,\r\n      \"addItems\": addItems,\r\n      \"deleteItem\": deleteItem,\r\n      \"deleteItems\": deleteItems,\r\n      \"sortedAddItem\": sortedAddItem,\r\n      \"sortedUpdateItem\": sortedUpdateItem,\r\n      \"syncGridSelection\": syncGridSelection,\r\n      \"syncGridCellCssStyles\": syncGridCellCssStyles,\r\n\r\n      // data provider methods\r\n      \"getItemCount\": getItemCount,\r\n      \"getLength\": getLength,\r\n      \"getItem\": getItem,\r\n      \"getItemMetadata\": getItemMetadata,\r\n\r\n      // events\r\n      \"onSetItemsCalled\": onSetItemsCalled,\r\n      \"onRowCountChanged\": onRowCountChanged,\r\n      \"onRowsChanged\": onRowsChanged,\r\n      \"onRowsOrCountChanged\": onRowsOrCountChanged,\r\n      \"onBeforePagingInfoChanged\": onBeforePagingInfoChanged,\r\n      \"onPagingInfoChanged\": onPagingInfoChanged,\r\n      \"onGroupExpanded\": onGroupExpanded,\r\n      \"onGroupCollapsed\": onGroupCollapsed,\r\n    });\r\n  }\r\n\r\n  function AvgAggregator(field) {\r\n    this.field_ = field;\r\n\r\n    this.init = function () {\r\n      this.count_ = 0;\r\n      this.nonNullCount_ = 0;\r\n      this.sum_ = 0;\r\n    };\r\n\r\n    this.accumulate = function (item) {\r\n      var val = item[this.field_];\r\n      this.count_++;\r\n      if (val != null && val !== \"\" && !isNaN(val)) {\r\n        this.nonNullCount_++;\r\n        this.sum_ += parseFloat(val);\r\n      }\r\n    };\r\n\r\n    this.storeResult = function (groupTotals) {\r\n      if (!groupTotals.avg) {\r\n        groupTotals.avg = {};\r\n      }\r\n      if (this.nonNullCount_ !== 0) {\r\n        groupTotals.avg[this.field_] = this.sum_ / this.nonNullCount_;\r\n      }\r\n    };\r\n  }\r\n\r\n  function MinAggregator(field) {\r\n    this.field_ = field;\r\n\r\n    this.init = function () {\r\n      this.min_ = null;\r\n    };\r\n\r\n    this.accumulate = function (item) {\r\n      var val = item[this.field_];\r\n      if (val != null && val !== \"\" && !isNaN(val)) {\r\n        if (this.min_ == null || val < this.min_) {\r\n          this.min_ = val;\r\n        }\r\n      }\r\n    };\r\n\r\n    this.storeResult = function (groupTotals) {\r\n      if (!groupTotals.min) {\r\n        groupTotals.min = {};\r\n      }\r\n      groupTotals.min[this.field_] = this.min_;\r\n    };\r\n  }\r\n\r\n  function MaxAggregator(field) {\r\n    this.field_ = field;\r\n\r\n    this.init = function () {\r\n      this.max_ = null;\r\n    };\r\n\r\n    this.accumulate = function (item) {\r\n      var val = item[this.field_];\r\n      if (val != null && val !== \"\" && !isNaN(val)) {\r\n        if (this.max_ == null || val > this.max_) {\r\n          this.max_ = val;\r\n        }\r\n      }\r\n    };\r\n\r\n    this.storeResult = function (groupTotals) {\r\n      if (!groupTotals.max) {\r\n        groupTotals.max = {};\r\n      }\r\n      groupTotals.max[this.field_] = this.max_;\r\n    };\r\n  }\r\n\r\n  function SumAggregator(field) {\r\n    this.field_ = field;\r\n\r\n    this.init = function () {\r\n      this.sum_ = null;\r\n    };\r\n\r\n    this.accumulate = function (item) {\r\n      var val = item[this.field_];\r\n      if (val != null && val !== \"\" && !isNaN(val)) {\r\n        this.sum_ += parseFloat(val);\r\n      }\r\n    };\r\n\r\n    this.storeResult = function (groupTotals) {\r\n      if (!groupTotals.sum) {\r\n        groupTotals.sum = {};\r\n      }\r\n      groupTotals.sum[this.field_] = this.sum_;\r\n    };\r\n  }\r\n\r\n  function CountAggregator(field) {\r\n    this.field_ = field;\r\n\r\n    this.init = function () {\r\n    };\r\n\r\n    this.storeResult = function (groupTotals) {\r\n      if (!groupTotals.count) {\r\n        groupTotals.count = {};\r\n      }\r\n      groupTotals.count[this.field_] = groupTotals.group.rows.length;\r\n    };\r\n  }\r\n\r\n  // TODO:  add more built-in aggregators\r\n  // TODO:  merge common aggregators in one to prevent needles iterating\r\n\r\n  // exports\r\n  $.extend(true, window, {\r\n    Slick: {\r\n      Data: {\r\n        DataView: DataView,\r\n        Aggregators: {\r\n          Avg: AvgAggregator,\r\n          Min: MinAggregator,\r\n          Max: MaxAggregator,\r\n          Sum: SumAggregator,\r\n          Count: CountAggregator\r\n        }\r\n      }\r\n    }\r\n  });\r\n})(jQuery);\r\n","/**\r\n * @license\r\n * (c) 2009-2016 Michael Leibman\r\n * michael{dot}leibman{at}gmail{dot}com\r\n * http://github.com/mleibman/slickgrid\r\n *\r\n * Distributed under MIT license.\r\n * All rights reserved.\r\n *\r\n * SlickGrid v2.4\r\n *\r\n * NOTES:\r\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\r\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\r\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\r\n *     and do proper cleanup.\r\n */\r\n\r\n// make sure required JavaScript modules are loaded\r\nif (typeof jQuery === \"undefined\") {\r\n  throw new Error(\"SlickGrid requires jquery module to be loaded\");\r\n}\r\nif (!jQuery.fn.drag) {\r\n  throw new Error(\"SlickGrid requires jquery.event.drag module to be loaded\");\r\n}\r\nif (typeof Slick === \"undefined\") {\r\n  throw new Error(\"slick.core.js not loaded\");\r\n}\r\n\r\n\r\n(function ($) {\r\n  \"use strict\";\r\n  // shared across all grids on the page\r\n  var scrollbarDimensions;\r\n  var maxSupportedCssHeight;  // browser's breaking point\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////\r\n  // SlickGrid class implementation (available as Slick.Grid)\r\n\r\n  /**\r\n   * Creates a new instance of the grid.\r\n   * @class SlickGrid\r\n   * @constructor\r\n   * @param {Node}              container   Container node to create the grid in.\r\n   * @param {Array,Object}      data        An array of objects for databinding.\r\n   * @param {Array}             columns     An array of column definitions.\r\n   * @param {Object}            options     Grid options.\r\n   **/\r\n  function SlickGrid(container, data, columns, options) {\r\n    // settings\r\n    var defaults = {\r\n      alwaysShowVerticalScroll: false,\r\n      alwaysAllowHorizontalScroll: false,\r\n      explicitInitialization: false,\r\n      rowHeight: 25,\r\n      defaultColumnWidth: 80,\r\n      enableAddRow: false,\r\n      leaveSpaceForNewRows: false,\r\n      editable: false,\r\n      autoEdit: true,\r\n      suppressActiveCellChangeOnEdit: false,\r\n      enableCellNavigation: true,\r\n      enableColumnReorder: true,\r\n      asyncEditorLoading: false,\r\n      asyncEditorLoadDelay: 100,\r\n      forceFitColumns: false,\r\n      enableAsyncPostRender: false,\r\n      asyncPostRenderDelay: 50,\r\n      enableAsyncPostRenderCleanup: false,\r\n      asyncPostRenderCleanupDelay: 40,\r\n      autoHeight: false,\r\n      editorLock: Slick.GlobalEditorLock,\r\n      showColumnHeader: true,\r\n      showHeaderRow: false,\r\n      headerRowHeight: 25,\r\n      createFooterRow: false,\r\n      showFooterRow: false,\r\n      footerRowHeight: 25,\r\n      createPreHeaderPanel: false,\r\n      showPreHeaderPanel: false,\r\n      preHeaderPanelHeight: 25,\r\n      showTopPanel: false,\r\n      topPanelHeight: 25,\r\n      formatterFactory: null,\r\n      editorFactory: null,\r\n      cellFlashingCssClass: \"flashing\",\r\n      selectedCellCssClass: \"selected\",\r\n      multiSelect: true,\r\n      enableTextSelectionOnCells: false,\r\n      dataItemColumnValueExtractor: null,\r\n      frozenBottom: false,\r\n      frozenColumn: -1,\r\n      frozenRow: -1,\r\n      frozenRightViewportMinWidth: 100,\r\n      fullWidthRows: false,\r\n      multiColumnSort: false,\r\n      numberedMultiColumnSort: false,\r\n      tristateMultiColumnSort: false,\r\n      sortColNumberInSeparateSpan: false,\r\n      defaultFormatter: defaultFormatter,\r\n      forceSyncScrolling: false,\r\n      addNewRowCssClass: \"new-row\",\r\n      preserveCopiedSelectionOnPaste: false,\r\n      showCellSelection: true,\r\n      viewportClass: null,\r\n      minRowBuffer: 3,\r\n      emulatePagingWhenScrolling: true, // when scrolling off bottom of viewport, place new row at top of viewport\r\n      editorCellNavOnLRKeys: false,\r\n      enableMouseWheelScrollHandler: true,\r\n      doPaging: true,\r\n      autosizeColsMode: Slick.GridAutosizeColsMode.LegacyOff,\r\n      autosizeColPaddingPx: 4,\r\n      autosizeTextAvgToMWidthRatio: 0.75,\r\n      viewportSwitchToScrollModeWidthPercent: undefined,\r\n      viewportMinWidthPx: undefined,\r\n      viewportMaxWidthPx: undefined,\r\n      suppressCssChangesOnHiddenInit: false\r\n    };\r\n\r\n    var columnDefaults = {\r\n      name: \"\",\r\n      resizable: true,\r\n      sortable: false,\r\n      minWidth: 30,\r\n      maxWidth: undefined,\r\n      rerenderOnResize: false,\r\n      headerCssClass: null,\r\n      defaultSortAsc: true,\r\n      focusable: true,\r\n      selectable: true,\r\n    };\r\n\r\n    var columnAutosizeDefaults = {\r\n      ignoreHeaderText: false,\r\n      colValueArray: undefined,\r\n      allowAddlPercent: undefined,\r\n      formatterOverride: undefined,\r\n      autosizeMode: Slick.ColAutosizeMode.ContentIntelligent,\r\n      rowSelectionModeOnInit: undefined,\r\n      rowSelectionMode: Slick.RowSelectionMode.FirstNRows,\r\n      rowSelectionCount: 100,\r\n      valueFilterMode: Slick.ValueFilterMode.None,\r\n      widthEvalMode: Slick.WidthEvalMode.CanvasTextSize,\r\n      sizeToRemaining: undefined,\r\n      widthPx: undefined,\r\n      colDataTypeOf: undefined\r\n    };\r\n\r\n    // scroller\r\n    var th;   // virtual height\r\n    var h;    // real scrollable height\r\n    var ph;   // page height\r\n    var n;    // number of pages\r\n    var cj;   // \"jumpiness\" coefficient\r\n\r\n    var page = 0;       // current page\r\n    var offset = 0;     // current page offset\r\n    var vScrollDir = 1;\r\n\r\n    // private\r\n    var initialized = false;\r\n    var $container;\r\n    var uid = \"slickgrid_\" + Math.round(1000000 * Math.random());\r\n    var self = this;\r\n    var $focusSink, $focusSink2;\r\n    var $groupHeaders = $();\r\n    var $headerScroller;\r\n    var $headers;\r\n    var $headerRow, $headerRowScroller, $headerRowSpacerL, $headerRowSpacerR;\r\n    var $footerRow, $footerRowScroller, $footerRowSpacerL, $footerRowSpacerR;\r\n    var $preHeaderPanel, $preHeaderPanelScroller, $preHeaderPanelSpacer;\r\n    var $preHeaderPanelR, $preHeaderPanelScrollerR, $preHeaderPanelSpacerR;\r\n    var $topPanelScroller;\r\n    var $topPanel;\r\n    var $viewport;\r\n    var $canvas;\r\n    var $style;\r\n    var $boundAncestors;\r\n    var treeColumns;\r\n    var stylesheet, columnCssRulesL, columnCssRulesR;\r\n    var viewportH, viewportW;\r\n    var canvasWidth, canvasWidthL, canvasWidthR;\r\n    var headersWidth, headersWidthL, headersWidthR;\r\n    var viewportHasHScroll, viewportHasVScroll;\r\n    var headerColumnWidthDiff = 0, headerColumnHeightDiff = 0, // border+padding\r\n        cellWidthDiff = 0, cellHeightDiff = 0, jQueryNewWidthBehaviour = false;\r\n    var absoluteColumnMinWidth;\r\n    var hasFrozenRows = false;\r\n    var frozenRowsHeight = 0;\r\n    var actualFrozenRow = -1;\r\n    var paneTopH = 0;\r\n    var paneBottomH = 0;\r\n    var viewportTopH = 0;\r\n    var viewportBottomH = 0;\r\n    var topPanelH = 0;\r\n    var headerRowH = 0;\r\n    var footerRowH = 0;\r\n\r\n    var tabbingDirection = 1;\r\n    var $activeCanvasNode;\r\n    var $activeViewportNode;\r\n    var activePosX;\r\n    var activeRow, activeCell;\r\n    var activeCellNode = null;\r\n    var currentEditor = null;\r\n    var serializedEditorValue;\r\n    var editController;\r\n\r\n    var rowsCache = {};\r\n    var renderedRows = 0;\r\n    var numVisibleRows = 0;\r\n    var prevScrollTop = 0;\r\n    var scrollTop = 0;\r\n    var lastRenderedScrollTop = 0;\r\n    var lastRenderedScrollLeft = 0;\r\n    var prevScrollLeft = 0;\r\n    var scrollLeft = 0;\r\n\r\n    var selectionModel;\r\n    var selectedRows = [];\r\n\r\n    var plugins = [];\r\n    var cellCssClasses = {};\r\n\r\n    var columnsById = {};\r\n    var sortColumns = [];\r\n    var columnPosLeft = [];\r\n    var columnPosRight = [];\r\n\r\n    var pagingActive = false;\r\n    var pagingIsLastPage = false;\r\n\r\n    var scrollThrottle = ActionThrottle(render, 50);\r\n\r\n    // async call handles\r\n    var h_editorLoader = null;\r\n    var h_render = null;\r\n    var h_postrender = null;\r\n    var h_postrenderCleanup = null;\r\n    var postProcessedRows = {};\r\n    var postProcessToRow = null;\r\n    var postProcessFromRow = null;\r\n    var postProcessedCleanupQueue = [];\r\n    var postProcessgroupId = 0;\r\n\r\n    // perf counters\r\n    var counter_rows_rendered = 0;\r\n    var counter_rows_removed = 0;\r\n\r\n    var $paneHeaderL;\r\n    var $paneHeaderR;\r\n    var $paneTopL;\r\n    var $paneTopR;\r\n    var $paneBottomL;\r\n    var $paneBottomR;\r\n\r\n    var $headerScrollerL;\r\n    var $headerScrollerR;\r\n\r\n    var $headerL;\r\n    var $headerR;\r\n\r\n    var $groupHeadersL;\r\n    var $groupHeadersR;\r\n\r\n    var $headerRowScrollerL;\r\n    var $headerRowScrollerR;\r\n\r\n    var $footerRowScrollerL;\r\n    var $footerRowScrollerR;\r\n\r\n    var $headerRowL;\r\n    var $headerRowR;\r\n\r\n    var $footerRowL;\r\n    var $footerRowR;\r\n\r\n    var $topPanelScrollerL;\r\n    var $topPanelScrollerR;\r\n\r\n    var $topPanelL;\r\n    var $topPanelR;\r\n\r\n    var $viewportTopL;\r\n    var $viewportTopR;\r\n    var $viewportBottomL;\r\n    var $viewportBottomR;\r\n\r\n    var $canvasTopL;\r\n    var $canvasTopR;\r\n    var $canvasBottomL;\r\n    var $canvasBottomR;\r\n\r\n    var $viewportScrollContainerX;\r\n    var $viewportScrollContainerY;\r\n    var $headerScrollContainer;\r\n    var $headerRowScrollContainer;\r\n    var $footerRowScrollContainer;\r\n\r\n    // store css attributes if display:none is active in container or parent\r\n    var cssShow = { position: 'absolute', visibility: 'hidden', display: 'block' };\r\n    var $hiddenParents;\r\n    var oldProps = [];\r\n    var columnResizeDragging = false;\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Initialization\r\n\r\n    function init() {\r\n      if (container instanceof jQuery) {\r\n        $container = container;\r\n      } else {\r\n        $container = $(container);\r\n      }\r\n      if ($container.length < 1) {\r\n        throw new Error(\"SlickGrid requires a valid container, \" + container + \" does not exist in the DOM.\");\r\n      }\r\n\r\n      // calculate these only once and share between grid instances\r\n      maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\r\n\r\n      options = $.extend({}, defaults, options);\r\n      validateAndEnforceOptions();\r\n      columnDefaults.width = options.defaultColumnWidth;\r\n\r\n      if (!options.suppressCssChangesOnHiddenInit) { cacheCssForHiddenInit(); }\r\n\r\n      treeColumns = new Slick.TreeColumns(columns);\r\n      columns = treeColumns.extractColumns();\r\n\r\n      updateColumnProps();\r\n\r\n      // validate loaded JavaScript modules against requested options\r\n      if (options.enableColumnReorder && !$.fn.sortable) {\r\n        throw new Error(\"SlickGrid's 'enableColumnReorder = true' option requires jquery-ui.sortable module to be loaded\");\r\n      }\r\n\r\n      editController = {\r\n        \"commitCurrentEdit\": commitCurrentEdit,\r\n        \"cancelCurrentEdit\": cancelCurrentEdit\r\n      };\r\n\r\n      $container\r\n          .empty()\r\n          .css(\"overflow\", \"hidden\")\r\n          .css(\"outline\", 0)\r\n          .addClass(uid)\r\n          .addClass(\"ui-widget\");\r\n\r\n      // set up a positioning container if needed\r\n      if (!(/relative|absolute|fixed/).test($container.css(\"position\"))) {\r\n        $container.css(\"position\", \"relative\");\r\n      }\r\n\r\n      $focusSink = $(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\r\n\r\n      // Containers used for scrolling frozen columns and rows\r\n      $paneHeaderL = $(\"<div class='slick-pane slick-pane-header slick-pane-left' tabIndex='0' />\").appendTo($container);\r\n      $paneHeaderR = $(\"<div class='slick-pane slick-pane-header slick-pane-right' tabIndex='0' />\").appendTo($container);\r\n      $paneTopL = $(\"<div class='slick-pane slick-pane-top slick-pane-left' tabIndex='0' />\").appendTo($container);\r\n      $paneTopR = $(\"<div class='slick-pane slick-pane-top slick-pane-right' tabIndex='0' />\").appendTo($container);\r\n      $paneBottomL = $(\"<div class='slick-pane slick-pane-bottom slick-pane-left' tabIndex='0' />\").appendTo($container);\r\n      $paneBottomR = $(\"<div class='slick-pane slick-pane-bottom slick-pane-right' tabIndex='0' />\").appendTo($container);\r\n\r\n      if (options.createPreHeaderPanel) {\r\n        $preHeaderPanelScroller = $(\"<div class='slick-preheader-panel ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($paneHeaderL);\r\n        $preHeaderPanel = $(\"<div />\").appendTo($preHeaderPanelScroller);\r\n        $preHeaderPanelSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\r\n            .appendTo($preHeaderPanelScroller);\r\n\r\n        $preHeaderPanelScrollerR = $(\"<div class='slick-preheader-panel ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($paneHeaderR);\r\n        $preHeaderPanelR = $(\"<div />\").appendTo($preHeaderPanelScrollerR);\r\n        $preHeaderPanelSpacerR = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\r\n            .appendTo($preHeaderPanelScrollerR);\r\n\r\n        if (!options.showPreHeaderPanel) {\r\n          $preHeaderPanelScroller.hide();\r\n          $preHeaderPanelScrollerR.hide();\r\n        }\r\n      }\r\n\r\n      // Append the header scroller containers\r\n      $headerScrollerL = $(\"<div class='slick-header ui-state-default slick-header-left' />\").appendTo($paneHeaderL);\r\n      $headerScrollerR = $(\"<div class='slick-header ui-state-default slick-header-right' />\").appendTo($paneHeaderR);\r\n\r\n      // Cache the header scroller containers\r\n      $headerScroller = $().add($headerScrollerL).add($headerScrollerR);\r\n\r\n      if (treeColumns.hasDepth()) {\r\n        $groupHeadersL = [];\r\n        $groupHeadersR = [];\r\n        for (var index = 0; index < treeColumns.getDepth() - 1; index++) {\r\n          $groupHeadersL[index] = $(\"<div class='slick-group-header-columns slick-group-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\r\n          $groupHeadersR[index] = $(\"<div class='slick-group-header-columns slick-group-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\r\n        }\r\n\r\n        $groupHeaders = $().add($groupHeadersL).add($groupHeadersR);\r\n      }\r\n\r\n      // Append the columnn containers to the headers\r\n      $headerL = $(\"<div class='slick-header-columns slick-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\r\n      $headerR = $(\"<div class='slick-header-columns slick-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\r\n\r\n      // Cache the header columns\r\n      $headers = $().add($headerL).add($headerR);\r\n\r\n      $headerRowScrollerL = $(\"<div class='slick-headerrow ui-state-default' />\").appendTo($paneTopL);\r\n      $headerRowScrollerR = $(\"<div class='slick-headerrow ui-state-default' />\").appendTo($paneTopR);\r\n\r\n      $headerRowScroller = $().add($headerRowScrollerL).add($headerRowScrollerR);\r\n\r\n      $headerRowSpacerL = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\r\n        .appendTo($headerRowScrollerL);\r\n      $headerRowSpacerR = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\r\n        .appendTo($headerRowScrollerR);\r\n\r\n\r\n      $headerRowL = $(\"<div class='slick-headerrow-columns slick-headerrow-columns-left' />\").appendTo($headerRowScrollerL);\r\n      $headerRowR = $(\"<div class='slick-headerrow-columns slick-headerrow-columns-right' />\").appendTo($headerRowScrollerR);\r\n\r\n      $headerRow = $().add($headerRowL).add($headerRowR);\r\n\r\n      // Append the top panel scroller\r\n      $topPanelScrollerL = $(\"<div class='slick-top-panel-scroller ui-state-default' />\").appendTo($paneTopL);\r\n      $topPanelScrollerR = $(\"<div class='slick-top-panel-scroller ui-state-default' />\").appendTo($paneTopR);\r\n\r\n      $topPanelScroller = $().add($topPanelScrollerL).add($topPanelScrollerR);\r\n\r\n      // Append the top panel\r\n      $topPanelL = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerL);\r\n      $topPanelR = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerR);\r\n\r\n      $topPanel = $().add($topPanelL).add($topPanelR);\r\n\r\n      if (!options.showColumnHeader) {\r\n        $headerScroller.hide();\r\n      }\r\n\r\n      if (!options.showTopPanel) {\r\n        $topPanelScroller.hide();\r\n      }\r\n\r\n      if (!options.showHeaderRow) {\r\n        $headerRowScroller.hide();\r\n      }\r\n\r\n      // Append the viewport containers\r\n      $viewportTopL = $(\"<div class='slick-viewport slick-viewport-top slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneTopL);\r\n      $viewportTopR = $(\"<div class='slick-viewport slick-viewport-top slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneTopR);\r\n      $viewportBottomL = $(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneBottomL);\r\n      $viewportBottomR = $(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneBottomR);\r\n\r\n      // Cache the viewports\r\n      $viewport = $().add($viewportTopL).add($viewportTopR).add($viewportBottomL).add($viewportBottomR);\r\n\r\n\r\n      // Default the active viewport to the top left\r\n      $activeViewportNode = $viewportTopL;\r\n\r\n      // Append the canvas containers\r\n      $canvasTopL = $(\"<div class='grid-canvas grid-canvas-top grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportTopL);\r\n      $canvasTopR = $(\"<div class='grid-canvas grid-canvas-top grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportTopR);\r\n      $canvasBottomL = $(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportBottomL);\r\n      $canvasBottomR = $(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportBottomR);\r\n      if (options.viewportClass) $viewport.toggleClass(options.viewportClass, true);\r\n\r\n      // Cache the canvases\r\n      $canvas = $().add($canvasTopL).add($canvasTopR).add($canvasBottomL).add($canvasBottomR);\r\n\r\n      scrollbarDimensions = scrollbarDimensions || measureScrollbar();\r\n\r\n      // Default the active canvas to the top left\r\n      $activeCanvasNode = $canvasTopL;\r\n\r\n      // pre-header\r\n      if ($preHeaderPanelSpacer) $preHeaderPanelSpacer.css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\");\r\n      $headers.width(getHeadersWidth());\r\n      $headerRowSpacerL.css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\");\r\n      $headerRowSpacerR.css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\");\r\n\r\n      // footer Row\r\n      if (options.createFooterRow) {\r\n        $footerRowScrollerR = $(\"<div class='slick-footerrow ui-state-default' />\").appendTo($paneTopR);\r\n        $footerRowScrollerL = $(\"<div class='slick-footerrow ui-state-default' />\").appendTo($paneTopL);\r\n\r\n        $footerRowScroller = $().add($footerRowScrollerL).add($footerRowScrollerR);\r\n\r\n        $footerRowSpacerL = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\r\n          .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\r\n          .appendTo($footerRowScrollerL);\r\n        $footerRowSpacerR = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\r\n          .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\r\n          .appendTo($footerRowScrollerR);\r\n\r\n\r\n        $footerRowL = $(\"<div class='slick-footerrow-columns slick-footerrow-columns-left' />\").appendTo($footerRowScrollerL);\r\n        $footerRowR = $(\"<div class='slick-footerrow-columns slick-footerrow-columns-right' />\").appendTo($footerRowScrollerR);\r\n\r\n        $footerRow = $().add($footerRowL).add($footerRowR);\r\n\r\n        if (!options.showFooterRow) {\r\n          $footerRowScroller.hide();\r\n        }\r\n      }\r\n\r\n      $focusSink2 = $focusSink.clone().appendTo($container);\r\n\r\n      if (!options.explicitInitialization) {\r\n        finishInitialization();\r\n      }\r\n    }\r\n\r\n    function finishInitialization() {\r\n      if (!initialized) {\r\n        initialized = true;\r\n\r\n        getViewportWidth();\r\n        getViewportHeight();\r\n\r\n        // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\r\n        // calculate the diff so we can set consistent sizes\r\n        measureCellPaddingAndBorder();\r\n\r\n        // for usability reasons, all text selection in SlickGrid is disabled\r\n        // with the exception of input and textarea elements (selection must\r\n        // be enabled there so that editors work as expected); note that\r\n        // selection in grid cells (grid body) is already unavailable in\r\n        // all browsers except IE\r\n        disableSelection($headers); // disable all text selection in header (including input and textarea)\r\n\r\n        if (!options.enableTextSelectionOnCells) {\r\n          // disable text selection in grid cells except in input and textarea elements\r\n          // (this is IE-specific, because selectstart event will only fire in IE)\r\n          $viewport.on(\"selectstart.ui\", function (event) {\r\n            return $(event.target).is(\"input,textarea\");\r\n          });\r\n        }\r\n\r\n        setFrozenOptions();\r\n        setPaneVisibility();\r\n        setScroller();\r\n        setOverflow();\r\n\r\n        updateColumnCaches();\r\n        createColumnHeaders();\r\n        createColumnGroupHeaders();\r\n        createColumnFooter();\r\n        setupColumnSort();\r\n        createCssRules();\r\n        resizeCanvas();\r\n        bindAncestorScrollEvents();\r\n\r\n        $container\r\n            .on(\"resize.slickgrid\", resizeCanvas);\r\n        $viewport\r\n            .on(\"scroll\", handleScroll);\r\n\r\n        if (jQuery.fn.mousewheel && options.enableMouseWheelScrollHandler) {\r\n          $viewport.on(\"mousewheel\", handleMouseWheel);\r\n        }\r\n\r\n        $headerScroller\r\n            //.on(\"scroll\", handleHeaderScroll)\r\n            .on(\"contextmenu\", handleHeaderContextMenu)\r\n            .on(\"click\", handleHeaderClick)\r\n            .on(\"mouseenter\", \".slick-header-column\", handleHeaderMouseEnter)\r\n            .on(\"mouseleave\", \".slick-header-column\", handleHeaderMouseLeave);\r\n        $headerRowScroller\r\n            .on(\"scroll\", handleHeaderRowScroll);\r\n\r\n        if (options.showHeaderRow) {\r\n          $headerRow\r\n            .on(\"mouseenter\", \".slick-headerrow-column\", handleHeaderRowMouseEnter)\r\n            .on(\"mouseleave\", \".slick-headerrow-column\", handleHeaderRowMouseLeave);\r\n        }\r\n\r\n        if (options.createFooterRow) {\r\n          $footerRow\r\n            .on(\"contextmenu\", handleFooterContextMenu)\r\n            .on(\"click\", handleFooterClick);\r\n\r\n          $footerRowScroller\r\n              .on(\"scroll\", handleFooterRowScroll);\r\n        }\r\n\r\n        if (options.createPreHeaderPanel) {\r\n          $preHeaderPanelScroller\r\n              .on(\"scroll\", handlePreHeaderPanelScroll);\r\n        }\r\n\r\n        $focusSink.add($focusSink2)\r\n            .on(\"keydown\", handleKeyDown);\r\n        $canvas\r\n            .on(\"keydown\", handleKeyDown)\r\n            .on(\"click\", handleClick)\r\n            .on(\"dblclick\", handleDblClick)\r\n            .on(\"contextmenu\", handleContextMenu)\r\n            .on(\"draginit\", handleDragInit)\r\n            .on(\"dragstart\", {distance: 3}, handleDragStart)\r\n            .on(\"drag\", handleDrag)\r\n            .on(\"dragend\", handleDragEnd)\r\n            .on(\"mouseenter\", \".slick-cell\", handleMouseEnter)\r\n            .on(\"mouseleave\", \".slick-cell\", handleMouseLeave);\r\n\r\n        if (!options.suppressCssChangesOnHiddenInit) { restoreCssFromHiddenInit(); }\r\n      }\r\n    }\r\n\r\n    function cacheCssForHiddenInit() {\r\n      // handle display:none on container or container parents\r\n      $hiddenParents = $container.parents().addBack().not(':visible');\r\n      $hiddenParents.each(function() {\r\n        var old = {};\r\n        for ( var name in cssShow ) {\r\n          old[ name ] = this.style[ name ];\r\n          this.style[ name ] = cssShow[ name ];\r\n        }\r\n        oldProps.push(old);\r\n      });\r\n    }\r\n\r\n    function restoreCssFromHiddenInit() {\r\n      // finish handle display:none on container or container parents\r\n      // - put values back the way they were\r\n      $hiddenParents.each(function(i) {\r\n        var old = oldProps[i];\r\n        for ( var name in cssShow ) {\r\n          this.style[ name ] = old[ name ];\r\n        }\r\n      });\r\n    }\r\n\r\n    function hasFrozenColumns() {\r\n      return options.frozenColumn > -1;\r\n    }\r\n\r\n    function registerPlugin(plugin) {\r\n      plugins.unshift(plugin);\r\n      plugin.init(self);\r\n    }\r\n\r\n    function unregisterPlugin(plugin) {\r\n      for (var i = plugins.length; i >= 0; i--) {\r\n        if (plugins[i] === plugin) {\r\n          if (plugins[i].destroy) {\r\n            plugins[i].destroy();\r\n          }\r\n          plugins.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    function getPluginByName(name) {\r\n      for (var i = plugins.length-1; i >= 0; i--) {\r\n        if (plugins[i].pluginName === name) {\r\n          return plugins[i];\r\n        }\r\n      }\r\n      return undefined;\r\n    }\r\n\r\n    function setSelectionModel(model) {\r\n      if (selectionModel) {\r\n        selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\r\n        if (selectionModel.destroy) {\r\n          selectionModel.destroy();\r\n        }\r\n      }\r\n\r\n      selectionModel = model;\r\n      if (selectionModel) {\r\n        selectionModel.init(self);\r\n        selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\r\n      }\r\n    }\r\n\r\n    function getSelectionModel() {\r\n      return selectionModel;\r\n    }\r\n\r\n    function getCanvasNode(columnIdOrIdx, rowIndex) {\r\n      return _getContainerElement(getCanvases(), columnIdOrIdx, rowIndex);\r\n    }\r\n\r\n    function getActiveCanvasNode(element) {\r\n      setActiveCanvasNode(element);\r\n\r\n      return $activeCanvasNode[0];\r\n    }\r\n\r\n    function getCanvases() {\r\n      return $canvas;\r\n    }\r\n\r\n    function setActiveCanvasNode(element) {\r\n      if (element) {\r\n        $activeCanvasNode = $(element.target).closest('.grid-canvas');\r\n      }\r\n    }\r\n\r\n    function getViewportNode(columnIdOrIdx, rowIndex) {\r\n      return _getContainerElement(getViewports(), columnIdOrIdx, rowIndex);\r\n    }\r\n\r\n    function getViewports() {\r\n      return $viewport;\r\n    }\r\n\r\n    function getActiveViewportNode(element) {\r\n      setActiveViewportNode(element);\r\n\r\n      return $activeViewportNode[0];\r\n    }\r\n\r\n    function setActiveViewportNode(element) {\r\n      if (element) {\r\n        $activeViewportNode = $(element.target).closest('.slick-viewport');\r\n      }\r\n    }\r\n\r\n    function _getContainerElement($targetContainers, columnIdOrIdx, rowIndex) {\r\n      if (!$targetContainers) { return }\r\n      if (!columnIdOrIdx) { columnIdOrIdx = 0; }\r\n      if (!rowIndex) { rowIndex = 0; }\r\n\r\n      var idx = (typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx));\r\n\r\n      var isBottomSide = hasFrozenRows && rowIndex >= actualFrozenRow + (options.frozenBottom ? 0 : 1);\r\n      var isRightSide = hasFrozenColumns() && idx > options.frozenColumn;\r\n\r\n      return $targetContainers[(isBottomSide ? 2 : 0) + (isRightSide ? 1 : 0)];\r\n    }\r\n\r\n    function measureScrollbar() {\r\n      var $outerdiv = $('<div class=\"' + $viewport.className + '\" style=\"position:absolute; top:-10000px; left:-10000px; overflow:auto; width:100px; height:100px;\"></div>').appendTo('body');\r\n      var $innerdiv = $('<div style=\"width:200px; height:200px; overflow:auto;\"></div>').appendTo($outerdiv);\r\n      var dim = {\r\n        width: $outerdiv[0].offsetWidth - $outerdiv[0].clientWidth,\r\n        height: $outerdiv[0].offsetHeight - $outerdiv[0].clientHeight\r\n      };\r\n      $innerdiv.remove();\r\n      $outerdiv.remove();\r\n      return dim;\r\n    }\r\n\r\n    function getHeadersWidth() {\r\n      headersWidth = headersWidthL = headersWidthR = 0;\r\n      var includeScrollbar = !options.autoHeight;\r\n\r\n      for (var i = 0, ii = columns.length; i < ii; i++) {\r\n        var width = columns[ i ].width;\r\n\r\n        if (( options.frozenColumn ) > -1 && ( i > options.frozenColumn )) {\r\n          headersWidthR += width;\r\n        } else {\r\n          headersWidthL += width;\r\n        }\r\n      }\r\n\r\n      if (includeScrollbar) {\r\n        if (( options.frozenColumn ) > -1 && ( i > options.frozenColumn )) {\r\n          headersWidthR += scrollbarDimensions.width;\r\n        } else {\r\n          headersWidthL += scrollbarDimensions.width;\r\n        }\r\n      }\r\n\r\n      if (hasFrozenColumns()) {\r\n        headersWidthL = headersWidthL + 1000;\r\n\r\n        headersWidthR = Math.max(headersWidthR, viewportW) + headersWidthL;\r\n        headersWidthR += scrollbarDimensions.width;\r\n      } else {\r\n        headersWidthL += scrollbarDimensions.width;\r\n        headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\r\n      }\r\n\r\n      headersWidth = headersWidthL + headersWidthR;\r\n      return Math.max(headersWidth, viewportW) + 1000;\r\n    }\r\n\r\n    function getHeadersWidthL() {\r\n      headersWidthL =0;\r\n\r\n      columns.forEach(function(column, i) {\r\n        if (!(( options.frozenColumn ) > -1 && ( i > options.frozenColumn )))\r\n          headersWidthL += column.width;\r\n      });\r\n\r\n      if (hasFrozenColumns()) {\r\n        headersWidthL += 1000;\r\n      } else {\r\n        headersWidthL += scrollbarDimensions.width;\r\n        headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\r\n      }\r\n\r\n      return headersWidthL;\r\n    }\r\n\r\n    function getHeadersWidthR() {\r\n      headersWidthR =0;\r\n\r\n      columns.forEach(function(column, i) {\r\n        if (( options.frozenColumn ) > -1 && ( i > options.frozenColumn ))\r\n          headersWidthR += column.width;\r\n      });\r\n\r\n      if (hasFrozenColumns()) {\r\n        headersWidthR = Math.max(headersWidthR, viewportW) + getHeadersWidthL();\r\n        headersWidthR += scrollbarDimensions.width;\r\n      }\r\n\r\n      return headersWidthR;\r\n    }\r\n\r\n    function getCanvasWidth() {\r\n      var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\r\n      var i = columns.length;\r\n\r\n      canvasWidthL = canvasWidthR = 0;\r\n\r\n      while (i--) {\r\n        if (hasFrozenColumns() && (i > options.frozenColumn)) {\r\n          canvasWidthR += columns[i].width;\r\n        } else {\r\n          canvasWidthL += columns[i].width;\r\n        }\r\n      }\r\n      var totalRowWidth = canvasWidthL + canvasWidthR;\r\n      return options.fullWidthRows ? Math.max(totalRowWidth, availableWidth) : totalRowWidth;\r\n    }\r\n\r\n    function updateCanvasWidth(forceColumnWidthsUpdate) {\r\n      var oldCanvasWidth = canvasWidth;\r\n      var oldCanvasWidthL = canvasWidthL;\r\n      var oldCanvasWidthR = canvasWidthR;\r\n      var widthChanged;\r\n      canvasWidth = getCanvasWidth();\r\n\r\n      widthChanged = canvasWidth !== oldCanvasWidth || canvasWidthL !== oldCanvasWidthL || canvasWidthR !== oldCanvasWidthR;\r\n\r\n      if (widthChanged || hasFrozenColumns() || hasFrozenRows) {\r\n        $canvasTopL.width(canvasWidthL);\r\n\r\n        getHeadersWidth();\r\n\r\n        $headerL.width(headersWidthL);\r\n        $headerR.width(headersWidthR);\r\n\r\n        if (hasFrozenColumns()) {\r\n          $canvasTopR.width(canvasWidthR);\r\n\r\n          $paneHeaderL.width(canvasWidthL);\r\n          $paneHeaderR.css('left', canvasWidthL);\r\n          $paneHeaderR.css('width', viewportW - canvasWidthL);\r\n\r\n          $paneTopL.width(canvasWidthL);\r\n          $paneTopR.css('left', canvasWidthL);\r\n          $paneTopR.css('width', viewportW - canvasWidthL);\r\n\r\n          $headerRowScrollerL.width(canvasWidthL);\r\n          $headerRowScrollerR.width(viewportW - canvasWidthL);\r\n\r\n          $headerRowL.width(canvasWidthL);\r\n          $headerRowR.width(canvasWidthR);\r\n\r\n          if (options.createFooterRow) {\r\n            $footerRowScrollerL.width(canvasWidthL);\r\n            $footerRowScrollerR.width(viewportW - canvasWidthL);\r\n\r\n            $footerRowL.width(canvasWidthL);\r\n            $footerRowR.width(canvasWidthR);\r\n          }\r\n          if (options.createPreHeaderPanel) {\r\n            $preHeaderPanel.width(canvasWidth);\r\n          }\r\n          $viewportTopL.width(canvasWidthL);\r\n          $viewportTopR.width(viewportW - canvasWidthL);\r\n\r\n          if (hasFrozenRows) {\r\n            $paneBottomL.width(canvasWidthL);\r\n            $paneBottomR.css('left', canvasWidthL);\r\n\r\n            $viewportBottomL.width(canvasWidthL);\r\n            $viewportBottomR.width(viewportW - canvasWidthL);\r\n\r\n            $canvasBottomL.width(canvasWidthL);\r\n            $canvasBottomR.width(canvasWidthR);\r\n          }\r\n        } else {\r\n          $paneHeaderL.width('100%');\r\n          $paneTopL.width('100%');\r\n          $headerRowScrollerL.width('100%');\r\n          $headerRowL.width(canvasWidth);\r\n\r\n          if (options.createFooterRow) {\r\n            $footerRowScrollerL.width('100%');\r\n            $footerRowL.width(canvasWidth);\r\n          }\r\n\r\n          if (options.createPreHeaderPanel) {\r\n            $preHeaderPanel.width('100%');\r\n            $preHeaderPanel.width(canvasWidth);\r\n          }\r\n          $viewportTopL.width('100%');\r\n\r\n          if (hasFrozenRows) {\r\n            $viewportBottomL.width('100%');\r\n            $canvasBottomL.width(canvasWidthL);\r\n          }\r\n        }\r\n\r\n        viewportHasHScroll = (canvasWidth >= viewportW - scrollbarDimensions.width);\r\n      }\r\n\r\n      $headerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\r\n      $headerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\r\n\r\n      if (options.createFooterRow) {\r\n        $footerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\r\n        $footerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\r\n      }\r\n\r\n      if (widthChanged || forceColumnWidthsUpdate) {\r\n        applyColumnWidths();\r\n      }\r\n    }\r\n\r\n    function disableSelection($target) {\r\n      if ($target && $target.jquery) {\r\n        $target\r\n            .attr(\"unselectable\", \"on\")\r\n            .css(\"MozUserSelect\", \"none\")\r\n            .on(\"selectstart.ui\", function () {\r\n              return false;\r\n            }); // from jquery:ui.core.js 1.7.2\r\n      }\r\n    }\r\n\r\n    function getMaxSupportedCssHeight() {\r\n      var supportedHeight = 1000000;\r\n      // FF reports the height back but still renders blank after ~6M px\r\n      var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\r\n      var div = $(\"<div style='display:none' />\").appendTo(document.body);\r\n\r\n      while (true) {\r\n        var test = supportedHeight * 2;\r\n        div.css(\"height\", test);\r\n        if (test > testUpTo || div.height() !== test) {\r\n          break;\r\n        } else {\r\n          supportedHeight = test;\r\n        }\r\n      }\r\n\r\n      div.remove();\r\n      return supportedHeight;\r\n    }\r\n\r\n    function getUID() {\r\n      return uid;\r\n    }\r\n\r\n    function getHeaderColumnWidthDiff() {\r\n      return headerColumnWidthDiff;\r\n    }\r\n\r\n    function getScrollbarDimensions() {\r\n      return scrollbarDimensions;\r\n    }\r\n\r\n    function getDisplayedScrollbarDimensions() {\r\n      return {\r\n        width: viewportHasVScroll ? scrollbarDimensions.width : 0,\r\n        height: viewportHasHScroll ? scrollbarDimensions.height : 0\r\n      };\r\n    }\r\n\r\n    function getAbsoluteColumnMinWidth() {\r\n      return absoluteColumnMinWidth;\r\n    }\r\n\r\n    // TODO:  this is static.  need to handle page mutation.\r\n    function bindAncestorScrollEvents() {\r\n      var elem = (hasFrozenRows && !options.frozenBottom) ? $canvasBottomL[0] : $canvasTopL[0];\r\n      while ((elem = elem.parentNode) != document.body && elem != null) {\r\n        // bind to scroll containers only\r\n        if (elem == $viewportTopL[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\r\n          var $elem = $(elem);\r\n          if (!$boundAncestors) {\r\n            $boundAncestors = $elem;\r\n          } else {\r\n            $boundAncestors = $boundAncestors.add($elem);\r\n          }\r\n          $elem.on(\"scroll.\" + uid, handleActiveCellPositionChange);\r\n        }\r\n      }\r\n    }\r\n\r\n    function unbindAncestorScrollEvents() {\r\n      if (!$boundAncestors) {\r\n        return;\r\n      }\r\n      $boundAncestors.off(\"scroll.\" + uid);\r\n      $boundAncestors = null;\r\n    }\r\n\r\n    function updateColumnHeader(columnId, title, toolTip) {\r\n      if (!initialized) { return; }\r\n      var idx = getColumnIndex(columnId);\r\n      if (idx == null) {\r\n        return;\r\n      }\r\n\r\n      var columnDef = columns[idx];\r\n      var $header = $headers.children().eq(idx);\r\n      if ($header) {\r\n        if (title !== undefined) {\r\n          columns[idx].name = title;\r\n        }\r\n        if (toolTip !== undefined) {\r\n          columns[idx].toolTip = toolTip;\r\n        }\r\n\r\n        trigger(self.onBeforeHeaderCellDestroy, {\r\n          \"node\": $header[0],\r\n          \"column\": columnDef,\r\n          \"grid\": self\r\n        });\r\n\r\n        $header\r\n            .attr(\"title\", toolTip || \"\")\r\n            .children().eq(0).html(title);\r\n\r\n        trigger(self.onHeaderCellRendered, {\r\n          \"node\": $header[0],\r\n          \"column\": columnDef,\r\n          \"grid\": self\r\n        });\r\n      }\r\n    }\r\n\r\n    function getHeader(columnDef) {\r\n      if (!columnDef) {\r\n        return hasFrozenColumns() ? $headers : $headerL;\r\n      }\r\n      var idx = getColumnIndex(columnDef.id);\r\n      return hasFrozenColumns() ? ((idx <= options.frozenColumn) ? $headerL : $headerR) : $headerL;\r\n    }\r\n\r\n    function getHeaderColumn(columnIdOrIdx) {\r\n      var idx = (typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx));\r\n      var targetHeader = hasFrozenColumns() ? ((idx <= options.frozenColumn) ? $headerL : $headerR) : $headerL;\r\n      var targetIndex = hasFrozenColumns() ? ((idx <= options.frozenColumn) ? idx : idx - options.frozenColumn - 1) : idx;\r\n      var $rtn = targetHeader.children().eq(targetIndex);\r\n      return $rtn && $rtn[0];\r\n    }\r\n\r\n    function getHeaderRow() {\r\n      return hasFrozenColumns() ? $headerRow : $headerRow[0];\r\n    }\r\n\r\n    function getFooterRow() {\r\n      return hasFrozenColumns() ? $footerRow : $footerRow[0];\r\n    }\r\n\r\n    function getPreHeaderPanel() {\r\n      return $preHeaderPanel[0];\r\n    }\r\n\r\n    function getPreHeaderPanelRight() {\r\n      return $preHeaderPanelR[0];\r\n    }\r\n\r\n    function getHeaderRowColumn(columnIdOrIdx) {\r\n      var idx = (typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx));\r\n\r\n      var $headerRowTarget;\r\n\r\n      if (hasFrozenColumns()) {\r\n        if (idx <= options.frozenColumn) {\r\n          $headerRowTarget = $headerRowL;\r\n        } else {\r\n          $headerRowTarget = $headerRowR;\r\n          idx -= options.frozenColumn + 1;\r\n        }\r\n      } else {\r\n        $headerRowTarget = $headerRowL;\r\n      }\r\n\r\n      var $header = $headerRowTarget.children().eq(idx);\r\n      return $header && $header[0];\r\n    }\r\n\r\n    function getFooterRowColumn(columnIdOrIdx) {\r\n      var idx = (typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx));\r\n\r\n      var $footerRowTarget;\r\n\r\n      if (hasFrozenColumns()) {\r\n        if (idx <= options.frozenColumn) {\r\n          $footerRowTarget = $footerRowL;\r\n        } else {\r\n          $footerRowTarget = $footerRowR;\r\n\r\n          idx -= options.frozenColumn + 1;\r\n        }\r\n      } else {\r\n        $footerRowTarget = $footerRowL;\r\n      }\r\n\r\n      var $footer = $footerRowTarget && $footerRowTarget.children().eq(idx);\r\n      return $footer && $footer[0];\r\n    }\r\n\r\n    function createColumnFooter() {\r\n      if (options.createFooterRow) {\r\n        $footerRow.find(\".slick-footerrow-column\")\r\n          .each(function () {\r\n            var columnDef = $(this).data(\"column\");\r\n            if (columnDef) {\r\n              trigger(self.onBeforeFooterRowCellDestroy, {\r\n                \"node\": this,\r\n                \"column\": columnDef,\r\n                \"grid\": self\r\n              });\r\n            }\r\n          });\r\n\r\n        $footerRowL.empty();\r\n        $footerRowR.empty();\r\n\r\n        for (var i = 0; i < columns.length; i++) {\r\n          var m = columns[i];\r\n\r\n          var footerRowCell = $(\"<div class='ui-state-default slick-footerrow-column l\" + i + \" r\" + i + \"'></div>\")\r\n            .data(\"column\", m)\r\n            .addClass(hasFrozenColumns() && i <= options.frozenColumn? 'frozen': '')\r\n            .appendTo(hasFrozenColumns() && (i > options.frozenColumn)? $footerRowR: $footerRowL);\r\n\r\n          trigger(self.onFooterRowCellRendered, {\r\n            \"node\": footerRowCell[0],\r\n            \"column\": m,\r\n            \"grid\": self\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    function createColumnGroupHeaders() {\r\n      var columnsLength = 0;\r\n      var frozenColumnsValid = false;\r\n\r\n      if (!treeColumns.hasDepth())\r\n        return;\r\n\r\n      for (var index = 0; index < $groupHeadersL.length; index++) {\r\n\r\n        $groupHeadersL[index].empty();\r\n        $groupHeadersR[index].empty();\r\n\r\n        var groupColumns = treeColumns.getColumnsInDepth(index);\r\n\r\n        for (var indexGroup in groupColumns) {\r\n          var m = groupColumns[indexGroup];\r\n\r\n          columnsLength += m.extractColumns().length;\r\n\r\n          if (hasFrozenColumns() && index === 0 && (columnsLength-1) === options.frozenColumn)\r\n            frozenColumnsValid = true;\r\n\r\n          $(\"<div class='ui-state-default slick-group-header-column' />\")\r\n            .html(\"<span class='slick-column-name'>\" + m.name + \"</span>\")\r\n            .attr(\"id\", \"\" + uid + m.id)\r\n            .attr(\"title\", m.toolTip || \"\")\r\n            .data(\"column\", m)\r\n            .addClass(m.headerCssClass || \"\")\r\n            .addClass(hasFrozenColumns() && (columnsLength - 1) > options.frozenColumn? 'frozen': '')\r\n            .appendTo(hasFrozenColumns() && (columnsLength - 1) > options.frozenColumn? $groupHeadersR[index]: $groupHeadersL[index]);\r\n        }\r\n\r\n        if (hasFrozenColumns() && index === 0 && !frozenColumnsValid) {\r\n          $groupHeadersL[index].empty();\r\n          $groupHeadersR[index].empty();\r\n          alert(\"All columns of group should to be grouped!\");\r\n          break;\r\n        }\r\n      }\r\n\r\n      applyColumnGroupHeaderWidths();\r\n    }\r\n\r\n    function createColumnHeaders() {\r\n      function onMouseEnter() {\r\n        $(this).addClass(\"ui-state-hover\");\r\n      }\r\n\r\n      function onMouseLeave() {\r\n        $(this).removeClass(\"ui-state-hover\");\r\n      }\r\n\r\n      $headers.find(\".slick-header-column\")\r\n        .each(function() {\r\n          var columnDef = $(this).data(\"column\");\r\n          if (columnDef) {\r\n            trigger(self.onBeforeHeaderCellDestroy, {\r\n              \"node\": this,\r\n              \"column\": columnDef,\r\n              \"grid\": self\r\n            });\r\n          }\r\n        });\r\n\r\n      $headerL.empty();\r\n      $headerR.empty();\r\n\r\n      getHeadersWidth();\r\n\r\n      $headerL.width(headersWidthL);\r\n      $headerR.width(headersWidthR);\r\n\r\n      $headerRow.find(\".slick-headerrow-column\")\r\n        .each(function() {\r\n          var columnDef = $(this).data(\"column\");\r\n          if (columnDef) {\r\n            trigger(self.onBeforeHeaderRowCellDestroy, {\r\n              \"node\": this,\r\n              \"column\": columnDef,\r\n              \"grid\": self\r\n            });\r\n          }\r\n        });\r\n\r\n      $headerRowL.empty();\r\n      $headerRowR.empty();\r\n\r\n      if (options.createFooterRow) {\r\n        $footerRowL.find(\".slick-footerrow-column\")\r\n          .each(function() {\r\n            var columnDef = $(this).data(\"column\");\r\n            if (columnDef) {\r\n              trigger(self.onBeforeFooterRowCellDestroy, {\r\n                \"node\": this,\r\n                \"column\": columnDef,\r\n                \"grid\": self\r\n              });\r\n            }\r\n          });\r\n        $footerRowL.empty();\r\n\r\n        if (hasFrozenColumns()) {\r\n          $footerRowR.find(\".slick-footerrow-column\")\r\n            .each(function() {\r\n              var columnDef = $(this).data(\"column\");\r\n              if (columnDef) {\r\n                trigger(self.onBeforeFooterRowCellDestroy, {\r\n                  \"node\": this,\r\n                  \"column\": columnDef,\r\n                  \"grid\": self\r\n                });\r\n              }\r\n            });\r\n          $footerRowR.empty();\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < columns.length; i++) {\r\n        var m = columns[i];\r\n\r\n        var $headerTarget = hasFrozenColumns() ? ((i <= options.frozenColumn) ? $headerL : $headerR) : $headerL;\r\n        var $headerRowTarget = hasFrozenColumns() ? ((i <= options.frozenColumn) ? $headerRowL : $headerRowR) : $headerRowL;\r\n\r\n        var header = $(\"<div class='ui-state-default slick-header-column' />\")\r\n            .html(\"<span class='slick-column-name'>\" + m.name + \"</span>\")\r\n            .width(m.width - headerColumnWidthDiff)\r\n            .attr(\"id\", \"\" + uid + m.id)\r\n            .attr(\"title\", m.toolTip || \"\")\r\n            .data(\"column\", m)\r\n            .addClass(m.headerCssClass || \"\")\r\n            .addClass(hasFrozenColumns() && i <= options.frozenColumn? 'frozen': '')\r\n            .appendTo($headerTarget);\r\n\r\n        if (options.enableColumnReorder || m.sortable) {\r\n          header\r\n            .on('mouseenter', onMouseEnter)\r\n            .on('mouseleave', onMouseLeave);\r\n        }\r\n\r\n        if(m.hasOwnProperty('headerCellAttrs') && m.headerCellAttrs instanceof Object) {\r\n          for (var key in m.headerCellAttrs) {\r\n            if (m.headerCellAttrs.hasOwnProperty(key)) {\r\n              header.attr(key, m.headerCellAttrs[key]);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (m.sortable) {\r\n          header.addClass(\"slick-header-sortable\");\r\n          header.append(\"<span class='slick-sort-indicator\"\r\n            + (options.numberedMultiColumnSort && !options.sortColNumberInSeparateSpan ? \" slick-sort-indicator-numbered\" : \"\" ) + \"' />\");\r\n          if (options.numberedMultiColumnSort && options.sortColNumberInSeparateSpan) { header.append(\"<span class='slick-sort-indicator-numbered' />\"); }\r\n        }\r\n\r\n        trigger(self.onHeaderCellRendered, {\r\n          \"node\": header[0],\r\n          \"column\": m,\r\n          \"grid\": self\r\n        });\r\n\r\n        if (options.showHeaderRow) {\r\n          var headerRowCell = $(\"<div class='ui-state-default slick-headerrow-column l\" + i + \" r\" + i + \"'></div>\")\r\n              .data(\"column\", m)\r\n              .addClass(hasFrozenColumns() && i <= options.frozenColumn? 'frozen': '')\r\n              .appendTo($headerRowTarget);\r\n\r\n          trigger(self.onHeaderRowCellRendered, {\r\n            \"node\": headerRowCell[0],\r\n            \"column\": m,\r\n            \"grid\": self\r\n          });\r\n        }\r\n        if (options.createFooterRow && options.showFooterRow) {\r\n          var footerRowCell = $(\"<div class='ui-state-default slick-footerrow-column l\" + i   + \" r\" + i + \"'></div>\")\r\n              .data(\"column\", m)\r\n              .appendTo($footerRow);\r\n\r\n          trigger(self.onFooterRowCellRendered, {\r\n            \"node\": footerRowCell[0],\r\n            \"column\": m,\r\n            \"grid\": self\r\n          });\r\n        }\r\n      }\r\n\r\n      setSortColumns(sortColumns);\r\n      setupColumnResize();\r\n      if (options.enableColumnReorder) {\r\n        if (typeof options.enableColumnReorder == 'function') {\r\n            options.enableColumnReorder(self, $headers, headerColumnWidthDiff, setColumns, setupColumnResize, columns, getColumnIndex, uid, trigger);\r\n        } else {\r\n            setupColumnReorder();\r\n        }\r\n      }\r\n    }\r\n\r\n    function setupColumnSort() {\r\n      $headers.click(function (e) {\r\n        if (columnResizeDragging) return;\r\n        // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\r\n        e.metaKey = e.metaKey || e.ctrlKey;\r\n\r\n        if ($(e.target).hasClass(\"slick-resizable-handle\")) {\r\n          return;\r\n        }\r\n\r\n        var $col = $(e.target).closest(\".slick-header-column\");\r\n        if (!$col.length) {\r\n          return;\r\n        }\r\n\r\n        var column = $col.data(\"column\");\r\n        if (column.sortable) {\r\n          if (!getEditorLock().commitCurrentEdit()) {\r\n            return;\r\n          }\r\n\r\n          var previousSortColumns = $.extend(true, [], sortColumns);\r\n          var sortColumn = null;\r\n          var i = 0;\r\n          for (; i < sortColumns.length; i++) {\r\n            if (sortColumns[i].columnId == column.id) {\r\n              sortColumn = sortColumns[i];\r\n              sortColumn.sortAsc = !sortColumn.sortAsc;\r\n              break;\r\n            }\r\n          }\r\n          var hadSortCol = !!sortColumn;\r\n\r\n          if (options.tristateMultiColumnSort) {\r\n              if (!sortColumn) {\r\n                sortColumn = { columnId: column.id, sortAsc: column.defaultSortAsc };\r\n              }\r\n              if (hadSortCol && sortColumn.sortAsc) {\r\n                // three state: remove sort rather than go back to ASC\r\n                sortColumns.splice(i, 1);\r\n                sortColumn = null;\r\n              }\r\n              if (!options.multiColumnSort) { sortColumns = []; }\r\n              if (sortColumn && (!hadSortCol || !options.multiColumnSort)) {\r\n                sortColumns.push(sortColumn);\r\n              }\r\n          } else {\r\n              // legacy behaviour\r\n              if (e.metaKey && options.multiColumnSort) {\r\n                if (sortColumn) {\r\n                  sortColumns.splice(i, 1);\r\n                }\r\n              }\r\n              else {\r\n                if ((!e.shiftKey && !e.metaKey) || !options.multiColumnSort) {\r\n                  sortColumns = [];\r\n                }\r\n\r\n                if (!sortColumn) {\r\n                  sortColumn = { columnId: column.id, sortAsc: column.defaultSortAsc };\r\n                  sortColumns.push(sortColumn);\r\n                } else if (sortColumns.length === 0) {\r\n                  sortColumns.push(sortColumn);\r\n                }\r\n              }\r\n          }\r\n\r\n          var onSortArgs;\r\n          if (!options.multiColumnSort) {\r\n            onSortArgs = {\r\n              multiColumnSort: false,\r\n              previousSortColumns: previousSortColumns,\r\n              columnId: (sortColumns.length > 0 ? column.id : null),\r\n              sortCol: (sortColumns.length > 0 ? column : null),\r\n              sortAsc: (sortColumns.length > 0 ? sortColumns[0].sortAsc : true)\r\n            };\r\n          } else {\r\n            onSortArgs = {\r\n              multiColumnSort: true,\r\n              previousSortColumns: previousSortColumns,\r\n              sortCols: $.map(sortColumns, function(col) {\r\n                return {columnId: columns[getColumnIndex(col.columnId)].id, sortCol: columns[getColumnIndex(col.columnId)], sortAsc: col.sortAsc };\r\n              })\r\n            };\r\n          }\r\n\r\n          if (trigger(self.onBeforeSort, onSortArgs, e) !== false) {\r\n            setSortColumns(sortColumns);\r\n            trigger(self.onSort, onSortArgs, e);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    function currentPositionInHeader(id) {\r\n      var currentPosition = 0;\r\n      $headers.find('.slick-header-column').each(function (i) {\r\n        if (this.id == id) {\r\n          currentPosition = i;\r\n          return false;\r\n        }\r\n      });\r\n\r\n      return currentPosition;\r\n    }\r\n\r\n    function limitPositionInGroup(idColumn) {\r\n      var groupColumnOfPreviousPosition,\r\n        startLimit = 0,\r\n        endLimit = 0;\r\n\r\n      treeColumns\r\n        .getColumnsInDepth($groupHeadersL.length - 1)\r\n        .some(function (groupColumn) {\r\n          startLimit = endLimit;\r\n          endLimit += groupColumn.columns.length;\r\n\r\n          groupColumn.columns.some(function (column) {\r\n\r\n            if (column.id === idColumn)\r\n              groupColumnOfPreviousPosition = groupColumn;\r\n\r\n            return groupColumnOfPreviousPosition;\r\n          });\r\n\r\n          return groupColumnOfPreviousPosition;\r\n        });\r\n\r\n      endLimit--;\r\n\r\n      return {\r\n        start: startLimit,\r\n        end: endLimit,\r\n        group: groupColumnOfPreviousPosition\r\n      };\r\n    }\r\n\r\n    function remove(arr, elem) {\r\n      var index = arr.lastIndexOf(elem);\r\n      if(index > -1) {\r\n        arr.splice(index, 1);\r\n        remove(arr, elem);\r\n      }\r\n    }\r\n\r\n    function columnPositionValidInGroup($item) {\r\n      var currentPosition = currentPositionInHeader($item[0].id);\r\n      var limit = limitPositionInGroup($item.data('column').id);\r\n      var positionValid = limit.start <= currentPosition && currentPosition <= limit.end;\r\n\r\n      return {\r\n    \tlimit: limit,\r\n        valid: positionValid,\r\n        message: positionValid? '': 'Column \"'.concat($item.text(), '\" can be reordered only within the \"', limit.group.name, '\" group!')\r\n      };\r\n    }\r\n\r\n    function setupColumnReorder() {\r\n      $headers.filter(\":ui-sortable\").sortable(\"destroy\");\r\n      var columnScrollTimer = null;\r\n\r\n      function scrollColumnsRight() {\r\n        $viewportScrollContainerX[0].scrollLeft = $viewportScrollContainerX[0].scrollLeft + 10;\r\n      }\r\n\r\n      function scrollColumnsLeft() {\r\n        $viewportScrollContainerX[0].scrollLeft = $viewportScrollContainerX[0].scrollLeft - 10;\r\n      }\r\n\r\n      var canDragScroll;\r\n      $headers.sortable({\r\n        containment: \"parent\",\r\n        distance: 3,\r\n        axis: \"x\",\r\n        cursor: \"default\",\r\n        tolerance: \"intersection\",\r\n        helper: \"clone\",\r\n        placeholder: \"slick-sortable-placeholder ui-state-default slick-header-column\",\r\n        start: function (e, ui) {\r\n          ui.placeholder.width(ui.helper.outerWidth() - headerColumnWidthDiff);\r\n          canDragScroll = !hasFrozenColumns() ||\r\n            (ui.placeholder.offset().left + ui.placeholder.width()) > $viewportScrollContainerX.offset().left;\r\n\t      $(ui.helper).addClass(\"slick-header-column-active\");\r\n        },\r\n        beforeStop: function (e, ui) {\r\n          $(ui.helper).removeClass(\"slick-header-column-active\");\r\n        },\r\n        sort: function (e, ui) {\r\n          if (canDragScroll && e.originalEvent.pageX > $container[0].clientWidth) {\r\n            if (!(columnScrollTimer)) {\r\n              columnScrollTimer = setInterval(\r\n                scrollColumnsRight, 100);\r\n            }\r\n          } else if (canDragScroll && e.originalEvent.pageX < $viewportScrollContainerX.offset().left) {\r\n            if (!(columnScrollTimer)) {\r\n              columnScrollTimer = setInterval(\r\n                scrollColumnsLeft, 100);\r\n            }\r\n          } else {\r\n            clearInterval(columnScrollTimer);\r\n            columnScrollTimer = null;\r\n          }\r\n        },\r\n        stop: function (e, ui) {\r\n          var cancel = false;\r\n          clearInterval(columnScrollTimer);\r\n          columnScrollTimer = null;\r\n          var limit = null;\r\n\r\n          if (treeColumns.hasDepth()) {\r\n            var validPositionInGroup = columnPositionValidInGroup(ui.item);\r\n            limit = validPositionInGroup.limit;\r\n\r\n            cancel = !validPositionInGroup.valid;\r\n\r\n            if (cancel)\r\n              alert(validPositionInGroup.message);\r\n          }\r\n\r\n          if (cancel || !getEditorLock().commitCurrentEdit()) {\r\n            $(this).sortable(\"cancel\");\r\n            return;\r\n          }\r\n\r\n          var reorderedIds = $headerL.sortable(\"toArray\");\r\n          reorderedIds = reorderedIds.concat($headerR.sortable(\"toArray\"));\r\n\r\n          var reorderedColumns = [];\r\n          for (var i = 0; i < reorderedIds.length; i++) {\r\n            reorderedColumns.push(columns[getColumnIndex(reorderedIds[i].replace(uid, \"\"))]);\r\n          }\r\n          setColumns(reorderedColumns);\r\n\r\n          trigger(self.onColumnsReordered, { impactedColumns : getImpactedColumns( limit ) });\r\n          e.stopPropagation();\r\n          setupColumnResize();\r\n        }\r\n      });\r\n    }\r\n\r\n    function getImpactedColumns( limit ) {\r\n    \tvar impactedColumns = [];\r\n\r\n    \tif( limit ) {\r\n\r\n\t   \t\tfor( var i = limit.start; i <= limit.end; i++ ) {\r\n\t   \t\t\timpactedColumns.push( columns[i] );\r\n\t   \t\t}\r\n    \t}\r\n    \telse {\r\n\r\n    \t\timpactedColumns = columns;\r\n    \t}\r\n\r\n   \t\treturn impactedColumns;\r\n    }\r\n\r\n    function setupColumnResize() {\r\n      var $col, j, k, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\r\n      var frozenLeftColMaxWidth = 0;\r\n      columnElements = $headers.children();\r\n      columnElements.find(\".slick-resizable-handle\").remove();\r\n      columnElements.each(function (i, e) {\r\n        if (i >= columns.length) { return; }\r\n        if (columns[i].resizable) {\r\n          if (firstResizable === undefined) {\r\n            firstResizable = i;\r\n          }\r\n          lastResizable = i;\r\n        }\r\n      });\r\n      if (firstResizable === undefined) {\r\n        return;\r\n      }\r\n      columnElements.each(function (i, e) {\r\n        if (i >= columns.length) { return; }\r\n        if (i < firstResizable || (options.forceFitColumns && i >= lastResizable)) {\r\n          return;\r\n        }\r\n        $col = $(e);\r\n        $(\"<div class='slick-resizable-handle' />\")\r\n            .appendTo(e)\r\n            .on(\"dragstart\", function (e, dd) {\r\n              if (!getEditorLock().commitCurrentEdit()) {\r\n                return false;\r\n              }\r\n              pageX = e.pageX;\r\n              frozenLeftColMaxWidth = 0;\r\n              $(this).parent().addClass(\"slick-header-column-active\");\r\n              var shrinkLeewayOnRight = null, stretchLeewayOnRight = null;\r\n              // lock each column's width option to current width\r\n              columnElements.each(function (i, e) {\r\n                if (i >= columns.length) { return; }\r\n                columns[i].previousWidth = $(e).outerWidth();\r\n              });\r\n              if (options.forceFitColumns) {\r\n                shrinkLeewayOnRight = 0;\r\n                stretchLeewayOnRight = 0;\r\n                // colums on right affect maxPageX/minPageX\r\n                for (j = i + 1; j < columns.length; j++) {\r\n                  c = columns[j];\r\n                  if (c.resizable) {\r\n                    if (stretchLeewayOnRight !== null) {\r\n                      if (c.maxWidth) {\r\n                        stretchLeewayOnRight += c.maxWidth - c.previousWidth;\r\n                      } else {\r\n                        stretchLeewayOnRight = null;\r\n                      }\r\n                    }\r\n                    shrinkLeewayOnRight += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\r\n                  }\r\n                }\r\n              }\r\n              var shrinkLeewayOnLeft = 0, stretchLeewayOnLeft = 0;\r\n              for (j = 0; j <= i; j++) {\r\n                // columns on left only affect minPageX\r\n                c = columns[j];\r\n                if (c.resizable) {\r\n                  if (stretchLeewayOnLeft !== null) {\r\n                    if (c.maxWidth) {\r\n                      stretchLeewayOnLeft += c.maxWidth - c.previousWidth;\r\n                    } else {\r\n                      stretchLeewayOnLeft = null;\r\n                    }\r\n                  }\r\n                  shrinkLeewayOnLeft += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\r\n                }\r\n              }\r\n              if (shrinkLeewayOnRight === null) {\r\n                shrinkLeewayOnRight = 100000;\r\n              }\r\n              if (shrinkLeewayOnLeft === null) {\r\n                shrinkLeewayOnLeft = 100000;\r\n              }\r\n              if (stretchLeewayOnRight === null) {\r\n                stretchLeewayOnRight = 100000;\r\n              }\r\n              if (stretchLeewayOnLeft === null) {\r\n                stretchLeewayOnLeft = 100000;\r\n              }\r\n              maxPageX = pageX + Math.min(shrinkLeewayOnRight, stretchLeewayOnLeft);\r\n              minPageX = pageX - Math.min(shrinkLeewayOnLeft, stretchLeewayOnRight);\r\n            })\r\n            .on(\"drag\", function (e, dd) {\r\n              columnResizeDragging = true;\r\n              var actualMinWidth, d = Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX, x;\r\n              var newCanvasWidthL = 0, newCanvasWidthR = 0;\r\n              var viewportWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\r\n\r\n              if (d < 0) { // shrink column\r\n                x = d;\r\n\r\n                for (j = i; j >= 0; j--) {\r\n                  c = columns[j];\r\n                  if (c.resizable) {\r\n                    actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\r\n                    if (x && c.previousWidth + x < actualMinWidth) {\r\n                      x += c.previousWidth - actualMinWidth;\r\n                      c.width = actualMinWidth;\r\n                    } else {\r\n                      c.width = c.previousWidth + x;\r\n                      x = 0;\r\n                    }\r\n                  }\r\n                }\r\n\r\n                for (k = 0; k <= i; k++) {\r\n                  c = columns[k];\r\n\r\n                  if (hasFrozenColumns() && (k > options.frozenColumn)) {\r\n                    newCanvasWidthR += c.width;\r\n                  } else {\r\n                    newCanvasWidthL += c.width;\r\n                  }\r\n                }\r\n\r\n                if (options.forceFitColumns) {\r\n                  x = -d;\r\n                  for (j = i + 1; j < columns.length; j++) {\r\n                    c = columns[j];\r\n                    if (c.resizable) {\r\n                      if (x && c.maxWidth && (c.maxWidth - c.previousWidth < x)) {\r\n                        x -= c.maxWidth - c.previousWidth;\r\n                        c.width = c.maxWidth;\r\n                      } else {\r\n                        c.width = c.previousWidth + x;\r\n                        x = 0;\r\n                      }\r\n\r\n                      if (hasFrozenColumns() && (j > options.frozenColumn)) {\r\n                        newCanvasWidthR += c.width;\r\n                      } else {\r\n                        newCanvasWidthL += c.width;\r\n                      }\r\n                    }\r\n                  }\r\n                } else {\r\n                  for (j = i + 1; j < columns.length; j++) {\r\n                    c = columns[j];\r\n\r\n                    if (hasFrozenColumns() && (j > options.frozenColumn)) {\r\n                      newCanvasWidthR += c.width;\r\n                    } else {\r\n                      newCanvasWidthL += c.width;\r\n                    }\r\n                  }\r\n                }\r\n\r\n                if (options.forceFitColumns) {\r\n                  x = -d;\r\n                  for (j = i + 1; j < columns.length; j++) {\r\n                    c = columns[j];\r\n                    if (c.resizable) {\r\n                      if (x && c.maxWidth && (c.maxWidth - c.previousWidth < x)) {\r\n                        x -= c.maxWidth - c.previousWidth;\r\n                        c.width = c.maxWidth;\r\n                      } else {\r\n                        c.width = c.previousWidth + x;\r\n                        x = 0;\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              } else { // stretch column\r\n                x = d;\r\n\r\n                newCanvasWidthL = 0;\r\n                newCanvasWidthR = 0;\r\n\r\n                for (j = i; j >= 0; j--) {\r\n                  c = columns[j];\r\n                  if (c.resizable) {\r\n                    if (x && c.maxWidth && (c.maxWidth - c.previousWidth < x)) {\r\n                      x -= c.maxWidth - c.previousWidth;\r\n                      c.width = c.maxWidth;\r\n                    } else {\r\n                      var newWidth = c.previousWidth + x;\r\n                      var resizedCanvasWidthL = canvasWidthL + x;\r\n\r\n                      if (hasFrozenColumns() && (j <= options.frozenColumn)) {\r\n                        // if we're on the left frozen side, we need to make sure that our left section width never goes over the total viewport width\r\n                        if (newWidth > frozenLeftColMaxWidth && resizedCanvasWidthL < (viewportWidth - options.frozenRightViewportMinWidth)) {\r\n                          frozenLeftColMaxWidth = newWidth; // keep max column width ref, if we go over the limit this number will stop increasing\r\n                        }\r\n                        c.width = ((resizedCanvasWidthL + options.frozenRightViewportMinWidth) > viewportWidth) ? frozenLeftColMaxWidth : newWidth;\r\n                      } else {\r\n                        c.width = newWidth;\r\n                      }\r\n                      x = 0;\r\n                    }\r\n                  }\r\n                }\r\n\r\n                for (k = 0; k <= i; k++) {\r\n                  c = columns[k];\r\n\r\n                  if (hasFrozenColumns() && (k > options.frozenColumn)) {\r\n                    newCanvasWidthR += c.width;\r\n                  } else {\r\n                    newCanvasWidthL += c.width;\r\n                  }\r\n                }\r\n\r\n                if (options.forceFitColumns) {\r\n                  x = -d;\r\n                  for (j = i + 1; j < columns.length; j++) {\r\n                    c = columns[j];\r\n                    if (c.resizable) {\r\n                      actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\r\n                      if (x && c.previousWidth + x < actualMinWidth) {\r\n                        x += c.previousWidth - actualMinWidth;\r\n                        c.width = actualMinWidth;\r\n                      } else {\r\n                        c.width = c.previousWidth + x;\r\n                        x = 0;\r\n                      }\r\n\r\n                      if (hasFrozenColumns() && (j > options.frozenColumn)) {\r\n                        newCanvasWidthR += c.width;\r\n                      } else {\r\n                        newCanvasWidthL += c.width;\r\n                      }\r\n                    }\r\n                  }\r\n                } else {\r\n                  for (j = i + 1; j < columns.length; j++) {\r\n                    c = columns[j];\r\n\r\n                    if (hasFrozenColumns() && (j > options.frozenColumn)) {\r\n                      newCanvasWidthR += c.width;\r\n                    } else {\r\n                      newCanvasWidthL += c.width;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (hasFrozenColumns() && newCanvasWidthL != canvasWidthL) {\r\n                $headerL.width(newCanvasWidthL + 1000);\r\n                $paneHeaderR.css('left', newCanvasWidthL);\r\n              }\r\n\r\n              applyColumnHeaderWidths();\r\n              applyColumnGroupHeaderWidths();\r\n              if (options.syncColumnCellResize) {\r\n                applyColumnWidths();\r\n              }\r\n              trigger(self.onColumnsDrag, {\r\n                triggeredByColumn: $(this).parent().attr(\"id\").replace(uid, \"\"),\r\n                resizeHandle: $(this)\r\n              });\r\n            })\r\n            .on(\"dragend\", function (e, dd) {\r\n              $(this).parent().removeClass(\"slick-header-column-active\");\r\n\r\n              var triggeredByColumn = $(this).parent().attr(\"id\").replace(uid, \"\");\r\n              if (trigger(self.onBeforeColumnsResize, { triggeredByColumn: triggeredByColumn }) === true) {\r\n                applyColumnHeaderWidths();\r\n                applyColumnGroupHeaderWidths();\r\n              }\r\n              var newWidth;\r\n              for (j = 0; j < columns.length; j++) {\r\n                c = columns[j];\r\n                newWidth = $(columnElements[j]).outerWidth();\r\n\r\n                if (c.previousWidth !== newWidth && c.rerenderOnResize) {\r\n                  invalidateAllRows();\r\n                }\r\n              }\r\n              updateCanvasWidth(true);\r\n              render();\r\n              trigger(self.onColumnsResized, { triggeredByColumn: triggeredByColumn });\r\n              setTimeout(function () { columnResizeDragging = false; }, 300);\r\n            })\r\n            .on(\"dblclick\", function () {\r\n              var triggeredByColumn = $(this).parent().attr(\"id\").replace(uid, \"\");\r\n              trigger(self.onColumnsResizeDblClick, { triggeredByColumn: triggeredByColumn });\r\n            });\r\n      });\r\n    }\r\n\r\n    function getVBoxDelta($el) {\r\n      var p = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\r\n      var delta = 0;\r\n      if ($el && typeof $el.css === 'function') {\r\n        $.each(p, function (n, val) {\r\n          delta += parseFloat($el.css(val)) || 0;\r\n        });\r\n      }\r\n      return delta;\r\n    }\r\n\r\n    function setFrozenOptions() {\r\n      options.frozenColumn = (options.frozenColumn >= 0 && options.frozenColumn < columns.length)\r\n        ? parseInt(options.frozenColumn)\r\n        : -1;\r\n\r\n      if (options.frozenRow > -1) {\r\n        hasFrozenRows = true;\r\n        frozenRowsHeight = ( options.frozenRow ) * options.rowHeight;\r\n\r\n        var dataLength = getDataLength();\r\n\r\n        actualFrozenRow = ( options.frozenBottom )\r\n          ? ( dataLength - options.frozenRow )\r\n          : options.frozenRow;\r\n      } else {\r\n        hasFrozenRows = false;\r\n      }\r\n    }\r\n\r\n    function setPaneVisibility() {\r\n      if (hasFrozenColumns()) {\r\n        $paneHeaderR.show();\r\n        $paneTopR.show();\r\n\r\n        if (hasFrozenRows) {\r\n          $paneBottomL.show();\r\n          $paneBottomR.show();\r\n        } else {\r\n          $paneBottomR.hide();\r\n          $paneBottomL.hide();\r\n        }\r\n      } else {\r\n        $paneHeaderR.hide();\r\n        $paneTopR.hide();\r\n        $paneBottomR.hide();\r\n\r\n        if (hasFrozenRows) {\r\n          $paneBottomL.show();\r\n        } else {\r\n          $paneBottomR.hide();\r\n          $paneBottomL.hide();\r\n        }\r\n      }\r\n    }\r\n\r\n    function setOverflow() {\r\n      $viewportTopL.css({\r\n        'overflow-x': ( hasFrozenColumns() ) ? ( hasFrozenRows && !options.alwaysAllowHorizontalScroll ? 'hidden' : 'scroll' ) : ( hasFrozenRows && !options.alwaysAllowHorizontalScroll ? 'hidden' : 'auto' ),\r\n        'overflow-y': (!hasFrozenColumns() && options.alwaysShowVerticalScroll) ? \"scroll\" : (( hasFrozenColumns() ) ? ( hasFrozenRows ? 'hidden' : 'hidden' ) : ( hasFrozenRows ? 'scroll' : 'auto' ))\r\n      });\r\n\r\n      $viewportTopR.css({\r\n        'overflow-x': ( hasFrozenColumns() ) ? ( hasFrozenRows && !options.alwaysAllowHorizontalScroll ? 'hidden' : 'scroll' ) : ( hasFrozenRows && !options.alwaysAllowHorizontalScroll ? 'hidden' : 'auto' ),\r\n        'overflow-y': options.alwaysShowVerticalScroll ? \"scroll\" : (( hasFrozenColumns() ) ? ( hasFrozenRows ? 'scroll' : 'auto'   ) : ( hasFrozenRows ? 'scroll' : 'auto' ))\r\n      });\r\n\r\n      $viewportBottomL.css({\r\n        'overflow-x': ( hasFrozenColumns() ) ? ( hasFrozenRows && !options.alwaysAllowHorizontalScroll ? 'scroll' : 'auto'   ): ( hasFrozenRows && !options.alwaysAllowHorizontalScroll ? 'auto' : 'auto'   ),\r\n        'overflow-y': (!hasFrozenColumns() && options.alwaysShowVerticalScroll) ? \"scroll\" : (( hasFrozenColumns() ) ? ( hasFrozenRows ? 'hidden' : 'hidden' ): ( hasFrozenRows ? 'scroll' : 'auto' ))\r\n      });\r\n\r\n      $viewportBottomR.css({\r\n        'overflow-x': ( hasFrozenColumns() ) ? ( hasFrozenRows && !options.alwaysAllowHorizontalScroll ? 'scroll' : 'auto' ) : ( hasFrozenRows && !options.alwaysAllowHorizontalScroll ? 'auto' : 'auto' ),\r\n        'overflow-y': options.alwaysShowVerticalScroll ? \"scroll\" : (( hasFrozenColumns() ) ? ( hasFrozenRows ? 'auto' : 'auto'   ) : ( hasFrozenRows ? 'auto' : 'auto' ))\r\n      });\r\n      if (options.viewportClass) {\r\n        $viewportTopL.toggleClass(options.viewportClass, true);\r\n        $viewportTopR.toggleClass(options.viewportClass, true);\r\n        $viewportBottomL.toggleClass(options.viewportClass, true);\r\n        $viewportBottomR.toggleClass(options.viewportClass, true);\r\n      }\r\n    }\r\n\r\n    function setScroller() {\r\n      if (hasFrozenColumns()) {\r\n        $headerScrollContainer = $headerScrollerR;\r\n        $headerRowScrollContainer = $headerRowScrollerR;\r\n        $footerRowScrollContainer = $footerRowScrollerR;\r\n\r\n        if (hasFrozenRows) {\r\n          if (options.frozenBottom) {\r\n            $viewportScrollContainerX = $viewportBottomR;\r\n            $viewportScrollContainerY = $viewportTopR;\r\n          } else {\r\n            $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomR;\r\n          }\r\n        } else {\r\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopR;\r\n        }\r\n      } else {\r\n        $headerScrollContainer = $headerScrollerL;\r\n        $headerRowScrollContainer = $headerRowScrollerL;\r\n        $footerRowScrollContainer = $footerRowScrollerL;\r\n\r\n        if (hasFrozenRows) {\r\n          if (options.frozenBottom) {\r\n            $viewportScrollContainerX = $viewportBottomL;\r\n            $viewportScrollContainerY = $viewportTopL;\r\n          } else {\r\n            $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomL;\r\n          }\r\n        } else {\r\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopL;\r\n        }\r\n      }\r\n    }\r\n\r\n    function measureCellPaddingAndBorder() {\r\n      var el;\r\n      var h = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"];\r\n      var v = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\r\n\r\n      // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\r\n      // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\r\n      // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\r\n      var verArray = $.fn.jquery.split('.');\r\n      jQueryNewWidthBehaviour = (verArray[0]==1 && verArray[1]>=8) ||  verArray[0] >=2;\r\n\r\n      el = $(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\r\n      headerColumnWidthDiff = headerColumnHeightDiff = 0;\r\n      if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\r\n        $.each(h, function (n, val) {\r\n          headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\r\n        });\r\n        $.each(v, function (n, val) {\r\n          headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\r\n        });\r\n      }\r\n      el.remove();\r\n\r\n      var r = $(\"<div class='slick-row' />\").appendTo($canvas);\r\n      el = $(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\r\n      cellWidthDiff = cellHeightDiff = 0;\r\n      if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\r\n        $.each(h, function (n, val) {\r\n          cellWidthDiff += parseFloat(el.css(val)) || 0;\r\n        });\r\n        $.each(v, function (n, val) {\r\n          cellHeightDiff += parseFloat(el.css(val)) || 0;\r\n        });\r\n      }\r\n      r.remove();\r\n\r\n      absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\r\n    }\r\n\r\n    function createCssRules() {\r\n      $style = $(\"<style type='text/css' rel='stylesheet' />\").appendTo($(\"head\"));\r\n      var rowHeight = (options.rowHeight - cellHeightDiff);\r\n      var rules = [\r\n        \".\" + uid + \" .slick-group-header-column { left: 1000px; }\",\r\n        \".\" + uid + \" .slick-header-column { left: 1000px; }\",\r\n        \".\" + uid + \" .slick-top-panel { height:\" + options.topPanelHeight + \"px; }\",\r\n        \".\" + uid + \" .slick-preheader-panel { height:\" + options.preHeaderPanelHeight + \"px; }\",\r\n        \".\" + uid + \" .slick-headerrow-columns { height:\" + options.headerRowHeight + \"px; }\",\r\n        \".\" + uid + \" .slick-footerrow-columns { height:\" + options.footerRowHeight + \"px; }\",\r\n        \".\" + uid + \" .slick-cell { height:\" + rowHeight + \"px; }\",\r\n        \".\" + uid + \" .slick-row { height:\" + options.rowHeight + \"px; }\"\r\n      ];\r\n\r\n      for (var i = 0; i < columns.length; i++) {\r\n        rules.push(\".\" + uid + \" .l\" + i + \" { }\");\r\n        rules.push(\".\" + uid + \" .r\" + i + \" { }\");\r\n      }\r\n\r\n      if ($style[0].styleSheet) { // IE\r\n        $style[0].styleSheet.cssText = rules.join(\" \");\r\n      } else {\r\n        $style[0].appendChild(document.createTextNode(rules.join(\" \")));\r\n      }\r\n    }\r\n\r\n    function getColumnCssRules(idx) {\r\n      var i;\r\n      if (!stylesheet) {\r\n        var sheets = document.styleSheets;\r\n        for (i = 0; i < sheets.length; i++) {\r\n          if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\r\n            stylesheet = sheets[i];\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!stylesheet) {\r\n          throw new Error(\"SlickGrid Cannot find stylesheet.\");\r\n        }\r\n\r\n        // find and cache column CSS rules\r\n        columnCssRulesL = [];\r\n        columnCssRulesR = [];\r\n        var cssRules = (stylesheet.cssRules || stylesheet.rules);\r\n        var matches, columnIdx;\r\n        for (i = 0; i < cssRules.length; i++) {\r\n          var selector = cssRules[i].selectorText;\r\n          if (matches = /\\.l\\d+/.exec(selector)) {\r\n            columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\r\n            columnCssRulesL[columnIdx] = cssRules[i];\r\n          } else if (matches = /\\.r\\d+/.exec(selector)) {\r\n            columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\r\n            columnCssRulesR[columnIdx] = cssRules[i];\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        \"left\": columnCssRulesL[idx],\r\n        \"right\": columnCssRulesR[idx]\r\n      };\r\n    }\r\n\r\n    function removeCssRules() {\r\n      $style.remove();\r\n      stylesheet = null;\r\n    }\r\n\r\n    function destroy(shouldDestroyAllElements) {\r\n      getEditorLock().cancelCurrentEdit();\r\n\r\n      trigger(self.onBeforeDestroy, {});\r\n\r\n      var i = plugins.length;\r\n      while(i--) {\r\n        unregisterPlugin(plugins[i]);\r\n      }\r\n\r\n      if (options.enableColumnReorder) {\r\n          $headers.filter(\":ui-sortable\").sortable(\"destroy\");\r\n      }\r\n\r\n      unbindAncestorScrollEvents();\r\n      $container.off(\".slickgrid\");\r\n      removeCssRules();\r\n\r\n      $canvas.off();\r\n      $viewport.off();\r\n      $headerScroller.off();\r\n      $headerRowScroller.off();\r\n      if ($footerRow) {\r\n        $footerRow.off();\r\n      }\r\n      if ($footerRowScroller) {\r\n        $footerRowScroller.off();\r\n      }\r\n      if ($preHeaderPanelScroller) {\r\n        $preHeaderPanelScroller.off();\r\n      }\r\n      $focusSink.off();\r\n      $(\".slick-resizable-handle\").off();\r\n      $(\".slick-header-column\").off();\r\n      $container.empty().removeClass(uid);\r\n      if (shouldDestroyAllElements) {\r\n        destroyAllElements();\r\n      }\r\n    }\r\n\r\n    function destroyAllElements() {\r\n      $activeCanvasNode = null;\r\n      $activeViewportNode = null;\r\n      $boundAncestors = null;\r\n      $canvas = null;\r\n      $canvasTopL = null;\r\n      $canvasTopR = null;\r\n      $canvasBottomL = null;\r\n      $canvasBottomR = null;\r\n      $container = null;\r\n      $focusSink = null;\r\n      $focusSink2 = null;\r\n      $groupHeaders = null;\r\n      $groupHeadersL = null;\r\n      $groupHeadersR = null;\r\n      $headerL = null;\r\n      $headerR = null;\r\n      $headers = null;\r\n      $headerRow = null;\r\n      $headerRowL = null;\r\n      $headerRowR = null;\r\n      $headerRowSpacerL = null;\r\n      $headerRowSpacerR = null;\r\n      $headerRowScrollContainer = null;\r\n      $headerRowScroller = null;\r\n      $headerRowScrollerL = null;\r\n      $headerRowScrollerR = null;\r\n      $headerScrollContainer = null;\r\n      $headerScroller = null;\r\n      $headerScrollerL = null;\r\n      $headerScrollerR = null;\r\n      $hiddenParents = null;\r\n      $footerRow = null;\r\n      $footerRowL = null;\r\n      $footerRowR = null;\r\n      $footerRowSpacerL = null;\r\n      $footerRowSpacerR = null;\r\n      $footerRowScroller = null;\r\n      $footerRowScrollerL = null;\r\n      $footerRowScrollerR = null;\r\n      $footerRowScrollContainer = null;\r\n      $preHeaderPanel = null;\r\n      $preHeaderPanelR = null;\r\n      $preHeaderPanelScroller = null;\r\n      $preHeaderPanelScrollerR = null;\r\n      $preHeaderPanelSpacer = null;\r\n      $preHeaderPanelSpacerR = null;\r\n      $topPanel = null;\r\n      $topPanelScroller = null;\r\n      $style = null;\r\n      $topPanelScrollerL = null;\r\n      $topPanelScrollerR = null;\r\n      $topPanelL = null;\r\n      $topPanelR = null;\r\n      $paneHeaderL = null;\r\n      $paneHeaderR = null;\r\n      $paneTopL = null;\r\n      $paneTopR = null;\r\n      $paneBottomL = null;\r\n      $paneBottomR = null;\r\n      $viewport = null;\r\n      $viewportTopL = null;\r\n      $viewportTopR = null;\r\n      $viewportBottomL = null;\r\n      $viewportBottomR = null;\r\n      $viewportScrollContainerX = null;\r\n      $viewportScrollContainerY = null;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Column Autosizing\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    var canvas = null;\r\n    var canvas_context = null;\r\n\r\n    function autosizeColumn(columnOrIndexOrId, isInit) {\r\n      var c = columnOrIndexOrId;\r\n      if (typeof columnOrIndexOrId === 'number') {\r\n        c = columns[columnOrIndexOrId];\r\n      }\r\n      else if (typeof columnOrIndexOrId === 'string') {\r\n        for (var i = 0; i < columns.length; i++) {\r\n          if (columns[i].Id === columnOrIndexOrId) { c = columns[i]; }\r\n        }\r\n      }\r\n      var $gridCanvas = $(getCanvasNode(0, 0));\r\n      getColAutosizeWidth(c, $gridCanvas, isInit);\r\n    }\r\n\r\n    function autosizeColumns(autosizeMode, isInit) {\r\n      //LogColWidths();\r\n\r\n      autosizeMode =  autosizeMode || options.autosizeColsMode;\r\n      if (autosizeMode === Slick.GridAutosizeColsMode.LegacyForceFit\r\n      || autosizeMode === Slick.GridAutosizeColsMode.LegacyOff) {\r\n        legacyAutosizeColumns();\r\n        return;\r\n      }\r\n\r\n      if (autosizeMode === Slick.GridAutosizeColsMode.None) {\r\n        return;\r\n      }\r\n\r\n      // test for brower canvas support, canvas_context!=null if supported\r\n      canvas = document.createElement(\"canvas\");\r\n      if (canvas && canvas.getContext) { canvas_context = canvas.getContext(\"2d\"); }\r\n\r\n      // pass in the grid canvas\r\n      var $gridCanvas = $(getCanvasNode(0, 0));\r\n      var viewportWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\r\n\r\n      // iterate columns to get autosizes\r\n      var i, c, colWidth, reRender, totalWidth = 0, totalWidthLessSTR = 0, strColsMinWidth = 0, totalMinWidth = 0, totalLockedColWidth = 0;\r\n      for (i = 0; i < columns.length; i++) {\r\n        c = columns[i];\r\n        getColAutosizeWidth(c, $gridCanvas, isInit);\r\n        totalLockedColWidth += (c.autoSize.autosizeMode === Slick.ColAutosizeMode.Locked ? c.width : 0);\r\n        totalMinWidth += (c.autoSize.autosizeMode === Slick.ColAutosizeMode.Locked ? c.width : c.minWidth);\r\n        totalWidth += c.autoSize.widthPx;\r\n        totalWidthLessSTR += (c.autoSize.sizeToRemaining ? 0 : c.autoSize.widthPx);\r\n        strColsMinWidth += (c.autoSize.sizeToRemaining ? c.minWidth || 0 : 0);\r\n      }\r\n      var strColTotalGuideWidth = totalWidth - totalWidthLessSTR;\r\n\r\n      if (autosizeMode === Slick.GridAutosizeColsMode.FitViewportToCols) {\r\n        // - if viewport with is outside MinViewportWidthPx and MaxViewportWidthPx, then the viewport is set to\r\n        //   MinViewportWidthPx or MaxViewportWidthPx and the FitColsToViewport algorithm is used\r\n        // - viewport is resized to fit columns\r\n        var setWidth = totalWidth + scrollbarDimensions.width;\r\n        autosizeMode = Slick.GridAutosizeColsMode.IgnoreViewport;\r\n\r\n        if (options.viewportMaxWidthPx && setWidth > options.viewportMaxWidthPx) {\r\n          setWidth = options.viewportMaxWidthPx;\r\n          autosizeMode = Slick.GridAutosizeColsMode.FitColsToViewport;\r\n        } else if (options.viewportMinWidthPx && setWidth < options.viewportMinWidthPx) {\r\n          setWidth = options.viewportMinWidthPx;\r\n          autosizeMode = Slick.GridAutosizeColsMode.FitColsToViewport;\r\n        } else {\r\n          // falling back to IgnoreViewport will size the columns as-is, with render checking\r\n          //for (i = 0; i < columns.length; i++) { columns[i].width = columns[i].autoSize.widthPx; }\r\n        }\r\n        $container.width(setWidth);\r\n      }\r\n\r\n      if (autosizeMode === Slick.GridAutosizeColsMode.FitColsToViewport) {\r\n        if (strColTotalGuideWidth > 0 && totalWidthLessSTR < viewportWidth - strColsMinWidth) {\r\n          // if addl space remains in the viewport and there are SizeToRemaining cols, just the SizeToRemaining cols expand proportionally to fill viewport\r\n          for (i = 0; i < columns.length; i++) {\r\n            c = columns[i];\r\n            var totalSTRViewportWidth = viewportWidth - totalWidthLessSTR;\r\n            if (c.autoSize.sizeToRemaining) {\r\n              colWidth = totalSTRViewportWidth * c.autoSize.widthPx / strColTotalGuideWidth;\r\n            } else {\r\n              colWidth = c.autoSize.widthPx;\r\n            }\r\n            if (c.rerenderOnResize && c.width  != colWidth) { reRender = true; }\r\n            c.width = colWidth;\r\n          }\r\n        } else if ((options.viewportSwitchToScrollModeWidthPercent && totalWidthLessSTR + strColsMinWidth > viewportWidth * options.viewportSwitchToScrollModeWidthPercent / 100)\r\n          || (totalMinWidth > viewportWidth)) {\r\n          // if the total columns width is wider than the viewport by switchToScrollModeWidthPercent, switch to IgnoreViewport mode\r\n          autosizeMode = Slick.GridAutosizeColsMode.IgnoreViewport;\r\n        } else {\r\n          // otherwise (ie. no SizeToRemaining cols or viewport smaller than columns) all cols other than 'Locked' scale in proportion to fill viewport\r\n          // and SizeToRemaining get minWidth\r\n          var unallocatedColWidth = totalWidthLessSTR - totalLockedColWidth;\r\n          var unallocatedViewportWidth = viewportWidth - totalLockedColWidth - strColsMinWidth;\r\n          for (i = 0; i < columns.length; i++) {\r\n            c = columns[i];\r\n            colWidth = c.width;\r\n            if (c.autoSize.autosizeMode !== Slick.ColAutosizeMode.Locked) {\r\n              if (c.autoSize.sizeToRemaining) {\r\n                colWidth = c.minWidth;\r\n              } else {\r\n                // size width proportionally to free space (we know we have enough room due to the earlier calculations)\r\n                colWidth = unallocatedViewportWidth / unallocatedColWidth * c.autoSize.widthPx;\r\n                if (colWidth < c.minWidth) { colWidth = c.minWidth; }\r\n\r\n                // remove the just allocated widths from the allocation pool\r\n                unallocatedColWidth -= c.autoSize.widthPx;\r\n                unallocatedViewportWidth -= colWidth;\r\n              }\r\n            }\r\n            if (c.rerenderOnResize && c.width  != colWidth) { reRender = true; }\r\n            c.width = colWidth;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (autosizeMode === Slick.GridAutosizeColsMode.IgnoreViewport) {\r\n        // just size columns as-is\r\n        for (i = 0; i < columns.length; i++) {\r\n          colWidth = columns[i].autoSize.widthPx;\r\n          if (columns[i].rerenderOnResize && columns[i].width != colWidth) {\r\n            reRender = true;\r\n          }\r\n          columns[i].width = colWidth;\r\n        }\r\n      }\r\n\r\n      //LogColWidths();\r\n      reRenderColumns(reRender);\r\n    }\r\n\r\n    function LogColWidths () {\r\n      var s =  \"Col Widths:\";\r\n      for (var i = 0; i < columns.length; i++) { s += ' ' + columns[i].width; }\r\n      console.log(s);\r\n    }\r\n\r\n    function getColAutosizeWidth(columnDef, $gridCanvas, isInit) {\r\n      var autoSize = columnDef.autoSize;\r\n\r\n      // set to width as default\r\n      autoSize.widthPx = columnDef.width;\r\n      if (autoSize.autosizeMode === Slick.ColAutosizeMode.Locked\r\n      || autoSize.autosizeMode === Slick.ColAutosizeMode.Guide) {\r\n        return;\r\n      }\r\n\r\n      var dl = getDataLength(); //getDataItem();\r\n\r\n      // ContentIntelligent takes settings from column data type\r\n      if (autoSize.autosizeMode === Slick.ColAutosizeMode.ContentIntelligent) {\r\n        // default to column colDataTypeOf (can be used if initially there are no data rows)\r\n        var colDataTypeOf = autoSize.colDataTypeOf;\r\n        var colDataItem;\r\n        if (dl > 0) {\r\n          var tempRow = getDataItem(0);\r\n          if (tempRow) {\r\n            colDataItem = tempRow[columnDef.field];\r\n            colDataTypeOf = typeof colDataItem;\r\n            if (colDataTypeOf === 'object') {\r\n              if (colDataItem instanceof Date) { colDataTypeOf = \"date\"; }\r\n              if (typeof moment!=='undefined' && colDataItem instanceof moment) { colDataTypeOf = \"moment\"; }\r\n            }\r\n          }\r\n        }\r\n        if (colDataTypeOf === 'boolean') {\r\n          autoSize.colValueArray = [ true, false ];\r\n        }\r\n        if (colDataTypeOf === 'number') {\r\n          autoSize.valueFilterMode = Slick.ValueFilterMode.GetGreatestAndSub;\r\n          autoSize.rowSelectionMode = Slick.RowSelectionMode.AllRows;\r\n        }\r\n        if (colDataTypeOf === 'string') {\r\n          autoSize.valueFilterMode = Slick.ValueFilterMode.GetLongestText;\r\n          autoSize.rowSelectionMode = Slick.RowSelectionMode.AllRows;\r\n          autoSize.allowAddlPercent = 5;\r\n        }\r\n        if (colDataTypeOf === 'date') {\r\n          autoSize.colValueArray = [ new Date(2009, 8, 30, 12, 20, 20) ]; // Sep 30th 2009, 12:20:20 AM\r\n        }\r\n        if (colDataTypeOf === 'moment' && typeof moment!=='undefined') {\r\n          autoSize.colValueArray = [ moment([2009, 8, 30, 12, 20, 20]) ]; // Sep 30th 2009, 12:20:20 AM\r\n        }\r\n      }\r\n\r\n      // at this point, the autosizeMode is effectively 'Content', so proceed to get size\r\n      var colWidth = getColContentSize(columnDef, $gridCanvas, isInit);\r\n\r\n      var addlPercentMultiplier = (autoSize.allowAddlPercent ? (1 + autoSize.allowAddlPercent/100) : 1);\r\n      colWidth = colWidth * addlPercentMultiplier + options.autosizeColPaddingPx;\r\n      if (columnDef.minWidth && colWidth < columnDef.minWidth) { colWidth = columnDef.minWidth; }\r\n      if (columnDef.maxWidth && colWidth > columnDef.maxWidth) { colWidth = columnDef.maxWidth; }\r\n\r\n      autoSize.widthPx = colWidth;\r\n    }\r\n\r\n    function getColContentSize(columnDef, $gridCanvas, isInit) {\r\n      var autoSize = columnDef.autoSize;\r\n      var widthAdjustRatio = 1;\r\n\r\n      // at this point, the autosizeMode is effectively 'Content', so proceed to get size\r\n\r\n      // get header width, if we are taking notice of it\r\n      var i, ii;\r\n      var maxColWidth = 0;\r\n      var headerWidth = 0;\r\n      if (!autoSize.ignoreHeaderText) {\r\n        headerWidth = getColHeaderWidth(columnDef);\r\n      }\r\n      if (headerWidth === 0) {\r\n        headerWidth = (columnDef.width ? columnDef.width\r\n          : (columnDef.maxWidth ? columnDef.maxWidth\r\n            : (columnDef.minWidth ? columnDef.minWidth : 20)\r\n            )\r\n        );\r\n      }\r\n\r\n      if (autoSize.colValueArray) {\r\n        // if an array of values are specified, just pass them in instead of data\r\n        maxColWidth = getColWidth(columnDef, $gridCanvas, autoSize.colValueArray);\r\n        return Math.max(headerWidth, maxColWidth);\r\n      }\r\n\r\n      // select rows to evaluate using rowSelectionMode and rowSelectionCount\r\n      var rows = getData();\r\n      if (rows.getItems) { rows = rows.getItems(); }\r\n\r\n      if (rows.length === 0) { return headerWidth; }\r\n\r\n      var rowSelectionMode = (isInit ? autoSize.rowSelectionModeOnInit : undefined) || autoSize.rowSelectionMode;\r\n\r\n      if (rowSelectionMode === Slick.RowSelectionMode.FirstRow) { rows = rows.slice(0,1); }\r\n      if (rowSelectionMode === Slick.RowSelectionMode.LastRow) { rows = rows.slice(rows.length -1, rows.length); }\r\n      if (rowSelectionMode === Slick.RowSelectionMode.FirstNRows) { rows = rows.slice(0, autoSize.rowSelectionCount); }\r\n\r\n      // now use valueFilterMode to further filter selected rows\r\n      if (autoSize.valueFilterMode === Slick.ValueFilterMode.DeDuplicate) {\r\n        var rowsDict = {};\r\n        for (i = 0, ii = rows.length; i < ii; i++) {\r\n          rowsDict[rows[i][columnDef.field]] = true;\r\n        }\r\n        if (Object.keys) {\r\n          rows = Object.keys(rowsDict);\r\n        } else {\r\n          rows = [];\r\n          for (var i in rowsDict)  rows.push(i);\r\n        }\r\n      }\r\n\r\n      if (autoSize.valueFilterMode === Slick.ValueFilterMode.GetGreatestAndSub) {\r\n        // get greatest abs value in data\r\n        var tempVal, maxVal = 0, maxAbsVal = 0;\r\n        for (i = 0, ii = rows.length; i < ii; i++) {\r\n          tempVal = rows[i][columnDef.field];\r\n          if (Math.abs(tempVal) > maxAbsVal) { maxVal = tempVal; maxAbsVal = Math.abs(tempVal); }\r\n        }\r\n        // now substitute a '9' for all characters (to get widest width) and convert back to a number\r\n        maxVal = '' + maxVal;\r\n        maxVal = Array(maxVal.length + 1).join(\"9\");\r\n        maxVal = +maxVal;\r\n\r\n        rows = [ maxVal ];\r\n      }\r\n\r\n      if (autoSize.valueFilterMode === Slick.ValueFilterMode.GetLongestTextAndSub) {\r\n        // get greatest abs value in data\r\n        var tempVal, maxLen = 0;\r\n        for (i = 0, ii = rows.length; i < ii; i++) {\r\n          tempVal = rows[i][columnDef.field];\r\n          if ((tempVal || '').length > maxLen) { maxLen = tempVal.length; }\r\n        }\r\n        // now substitute a 'c' for all characters\r\n        tempVal = Array(maxLen + 1).join(\"m\");\r\n        widthAdjustRatio = options.autosizeTextAvgToMWidthRatio;\r\n\r\n        rows = [ tempVal ];\r\n      }\r\n\r\n      if (autoSize.valueFilterMode === Slick.ValueFilterMode.GetLongestText) {\r\n        // get greatest abs value in data\r\n        var tempVal = '', maxLen = 0, maxIndex = 0;\r\n        for (i = 0, ii = rows.length; i < ii; i++) {\r\n          tempVal = rows[i][columnDef.field];\r\n          if ((tempVal || '').length > maxLen) { maxLen = tempVal.length; maxIndex = i; }\r\n        }\r\n        // now substitute a 'c' for all characters\r\n        tempVal = rows[maxIndex][columnDef.field];\r\n\r\n        rows = [ tempVal ];\r\n      }\r\n\r\n      maxColWidth = getColWidth(columnDef, $gridCanvas, rows) * widthAdjustRatio;\r\n      return Math.max(headerWidth, maxColWidth);\r\n    }\r\n\r\n    function getColWidth(columnDef, $gridCanvas, data) {\r\n        var colIndex = getColumnIndex(columnDef.id);\r\n\r\n        var $rowEl = $('<div class=\"slick-row ui-widget-content\"></div>');\r\n        var $cellEl = $('<div class=\"slick-cell\"></div>');\r\n        $cellEl.css({\r\n            \"position\": \"absolute\",\r\n            \"visibility\": \"hidden\",\r\n            \"text-overflow\": \"initial\",\r\n            \"white-space\": \"nowrap\"\r\n        });\r\n        $rowEl.append($cellEl);\r\n\r\n        $gridCanvas.append($rowEl);\r\n\r\n        var len, max = 0, text, maxText, formatterResult, maxWidth = 0, val;\r\n\r\n         // use canvas - very fast, but text-only\r\n        if (canvas_context && columnDef.autoSize.widthEvalMode === Slick.WidthEvalMode.CanvasTextSize) {\r\n          canvas_context.font = $cellEl.css(\"font-size\") + \" \" + $cellEl.css(\"font-family\");\r\n          $(data).each(function (index, row) {\r\n              // row is either an array or values or a single value\r\n              val = (Array.isArray(row) ? row[columnDef.field] : row);\r\n              text = '' + val;\r\n              len = text ? canvas_context.measureText(text).width : 0;\r\n              if (len > max) { max = len; maxText = text; }\r\n          });\r\n\r\n          $cellEl.html(maxText);\r\n          len = $cellEl.outerWidth();\r\n\r\n          $rowEl.remove();\r\n          $cellEl = null;\r\n          return len;\r\n        }\r\n\r\n        $(data).each(function (index, row) {\r\n            val = (Array.isArray(row) ? row[columnDef.field] : row);\r\n            if (columnDef.formatterOverride) {\r\n              // use formatterOverride as first preference\r\n              formatterResult = columnDef.formatterOverride(index, colIndex, val, columnDef, row, self);\r\n            } else if (columnDef.formatter) {\r\n              // otherwise, use formatter\r\n              formatterResult = columnDef.formatter(index, colIndex, val, columnDef, row, self);\r\n            } else {\r\n              // otherwise, use plain text\r\n              formatterResult = '' + val;\r\n            }\r\n            applyFormatResultToCellNode(formatterResult, $cellEl[0]);\r\n            len = $cellEl.outerWidth();\r\n            if (len > max) { max = len; }\r\n         });\r\n\r\n        $rowEl.remove();\r\n        $cellEl = null;\r\n        return max;\r\n    }\r\n\r\n    function getColHeaderWidth(columnDef) {\r\n      var width = 0;\r\n      //if (columnDef && (!columnDef.resizable || columnDef._autoCalcWidth === true)) return;\r\n      var headerColElId = getUID() + columnDef.id;\r\n      var headerColEl = document.getElementById(headerColElId);\r\n      var dummyHeaderColElId = headerColElId + \"_\";\r\n      if (headerColEl) {\r\n        // headers have been created, use clone technique\r\n        var clone = headerColEl.cloneNode(true);\r\n        clone.id = dummyHeaderColElId;\r\n        clone.style.cssText = 'position: absolute; visibility: hidden;right: auto;text-overflow: initial;white-space: nowrap;';\r\n        headerColEl.parentNode.insertBefore(clone, headerColEl);\r\n        width = clone.offsetWidth;\r\n        clone.parentNode.removeChild(clone);\r\n      } else {\r\n        // headers have not yet been created, create a new node\r\n        var header = getHeader(columnDef);\r\n        headerColEl = $(\"<div class='ui-state-default slick-header-column' />\")\r\n          .html(\"<span class='slick-column-name'>\" + columnDef.name + \"</span>\")\r\n          .attr(\"id\", dummyHeaderColElId)\r\n          .css({ \"position\": \"absolute\", \"visibility\": \"hidden\", \"right\": \"auto\", \"text-overflow:\": \"initial\", \"white-space\": \"nowrap\" })\r\n          .addClass(columnDef.headerCssClass || \"\")\r\n          .appendTo(header);\r\n        width = headerColEl[0].offsetWidth;\r\n        header[0].removeChild(headerColEl[0]);\r\n      }\r\n      return width;\r\n    }\r\n\r\n    function legacyAutosizeColumns() {\r\n      var i, c,\r\n          widths = [],\r\n          shrinkLeeway = 0,\r\n          total = 0,\r\n          prevTotal,\r\n          availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\r\n\r\n      for (i = 0; i < columns.length; i++) {\r\n        c = columns[i];\r\n        widths.push(c.width);\r\n        total += c.width;\r\n        if (c.resizable) {\r\n          shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\r\n        }\r\n      }\r\n\r\n      // shrink\r\n      prevTotal = total;\r\n      while (total > availWidth && shrinkLeeway) {\r\n        var shrinkProportion = (total - availWidth) / shrinkLeeway;\r\n        for (i = 0; i < columns.length && total > availWidth; i++) {\r\n          c = columns[i];\r\n          var width = widths[i];\r\n          if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\r\n            continue;\r\n          }\r\n          var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\r\n          var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\r\n          shrinkSize = Math.min(shrinkSize, width - absMinWidth);\r\n          total -= shrinkSize;\r\n          shrinkLeeway -= shrinkSize;\r\n          widths[i] -= shrinkSize;\r\n        }\r\n        if (prevTotal <= total) {  // avoid infinite loop\r\n          break;\r\n        }\r\n        prevTotal = total;\r\n      }\r\n\r\n      // grow\r\n      prevTotal = total;\r\n      while (total < availWidth) {\r\n        var growProportion = availWidth / total;\r\n        for (i = 0; i < columns.length && total < availWidth; i++) {\r\n          c = columns[i];\r\n          var currentWidth = widths[i];\r\n          var growSize;\r\n\r\n          if (!c.resizable || c.maxWidth <= currentWidth) {\r\n            growSize = 0;\r\n          } else {\r\n            growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, (c.maxWidth - currentWidth) || 1000000) || 1;\r\n          }\r\n          total += growSize;\r\n          widths[i] += (total <= availWidth ? growSize : 0);\r\n        }\r\n        if (prevTotal >= total) {  // avoid infinite loop\r\n          break;\r\n        }\r\n        prevTotal = total;\r\n      }\r\n\r\n      var reRender = false;\r\n      for (i = 0; i < columns.length; i++) {\r\n        if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\r\n          reRender = true;\r\n        }\r\n        columns[i].width = widths[i];\r\n      }\r\n\r\n      reRenderColumns(reRender);\r\n    }\r\n\r\n    function reRenderColumns(reRender) {\r\n      applyColumnHeaderWidths();\r\n      applyColumnGroupHeaderWidths();\r\n      updateCanvasWidth(true);\r\n\r\n      trigger(self.onAutosizeColumns, { \"columns\": columns});\r\n\r\n      if (reRender) {\r\n        invalidateAllRows();\r\n        render();\r\n      }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n    // General\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    function trigger(evt, args, e) {\r\n      e = e || new Slick.EventData();\r\n      args = args || {};\r\n      args.grid = self;\r\n      return evt.notify(args, e, self);\r\n    }\r\n\r\n    function getEditorLock() {\r\n      return options.editorLock;\r\n    }\r\n\r\n    function getEditController() {\r\n      return editController;\r\n    }\r\n\r\n    function getColumnIndex(id) {\r\n      return columnsById[id];\r\n    }\r\n\r\n    function applyColumnGroupHeaderWidths() {\r\n      if (!treeColumns.hasDepth())\r\n        return;\r\n\r\n      for (var depth = $groupHeadersL.length - 1; depth >= 0; depth--) {\r\n\r\n        var groupColumns = treeColumns.getColumnsInDepth(depth);\r\n\r\n        $().add($groupHeadersL[depth]).add($groupHeadersR[depth]).each(function(i) {\r\n          var $groupHeader = $(this),\r\n            currentColumnIndex = 0;\r\n\r\n          $groupHeader.width(i === 0? getHeadersWidthL(): getHeadersWidthR());\r\n\r\n          $groupHeader.children().each(function() {\r\n            var $groupHeaderColumn = $(this);\r\n\r\n            var m = $(this).data('column');\r\n\r\n            m.width = 0;\r\n\r\n            m.columns.forEach(function() {\r\n              var $headerColumn = $groupHeader.next().children(':eq(' + (currentColumnIndex++) + ')');\r\n              m.width += $headerColumn.outerWidth();\r\n            });\r\n\r\n            $groupHeaderColumn.width(m.width - headerColumnWidthDiff);\r\n\r\n          });\r\n\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n    function applyColumnHeaderWidths() {\r\n      if (!initialized) { return; }\r\n      var h;\r\n\r\n      for (var i = 0, headers = $headers.children(), ii = columns.length; i < ii; i++) {\r\n        h = $(headers[i]);\r\n        if (jQueryNewWidthBehaviour) {\r\n            if (h.outerWidth() !== columns[i].width) {\r\n              h.outerWidth(columns[i].width);\r\n            }\r\n        } else {\r\n            if (h.width() !== columns[i].width - headerColumnWidthDiff) {\r\n              h.width(columns[i].width - headerColumnWidthDiff);\r\n            }\r\n        }\r\n      }\r\n\r\n      updateColumnCaches();\r\n    }\r\n\r\n    function applyColumnWidths() {\r\n      var x = 0, w, rule;\r\n      for (var i = 0; i < columns.length; i++) {\r\n        w = columns[i].width;\r\n\r\n        rule = getColumnCssRules(i);\r\n        rule.left.style.left = x + \"px\";\r\n        rule.right.style.right = (((options.frozenColumn != -1 && i > options.frozenColumn) ? canvasWidthR : canvasWidthL) - x - w) + \"px\";\r\n\r\n        // If this column is frozen, reset the css left value since the\r\n        // column starts in a new viewport.\r\n        if (options.frozenColumn == i) {\r\n          x = 0;\r\n        } else {\r\n          x += columns[i].width;\r\n        }\r\n      }\r\n    }\r\n\r\n    function setSortColumn(columnId, ascending) {\r\n      setSortColumns([{ columnId: columnId, sortAsc: ascending}]);\r\n    }\r\n\r\n    function setSortColumns(cols) {\r\n      sortColumns = cols;\r\n      var numberCols = options.numberedMultiColumnSort && sortColumns.length > 1;\r\n      var headerColumnEls = $headers.children();\r\n      headerColumnEls\r\n        .removeClass(\"slick-header-column-sorted\")\r\n        .find(\".slick-sort-indicator\")\r\n          .removeClass(\"slick-sort-indicator-asc slick-sort-indicator-desc\");\r\n      headerColumnEls\r\n        .find(\".slick-sort-indicator-numbered\")\r\n          .text('');\r\n\r\n      $.each(sortColumns, function(i, col) {\r\n        if (col.sortAsc == null) {\r\n          col.sortAsc = true;\r\n        }\r\n        var columnIndex = getColumnIndex(col.columnId);\r\n        if (columnIndex != null) {\r\n          headerColumnEls.eq(columnIndex)\r\n            .addClass(\"slick-header-column-sorted\")\r\n              .find(\".slick-sort-indicator\")\r\n                .addClass(col.sortAsc ? \"slick-sort-indicator-asc\" : \"slick-sort-indicator-desc\");\r\n          if (numberCols) {\r\n            headerColumnEls.eq(columnIndex)\r\n              .find(\".slick-sort-indicator-numbered\")\r\n                .text(i+1);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    function getSortColumns() {\r\n      return sortColumns;\r\n    }\r\n\r\n    function handleSelectedRangesChanged(e, ranges) {\r\n      var previousSelectedRows = selectedRows.slice(0); // shallow copy previously selected rows for later comparison\r\n      selectedRows = [];\r\n      var hash = {};\r\n      for (var i = 0; i < ranges.length; i++) {\r\n        for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\r\n          if (!hash[j]) {  // prevent duplicates\r\n            selectedRows.push(j);\r\n            hash[j] = {};\r\n          }\r\n          for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\r\n            if (canCellBeSelected(j, k)) {\r\n              hash[j][columns[k].id] = options.selectedCellCssClass;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      setCellCssStyles(options.selectedCellCssClass, hash);\r\n\r\n      if (simpleArrayEquals(previousSelectedRows, selectedRows)) {\r\n        var caller = e && e.detail && e.detail.caller || 'click';\r\n        var newSelectedAdditions = getSelectedRows().filter(function(i) { return previousSelectedRows.indexOf(i) < 0 });\r\n        var newSelectedDeletions = previousSelectedRows.filter(function(i) { return getSelectedRows().indexOf(i) < 0 });\r\n\r\n        trigger(self.onSelectedRowsChanged, {\r\n          rows: getSelectedRows(),\r\n          previousSelectedRows: previousSelectedRows,\r\n          caller : caller,\r\n          changedSelectedRows: newSelectedAdditions,\r\n          changedUnselectedRows: newSelectedDeletions\r\n        }, e);\r\n      }\r\n    }\r\n\r\n    // compare 2 simple arrays (integers or strings only, do not use to compare object arrays)\r\n    function simpleArrayEquals(arr1, arr2) {\r\n      return Array.isArray(arr1) && Array.isArray(arr2) && arr2.sort().toString() !== arr1.sort().toString();\r\n    }\r\n\r\n    function getColumns() {\r\n      return columns;\r\n    }\r\n\r\n    function updateColumnCaches() {\r\n      // Pre-calculate cell boundaries.\r\n      columnPosLeft = [];\r\n      columnPosRight = [];\r\n      var x = 0;\r\n      for (var i = 0, ii = columns.length; i < ii; i++) {\r\n        columnPosLeft[i] = x;\r\n        columnPosRight[i] = x + columns[i].width;\r\n\r\n        if (options.frozenColumn == i) {\r\n          x = 0;\r\n        } else {\r\n          x += columns[i].width;\r\n        }\r\n      }\r\n    }\r\n\r\n    function updateColumnProps() {\r\n      columnsById = {};\r\n      for (var i = 0; i < columns.length; i++) {\r\n        if (columns[i].width) { columns[i].widthRequest = columns[i].width; }\r\n\r\n        var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\r\n        m.autoSize = $.extend({}, columnAutosizeDefaults, m.autoSize);\r\n\r\n        columnsById[m.id] = i;\r\n        if (m.minWidth && m.width < m.minWidth) {\r\n          m.width = m.minWidth;\r\n        }\r\n        if (m.maxWidth && m.width > m.maxWidth) {\r\n          m.width = m.maxWidth;\r\n        }\r\n        if (!m.resizable) {\r\n          // there is difference between user resizable and autoWidth resizable\r\n          //m.autoSize.autosizeMode = Slick.ColAutosizeMode.Locked;\r\n        }\r\n      }\r\n    }\r\n\r\n    function setColumns(columnDefinitions) {\r\n      trigger(self.onBeforeSetColumns, { previousColumns: columns, newColumns: columnDefinitions, grid: self });\r\n\r\n      var _treeColumns = new Slick.TreeColumns(columnDefinitions);\r\n      if (_treeColumns.hasDepth()) {\r\n        treeColumns = _treeColumns;\r\n        columns = treeColumns.extractColumns();\r\n      } else {\r\n        columns = columnDefinitions;\r\n      }\r\n\r\n      updateColumnProps();\r\n      updateColumnCaches();\r\n\r\n      if (initialized) {\r\n        setPaneVisibility();\r\n        setOverflow();\r\n\r\n        invalidateAllRows();\r\n        createColumnHeaders();\r\n        createColumnGroupHeaders();\r\n        createColumnFooter();\r\n        removeCssRules();\r\n        createCssRules();\r\n        resizeCanvas();\r\n        updateCanvasWidth();\r\n        applyColumnHeaderWidths();\r\n        applyColumnWidths();\r\n        handleScroll();\r\n      }\r\n    }\r\n\r\n    function getOptions() {\r\n      return options;\r\n    }\r\n\r\n    function setOptions(args, suppressRender, suppressColumnSet, suppressSetOverflow) {\r\n      if (!getEditorLock().commitCurrentEdit()) {\r\n        return;\r\n      }\r\n\r\n      makeActiveCellNormal();\r\n\r\n      if (args.showColumnHeader !== undefined) {\r\n        setColumnHeaderVisibility(args.showColumnHeader);\r\n      }\r\n\r\n      if (options.enableAddRow !== args.enableAddRow) {\r\n        invalidateRow(getDataLength());\r\n      }\r\n\r\n      var originalOptions = $.extend(true, {}, options);\r\n      options = $.extend(options, args);\r\n      trigger(self.onSetOptions, { \"optionsBefore\": originalOptions, \"optionsAfter\": options });\r\n\r\n      validateAndEnforceOptions();\r\n\r\n      $viewport.css(\"overflow-y\", options.autoHeight ? \"hidden\" : \"auto\");\r\n      if (!suppressRender) {\r\n        render();\r\n      }\r\n\r\n      setFrozenOptions();\r\n      setScroller();\r\n      if (!suppressSetOverflow) {\r\n        setOverflow();\r\n      }\r\n\r\n      if (!suppressColumnSet) {\r\n        setColumns(treeColumns.extractColumns());\r\n      }\r\n\r\n      if (options.enableMouseWheelScrollHandler && $viewport && jQuery.fn.mousewheel) {\r\n        var viewportEvents = $._data($viewport[0], \"events\");\r\n        if (!viewportEvents || !viewportEvents.mousewheel) {\r\n          $viewport.on(\"mousewheel\", handleMouseWheel);\r\n        }\r\n      } else if (options.enableMouseWheelScrollHandler === false) {\r\n        $viewport.off(\"mousewheel\"); // remove scroll handler when option is disable\r\n      }\r\n    }\r\n\r\n    function validateAndEnforceOptions() {\r\n      if (options.autoHeight) {\r\n        options.leaveSpaceForNewRows = false;\r\n      }\r\n      if (options.forceFitColumns) {\r\n        options.autosizeColsMode = Slick.GridAutosizeColsMode.LegacyForceFit;\r\n        console.log(\"forceFitColumns option is deprecated - use autosizeColsMode\");\r\n      }\r\n    }\r\n\r\n    function setData(newData, scrollToTop) {\r\n      data = newData;\r\n      invalidateAllRows();\r\n      updateRowCount();\r\n      if (scrollToTop) {\r\n        scrollTo(0);\r\n      }\r\n    }\r\n\r\n    function getData() {\r\n      return data;\r\n    }\r\n\r\n    function getDataLength() {\r\n      if (data.getLength) {\r\n        return data.getLength();\r\n      } else {\r\n        return data && data.length || 0;\r\n      }\r\n    }\r\n\r\n    function getDataLengthIncludingAddNew() {\r\n      return getDataLength() + (!options.enableAddRow ? 0\r\n        : (!pagingActive || pagingIsLastPage ? 1 : 0)\r\n      );\r\n    }\r\n\r\n    function getDataItem(i) {\r\n      if (data.getItem) {\r\n        return data.getItem(i);\r\n      } else {\r\n        return data[i];\r\n      }\r\n    }\r\n\r\n    function getTopPanel() {\r\n      return $topPanel[0];\r\n    }\r\n\r\n    function setTopPanelVisibility(visible, animate) {\r\n      var animated = (animate === false) ? false : true;\r\n\r\n      if (options.showTopPanel != visible) {\r\n        options.showTopPanel = visible;\r\n        if (visible) {\r\n          if (animated) {\r\n            $topPanelScroller.slideDown(\"fast\", resizeCanvas);\r\n          } else {\r\n            $topPanelScroller.show();\r\n            resizeCanvas();\r\n          }\r\n        } else {\r\n          if (animated) {\r\n            $topPanelScroller.slideUp(\"fast\", resizeCanvas);\r\n          } else {\r\n            $topPanelScroller.hide();\r\n            resizeCanvas();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function setHeaderRowVisibility(visible, animate) {\r\n      var animated = (animate === false) ? false : true;\r\n\r\n      if (options.showHeaderRow != visible) {\r\n        options.showHeaderRow = visible;\r\n        if (visible) {\r\n          if (animated) {\r\n            $headerRowScroller.slideDown(\"fast\", resizeCanvas);\r\n          } else {\r\n            $headerRowScroller.show();\r\n            resizeCanvas();\r\n          }\r\n        } else {\r\n          if (animated) {\r\n            $headerRowScroller.slideUp(\"fast\", resizeCanvas);\r\n          } else {\r\n            $headerRowScroller.hide();\r\n            resizeCanvas();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function setColumnHeaderVisibility(visible, animate) {\r\n      if (options.showColumnHeader != visible) {\r\n        options.showColumnHeader = visible;\r\n        if (visible) {\r\n          if (animate) {\r\n            $headerScroller.slideDown(\"fast\", resizeCanvas);\r\n          } else {\r\n            $headerScroller.show();\r\n            resizeCanvas();\r\n          }\r\n        } else {\r\n          if (animate) {\r\n            $headerScroller.slideUp(\"fast\", resizeCanvas);\r\n          } else {\r\n            $headerScroller.hide();\r\n            resizeCanvas();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function setFooterRowVisibility(visible, animate) {\r\n      var animated = (animate === false) ? false : true;\r\n\r\n      if (options.showFooterRow != visible) {\r\n        options.showFooterRow = visible;\r\n        if (visible) {\r\n          if (animated) {\r\n            $footerRowScroller.slideDown(\"fast\", resizeCanvas);\r\n          } else {\r\n            $footerRowScroller.show();\r\n            resizeCanvas();\r\n          }\r\n        } else {\r\n          if (animated) {\r\n            $footerRowScroller.slideUp(\"fast\", resizeCanvas);\r\n          } else {\r\n            $footerRowScroller.hide();\r\n            resizeCanvas();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function setPreHeaderPanelVisibility(visible, animate) {\r\n      var animated = (animate === false) ? false : true;\r\n\r\n      if (options.showPreHeaderPanel != visible) {\r\n        options.showPreHeaderPanel = visible;\r\n        if (visible) {\r\n          if (animated) {\r\n            $preHeaderPanelScroller.slideDown(\"fast\", resizeCanvas);\r\n            $preHeaderPanelScrollerR.slideDown(\"fast\", resizeCanvas);\r\n          } else {\r\n            $preHeaderPanelScroller.show();\r\n            $preHeaderPanelScrollerR.show();\r\n            resizeCanvas();\r\n          }\r\n        } else {\r\n          if (animated) {\r\n            $preHeaderPanelScroller.slideUp(\"fast\", resizeCanvas);\r\n            $preHeaderPanelScrollerR.slideUp(\"fast\", resizeCanvas);\r\n          } else {\r\n            $preHeaderPanelScroller.hide();\r\n            $preHeaderPanelScrollerR.hide();\r\n            resizeCanvas();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function getContainerNode() {\r\n      return $container.get(0);\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Rendering / Scrolling\r\n\r\n    function getRowTop(row) {\r\n      return options.rowHeight * row - offset;\r\n    }\r\n\r\n    function getRowFromPosition(y) {\r\n      return Math.floor((y + offset) / options.rowHeight);\r\n    }\r\n\r\n    function scrollTo(y) {\r\n      y = Math.max(y, 0);\r\n      y = Math.min(y, th - $viewportScrollContainerY.height() + ((viewportHasHScroll || hasFrozenColumns()) ? scrollbarDimensions.height : 0));\r\n\r\n      var oldOffset = offset;\r\n\r\n      page = Math.min(n - 1, Math.floor(y / ph));\r\n      offset = Math.round(page * cj);\r\n      var newScrollTop = y - offset;\r\n\r\n      if (offset != oldOffset) {\r\n        var range = getVisibleRange(newScrollTop);\r\n        cleanupRows(range);\r\n        updateRowPositions();\r\n      }\r\n\r\n      if (prevScrollTop != newScrollTop) {\r\n        vScrollDir = (prevScrollTop + oldOffset < newScrollTop + offset) ? 1 : -1;\r\n        lastRenderedScrollTop = ( scrollTop = prevScrollTop = newScrollTop );\r\n\r\n        if (hasFrozenColumns()) {\r\n          $viewportTopL[0].scrollTop = newScrollTop;\r\n        }\r\n\r\n        if (hasFrozenRows) {\r\n          $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\r\n        }\r\n\r\n        $viewportScrollContainerY[0].scrollTop = newScrollTop;\r\n\r\n        trigger(self.onViewportChanged, {});\r\n      }\r\n    }\r\n\r\n    function defaultFormatter(row, cell, value, columnDef, dataContext, grid) {\r\n      if (value == null) {\r\n        return \"\";\r\n      } else {\r\n        return (value + \"\").replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\");\r\n      }\r\n    }\r\n\r\n    function getFormatter(row, column) {\r\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\r\n\r\n      // look up by id, then index\r\n      var columnOverrides = rowMetadata &&\r\n          rowMetadata.columns &&\r\n          (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\r\n\r\n      return (columnOverrides && columnOverrides.formatter) ||\r\n          (rowMetadata && rowMetadata.formatter) ||\r\n          column.formatter ||\r\n          (options.formatterFactory && options.formatterFactory.getFormatter(column)) ||\r\n          options.defaultFormatter;\r\n    }\r\n\r\n    function getEditor(row, cell) {\r\n      var column = columns[cell];\r\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\r\n      var columnMetadata = rowMetadata && rowMetadata.columns;\r\n\r\n      if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\r\n        return columnMetadata[column.id].editor;\r\n      }\r\n      if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\r\n        return columnMetadata[cell].editor;\r\n      }\r\n\r\n      return column.editor || (options.editorFactory && options.editorFactory.getEditor(column));\r\n    }\r\n\r\n    function getDataItemValueForColumn(item, columnDef) {\r\n      if (options.dataItemColumnValueExtractor) {\r\n        return options.dataItemColumnValueExtractor(item, columnDef);\r\n      }\r\n      return item[columnDef.field];\r\n    }\r\n\r\n    function appendRowHtml(stringArrayL, stringArrayR, row, range, dataLength) {\r\n      var d = getDataItem(row);\r\n      var dataLoading = row < dataLength && !d;\r\n      var rowCss = \"slick-row\" +\r\n          (hasFrozenRows && row <= options.frozenRow? ' frozen': '') +\r\n          (dataLoading ? \" loading\" : \"\") +\r\n          (row === activeRow && options.showCellSelection ? \" active\" : \"\") +\r\n          (row % 2 == 1 ? \" odd\" : \" even\");\r\n\r\n      if (!d) {\r\n        rowCss += \" \" + options.addNewRowCssClass;\r\n      }\r\n\r\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\r\n\r\n      if (metadata && metadata.cssClasses) {\r\n        rowCss += \" \" + metadata.cssClasses;\r\n      }\r\n\r\n      var frozenRowOffset = getFrozenRowOffset(row);\r\n\r\n      var rowHtml = \"<div class='ui-widget-content \" + rowCss + \"' style='top:\"\r\n        + (getRowTop(row) - frozenRowOffset )\r\n        + \"px'>\";\r\n\r\n      stringArrayL.push(rowHtml);\r\n\r\n      if (hasFrozenColumns()) {\r\n        stringArrayR.push(rowHtml);\r\n      }\r\n\r\n      var colspan, m;\r\n      for (var i = 0, ii = columns.length; i < ii; i++) {\r\n        m = columns[i];\r\n        colspan = 1;\r\n        if (metadata && metadata.columns) {\r\n          var columnData = metadata.columns[m.id] || metadata.columns[i];\r\n          colspan = (columnData && columnData.colspan) || 1;\r\n          if (colspan === \"*\") {\r\n            colspan = ii - i;\r\n          }\r\n        }\r\n\r\n        // Do not render cells outside of the viewport.\r\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\r\n          if (!m.alwaysRenderColumn && columnPosLeft[i] > range.rightPx) {\r\n            // All columns to the right are outside the range.\r\n            break;\r\n          }\r\n\r\n          if (hasFrozenColumns() && ( i > options.frozenColumn )) {\r\n            appendCellHtml(stringArrayR, row, i, colspan, d);\r\n          } else {\r\n            appendCellHtml(stringArrayL, row, i, colspan, d);\r\n          }\r\n        } else if (m.alwaysRenderColumn || (hasFrozenColumns() && i <= options.frozenColumn)) {\r\n          appendCellHtml(stringArrayL, row, i, colspan, d);\r\n        }\r\n\r\n        if (colspan > 1) {\r\n          i += (colspan - 1);\r\n        }\r\n      }\r\n\r\n      stringArrayL.push(\"</div>\");\r\n\r\n      if (hasFrozenColumns()) {\r\n        stringArrayR.push(\"</div>\");\r\n      }\r\n    }\r\n\r\n    function appendCellHtml(stringArray, row, cell, colspan, item) {\r\n      // stringArray: stringBuilder containing the HTML parts\r\n      // row, cell: row and column index\r\n      // colspan: HTML colspan\r\n      // item: grid data for row\r\n\r\n      var m = columns[cell];\r\n      var cellCss = \"slick-cell l\" + cell + \" r\" + Math.min(columns.length - 1, cell + colspan - 1) +\r\n          (m.cssClass ? \" \" + m.cssClass : \"\");\r\n\r\n      if (hasFrozenColumns() && cell <= options.frozenColumn) {\r\n        cellCss += (\" frozen\");\r\n      }\r\n\r\n      if (row === activeRow && cell === activeCell && options.showCellSelection) {\r\n        cellCss += (\" active\");\r\n      }\r\n\r\n      // TODO:  merge them together in the setter\r\n      for (var key in cellCssClasses) {\r\n        if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\r\n          cellCss += (\" \" + cellCssClasses[key][row][m.id]);\r\n        }\r\n      }\r\n\r\n      var value = null, formatterResult = '';\r\n      if (item) {\r\n        value = getDataItemValueForColumn(item, m);\r\n        formatterResult =  getFormatter(row, m)(row, cell, value, m, item, self);\r\n        if (formatterResult === null || formatterResult === undefined) { formatterResult = ''; }\r\n      }\r\n\r\n      // get addl css class names from object type formatter return and from string type return of onBeforeAppendCell\r\n      var addlCssClasses = trigger(self.onBeforeAppendCell, { row: row, cell: cell, value: value, dataContext: item }) || '';\r\n      addlCssClasses += (formatterResult && formatterResult.addClasses ? (addlCssClasses ? ' ' : '') + formatterResult.addClasses : '');\r\n      var toolTip = formatterResult && formatterResult.toolTip ? \"title='\" + formatterResult.toolTip + \"'\" : '';\r\n\r\n      var customAttrStr = '';\r\n      if(m.hasOwnProperty('cellAttrs') && m.cellAttrs instanceof Object) {\r\n        for (var key in m.cellAttrs) {\r\n          if (m.cellAttrs.hasOwnProperty(key)) {\r\n            customAttrStr += ' ' + key + '=\"' + m.cellAttrs[key] + '\" ';\r\n          }\r\n        }\r\n      }\r\n\r\n      stringArray.push(\"<div class='\" + cellCss + (addlCssClasses ? ' ' + addlCssClasses : '') + \"' \" + toolTip + customAttrStr + \">\");\r\n\r\n      // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\r\n      if (item) {\r\n        stringArray.push(Object.prototype.toString.call(formatterResult)  !== '[object Object]' ? formatterResult : formatterResult.text);\r\n      }\r\n\r\n      stringArray.push(\"</div>\");\r\n\r\n      rowsCache[row].cellRenderQueue.push(cell);\r\n      rowsCache[row].cellColSpans[cell] = colspan;\r\n    }\r\n\r\n\r\n    function cleanupRows(rangeToKeep) {\r\n      for (var i in rowsCache) {\r\n        var removeFrozenRow = true;\r\n\r\n        if (hasFrozenRows\r\n          && ( ( options.frozenBottom && i >= actualFrozenRow ) // Frozen bottom rows\r\n            || ( !options.frozenBottom && i <= actualFrozenRow ) // Frozen top rows\r\n            )\r\n          ) {\r\n          removeFrozenRow = false;\r\n        }\r\n\r\n        if (( ( i = parseInt(i, 10)) !== activeRow )\r\n          && ( i < rangeToKeep.top || i > rangeToKeep.bottom )\r\n          && ( removeFrozenRow )\r\n          ) {\r\n          removeRowFromCache(i);\r\n        }\r\n      }\r\n      if (options.enableAsyncPostRenderCleanup) { startPostProcessingCleanup(); }\r\n    }\r\n\r\n    function invalidate() {\r\n      updateRowCount();\r\n      invalidateAllRows();\r\n      render();\r\n    }\r\n\r\n    function invalidateAllRows() {\r\n      if (currentEditor) {\r\n        makeActiveCellNormal();\r\n      }\r\n      for (var row in rowsCache) {\r\n        removeRowFromCache(row);\r\n      }\r\n      if (options.enableAsyncPostRenderCleanup) { startPostProcessingCleanup(); }\r\n    }\r\n\r\n    function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx) {\r\n      postProcessgroupId++;\r\n\r\n      // store and detach node for later async cleanup\r\n      for (var columnIdx in postProcessedRow) {\r\n        if (postProcessedRow.hasOwnProperty(columnIdx)) {\r\n          postProcessedCleanupQueue.push({\r\n            actionType: 'C',\r\n            groupId: postProcessgroupId,\r\n            node: cacheEntry.cellNodesByColumnIdx[ columnIdx | 0],\r\n            columnIdx: columnIdx | 0,\r\n            rowIdx: rowIdx\r\n          });\r\n        }\r\n      }\r\n      postProcessedCleanupQueue.push({\r\n        actionType: 'R',\r\n        groupId: postProcessgroupId,\r\n        node: cacheEntry.rowNode\r\n      });\r\n      cacheEntry.rowNode.detach();\r\n    }\r\n\r\n    function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx) {\r\n      postProcessedCleanupQueue.push({\r\n        actionType: 'C',\r\n        groupId: postProcessgroupId,\r\n        node: cellnode,\r\n        columnIdx: columnIdx,\r\n        rowIdx: rowIdx\r\n      });\r\n      $(cellnode).detach();\r\n    }\r\n\r\n    function removeRowFromCache(row) {\r\n      var cacheEntry = rowsCache[row];\r\n      if (!cacheEntry) {\r\n        return;\r\n      }\r\n\r\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]) {\r\n        queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\r\n      } else {\r\n        cacheEntry.rowNode.each(function() {\r\n          if (this.parentElement) {\r\n            this.parentElement.removeChild(this);\r\n          }\r\n        });\r\n      }\r\n\r\n      delete rowsCache[row];\r\n      delete postProcessedRows[row];\r\n      renderedRows--;\r\n      counter_rows_removed++;\r\n    }\r\n\r\n    function invalidateRows(rows) {\r\n      var i, rl;\r\n      if (!rows || !rows.length) {\r\n        return;\r\n      }\r\n      vScrollDir = 0;\r\n      rl = rows.length;\r\n      for (i = 0;  i < rl; i++) {\r\n        if (currentEditor && activeRow === rows[i]) {\r\n          makeActiveCellNormal();\r\n        }\r\n        if (rowsCache[rows[i]]) {\r\n          removeRowFromCache(rows[i]);\r\n        }\r\n      }\r\n      if (options.enableAsyncPostRenderCleanup) { startPostProcessingCleanup(); }\r\n    }\r\n\r\n    function invalidateRow(row) {\r\n      if (!row && row !== 0) { return; }\r\n      invalidateRows([row]);\r\n    }\r\n\r\n    function applyFormatResultToCellNode(formatterResult, cellNode, suppressRemove) {\r\n        if (formatterResult === null || formatterResult === undefined) { formatterResult = ''; }\r\n        if (Object.prototype.toString.call(formatterResult)  !== '[object Object]') {\r\n          cellNode.innerHTML = sanitizeHtmlString(formatterResult);\r\n          return;\r\n        }\r\n        cellNode.innerHTML = sanitizeHtmlString(formatterResult.text);\r\n        if (formatterResult.removeClasses && !suppressRemove) {\r\n          $(cellNode).removeClass(formatterResult.removeClasses);\r\n        }\r\n        if (formatterResult.addClasses) {\r\n          $(cellNode).addClass(formatterResult.addClasses);\r\n        }\r\n        if (formatterResult.toolTip) {\r\n          $(cellNode).attr(\"title\", formatterResult.toolTip);\r\n        }\r\n    }\r\n\r\n    function updateCell(row, cell) {\r\n      var cellNode = getCellNode(row, cell);\r\n      if (!cellNode) {\r\n        return;\r\n      }\r\n\r\n      var m = columns[cell], d = getDataItem(row);\r\n      if (currentEditor && activeRow === row && activeCell === cell) {\r\n        currentEditor.loadValue(d);\r\n      } else {\r\n        var formatterResult =  d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d, self) : \"\";\r\n        applyFormatResultToCellNode(formatterResult, cellNode);\r\n        invalidatePostProcessingResults(row);\r\n      }\r\n    }\r\n\r\n    function updateRow(row) {\r\n      var cacheEntry = rowsCache[row];\r\n      if (!cacheEntry) {\r\n        return;\r\n      }\r\n\r\n      ensureCellNodesInRowsCache(row);\r\n\r\n      var formatterResult, d = getDataItem(row);\r\n\r\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\r\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\r\n          continue;\r\n        }\r\n\r\n        columnIdx = columnIdx | 0;\r\n        var m = columns[columnIdx],\r\n            node = cacheEntry.cellNodesByColumnIdx[columnIdx][0];\r\n\r\n        if (row === activeRow && columnIdx === activeCell && currentEditor) {\r\n          currentEditor.loadValue(d);\r\n        } else if (d) {\r\n          formatterResult =  getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d, self);\r\n          applyFormatResultToCellNode(formatterResult, node);\r\n        } else {\r\n          node.innerHTML = \"\";\r\n        }\r\n      }\r\n\r\n      invalidatePostProcessingResults(row);\r\n    }\r\n\r\n    function getViewportHeight() {\r\n      if (!options.autoHeight || options.frozenColumn != -1) {\r\n        topPanelH = ( options.showTopPanel ) ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0;\r\n        headerRowH = ( options.showHeaderRow ) ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0;\r\n        footerRowH = ( options.showFooterRow ) ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0;\r\n      }\r\n      if (options.autoHeight) {\r\n        var fullHeight = $paneHeaderL.outerHeight();\r\n        fullHeight += ( options.showHeaderRow ) ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0;\r\n        fullHeight += ( options.showFooterRow ) ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0;\r\n        fullHeight += (getCanvasWidth() > viewportW) ? scrollbarDimensions.height : 0;\r\n\r\n        viewportH = options.rowHeight\r\n          * getDataLengthIncludingAddNew()\r\n          + ( ( options.frozenColumn == -1 ) ? fullHeight : 0 );\r\n      } else {\r\n        var columnNamesH = ( options.showColumnHeader ) ? parseFloat($.css($headerScroller[0], \"height\"))\r\n          + getVBoxDelta($headerScroller) : 0;\r\n        var preHeaderH = (options.createPreHeaderPanel && options.showPreHeaderPanel) ? options.preHeaderPanelHeight + getVBoxDelta($preHeaderPanelScroller) : 0;\r\n\r\n        viewportH = parseFloat($.css($container[0], \"height\", true))\r\n          - parseFloat($.css($container[0], \"paddingTop\", true))\r\n          - parseFloat($.css($container[0], \"paddingBottom\", true))\r\n          - columnNamesH\r\n          - topPanelH\r\n          - headerRowH\r\n          - footerRowH\r\n          - preHeaderH;\r\n      }\r\n\r\n      numVisibleRows = Math.ceil(viewportH / options.rowHeight);\r\n      return viewportH;\r\n    }\r\n\r\n    function getViewportWidth() {\r\n      viewportW = parseFloat($container.width());\r\n    }\r\n\r\n    function resizeCanvas() {\r\n      if (!initialized) { return; }\r\n      paneTopH = 0;\r\n      paneBottomH = 0;\r\n      viewportTopH = 0;\r\n      viewportBottomH = 0;\r\n\r\n      getViewportWidth();\r\n      getViewportHeight();\r\n\r\n      // Account for Frozen Rows\r\n      if (hasFrozenRows) {\r\n        if (options.frozenBottom) {\r\n          paneTopH = viewportH - frozenRowsHeight - scrollbarDimensions.height;\r\n          paneBottomH = frozenRowsHeight + scrollbarDimensions.height;\r\n        } else {\r\n          paneTopH = frozenRowsHeight;\r\n          paneBottomH = viewportH - frozenRowsHeight;\r\n        }\r\n      } else {\r\n        paneTopH = viewportH;\r\n      }\r\n\r\n      // The top pane includes the top panel and the header row\r\n      paneTopH += topPanelH + headerRowH + footerRowH;\r\n\r\n      if (hasFrozenColumns() && options.autoHeight) {\r\n        paneTopH += scrollbarDimensions.height;\r\n      }\r\n\r\n      // The top viewport does not contain the top panel or header row\r\n      viewportTopH = paneTopH - topPanelH - headerRowH - footerRowH;\r\n\r\n      if (options.autoHeight) {\r\n        if (hasFrozenColumns()) {\r\n          $container.height(\r\n              paneTopH\r\n              + parseFloat($.css($headerScrollerL[0], \"height\"))\r\n          );\r\n        }\r\n\r\n        $paneTopL.css('position', 'relative');\r\n      }\r\n\r\n      $paneTopL.css({\r\n        'top': $paneHeaderL.height() || (options.showHeaderRow ? options.headerRowHeight : 0) + (options.showPreHeaderPanel ? options.preHeaderPanelHeight : 0),\r\n        'height': paneTopH\r\n      });\r\n\r\n      var paneBottomTop = $paneTopL.position().top\r\n        + paneTopH;\r\n\r\n      if (!options.autoHeight) {\r\n        $viewportTopL.height(viewportTopH);\r\n      }\r\n\r\n      if (hasFrozenColumns()) {\r\n        $paneTopR.css({\r\n          'top': $paneHeaderL.height(), 'height': paneTopH\r\n        });\r\n\r\n        $viewportTopR.height(viewportTopH);\r\n\r\n        if (hasFrozenRows) {\r\n          $paneBottomL.css({\r\n            'top': paneBottomTop, 'height': paneBottomH\r\n          });\r\n\r\n          $paneBottomR.css({\r\n            'top': paneBottomTop, 'height': paneBottomH\r\n          });\r\n\r\n          $viewportBottomR.height(paneBottomH);\r\n        }\r\n      } else {\r\n        if (hasFrozenRows) {\r\n          $paneBottomL.css({\r\n            'width': '100%', 'height': paneBottomH\r\n          });\r\n\r\n          $paneBottomL.css('top', paneBottomTop);\r\n        }\r\n      }\r\n\r\n      if (hasFrozenRows) {\r\n        $viewportBottomL.height(paneBottomH);\r\n\r\n        if (options.frozenBottom) {\r\n          $canvasBottomL.height(frozenRowsHeight);\r\n\r\n          if (hasFrozenColumns()) {\r\n            $canvasBottomR.height(frozenRowsHeight);\r\n          }\r\n        } else {\r\n          $canvasTopL.height(frozenRowsHeight);\r\n\r\n          if (hasFrozenColumns()) {\r\n            $canvasTopR.height(frozenRowsHeight);\r\n          }\r\n        }\r\n      } else {\r\n        $viewportTopR.height(viewportTopH);\r\n      }\r\n\r\n      if (!scrollbarDimensions || !scrollbarDimensions.width) {\r\n        scrollbarDimensions = measureScrollbar();\r\n      }\r\n\r\n      if (options.autosizeColsMode === Slick.GridAutosizeColsMode.LegacyForceFit) {\r\n        autosizeColumns();\r\n      }\r\n\r\n      updateRowCount();\r\n      handleScroll();\r\n      // Since the width has changed, force the render() to reevaluate virtually rendered cells.\r\n      lastRenderedScrollLeft = -1;\r\n      render();\r\n    }\r\n\r\n    function updatePagingStatusFromView( pagingInfo ) {\r\n        pagingActive = (pagingInfo.pageSize !== 0);\r\n        pagingIsLastPage = (pagingInfo.pageNum == pagingInfo.totalPages - 1);\r\n    }\r\n\r\n    function updateRowCount() {\r\n      if (!initialized) { return; }\r\n\r\n      var dataLength = getDataLength();\r\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\r\n      var numberOfRows = 0;\r\n      var oldH = ( hasFrozenRows && !options.frozenBottom ) ? $canvasBottomL.height() : $canvasTopL.height();\r\n\r\n      if (hasFrozenRows ) {\r\n        var numberOfRows = getDataLength() - options.frozenRow;\r\n      } else {\r\n        var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\r\n      }\r\n\r\n      var tempViewportH = $viewportScrollContainerY.height();\r\n      var oldViewportHasVScroll = viewportHasVScroll;\r\n      // with autoHeight, we do not need to accommodate the vertical scroll bar\r\n      viewportHasVScroll = options.alwaysShowVerticalScroll || !options.autoHeight && (numberOfRows * options.rowHeight > tempViewportH);\r\n\r\n      makeActiveCellNormal();\r\n\r\n      // remove the rows that are now outside of the data range\r\n      // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\r\n      var r1 = dataLength - 1;\r\n      for (var i in rowsCache) {\r\n        if (i > r1) {\r\n          removeRowFromCache(i);\r\n        }\r\n      }\r\n      if (options.enableAsyncPostRenderCleanup) { startPostProcessingCleanup(); }\r\n\r\n      if (activeCellNode && activeRow > r1) {\r\n        resetActiveCell();\r\n      }\r\n\r\n      var oldH = h;\r\n      if (options.autoHeight) {\r\n        h =  options.rowHeight * numberOfRows;\r\n      } else {\r\n        th = Math.max(options.rowHeight * numberOfRows, tempViewportH - scrollbarDimensions.height);\r\n        if (th < maxSupportedCssHeight) {\r\n          // just one page\r\n          h = ph = th;\r\n          n = 1;\r\n          cj = 0;\r\n        } else {\r\n          // break into pages\r\n          h = maxSupportedCssHeight;\r\n          ph = h / 100;\r\n          n = Math.floor(th / ph);\r\n          cj = (th - h) / (n - 1);\r\n        }\r\n      }\r\n\r\n      if (h !== oldH) {\r\n        if (hasFrozenRows && !options.frozenBottom) {\r\n          $canvasBottomL.css(\"height\", h);\r\n\r\n          if (hasFrozenColumns()) {\r\n            $canvasBottomR.css(\"height\", h);\r\n          }\r\n        } else {\r\n          $canvasTopL.css(\"height\", h);\r\n          $canvasTopR.css(\"height\", h);\r\n        }\r\n\r\n        scrollTop = $viewportScrollContainerY[0].scrollTop;\r\n      }\r\n\r\n      var oldScrollTopInRange = (scrollTop + offset <= th - tempViewportH);\r\n\r\n      if (th == 0 || scrollTop == 0) {\r\n        page = offset = 0;\r\n      } else if (oldScrollTopInRange) {\r\n        // maintain virtual position\r\n        scrollTo(scrollTop + offset);\r\n      } else {\r\n        // scroll to bottom\r\n        scrollTo(th - tempViewportH);\r\n      }\r\n\r\n      if (h != oldH && options.autoHeight) {\r\n        resizeCanvas();\r\n      }\r\n\r\n      if (options.autosizeColsMode === Slick.GridAutosizeColsMode.LegacyForceFit && oldViewportHasVScroll != viewportHasVScroll) {\r\n        autosizeColumns();\r\n      }\r\n      updateCanvasWidth(false);\r\n    }\r\n\r\n    function getVisibleRange(viewportTop, viewportLeft) {\r\n      if (viewportTop == null) {\r\n        viewportTop = scrollTop;\r\n      }\r\n      if (viewportLeft == null) {\r\n        viewportLeft = scrollLeft;\r\n      }\r\n\r\n      return {\r\n        top: getRowFromPosition(viewportTop),\r\n        bottom: getRowFromPosition(viewportTop + viewportH) + 1,\r\n        leftPx: viewportLeft,\r\n        rightPx: viewportLeft + viewportW\r\n      };\r\n    }\r\n\r\n    function getRenderedRange(viewportTop, viewportLeft) {\r\n      var range = getVisibleRange(viewportTop, viewportLeft);\r\n      var buffer = Math.round(viewportH / options.rowHeight);\r\n      var minBuffer = options.minRowBuffer;\r\n\r\n      if (vScrollDir == -1) {\r\n        range.top -= buffer;\r\n        range.bottom += minBuffer;\r\n      } else if (vScrollDir == 1) {\r\n        range.top -= minBuffer;\r\n        range.bottom += buffer;\r\n      } else {\r\n        range.top -= minBuffer;\r\n        range.bottom += minBuffer;\r\n      }\r\n\r\n      range.top = Math.max(0, range.top);\r\n      range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\r\n\r\n      range.leftPx -= viewportW;\r\n      range.rightPx += viewportW;\r\n\r\n      range.leftPx = Math.max(0, range.leftPx);\r\n      range.rightPx = Math.min(canvasWidth, range.rightPx);\r\n\r\n      return range;\r\n    }\r\n\r\n    function ensureCellNodesInRowsCache(row) {\r\n      var cacheEntry = rowsCache[row];\r\n      if (cacheEntry) {\r\n        if (cacheEntry.cellRenderQueue.length) {\r\n          var $lastNode = cacheEntry.rowNode.children().last();\r\n          while (cacheEntry.cellRenderQueue.length) {\r\n            var columnIdx = cacheEntry.cellRenderQueue.pop();\r\n\r\n            cacheEntry.cellNodesByColumnIdx[columnIdx] = $lastNode;\r\n            $lastNode = $lastNode.prev();\r\n\r\n            // Hack to retrieve the frozen columns because\r\n            if ($lastNode.length === 0) {\r\n              $lastNode = $(cacheEntry.rowNode[0]).children().last();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function cleanUpCells(range, row) {\r\n      // Ignore frozen rows\r\n      if (hasFrozenRows\r\n        && ( ( options.frozenBottom && row > actualFrozenRow ) // Frozen bottom rows\r\n          || ( row <= actualFrozenRow )                     // Frozen top rows\r\n          )\r\n        ) {\r\n        return;\r\n      }\r\n\r\n      var totalCellsRemoved = 0;\r\n      var cacheEntry = rowsCache[row];\r\n\r\n      // Remove cells outside the range.\r\n      var cellsToRemove = [];\r\n      for (var i in cacheEntry.cellNodesByColumnIdx) {\r\n        // I really hate it when people mess with Array.prototype.\r\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\r\n          continue;\r\n        }\r\n\r\n        // This is a string, so it needs to be cast back to a number.\r\n        i = i | 0;\r\n\r\n        // Ignore frozen columns\r\n        if (i <= options.frozenColumn) {\r\n          continue;\r\n        }\r\n\r\n        // Ignore alwaysRenderedColumns\r\n        if (Array.isArray(columns) && columns[i] && columns[i].alwaysRenderColumn){\r\n          continue;\r\n        }\r\n\r\n        var colspan = cacheEntry.cellColSpans[i];\r\n        if (columnPosLeft[i] > range.rightPx ||\r\n          columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\r\n          if (!(row == activeRow && i == activeCell)) {\r\n            cellsToRemove.push(i);\r\n          }\r\n        }\r\n      }\r\n\r\n      var cellToRemove, cellNode;\r\n      while ((cellToRemove = cellsToRemove.pop()) != null) {\r\n        cellNode = cacheEntry.cellNodesByColumnIdx[cellToRemove][0];\r\n\r\n        if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]) {\r\n          queuePostProcessedCellForCleanup(cellNode, cellToRemove, row);\r\n        } else {\r\n          cellNode.parentElement.removeChild(cellNode);\r\n        }\r\n\r\n        delete cacheEntry.cellColSpans[cellToRemove];\r\n        delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\r\n        if (postProcessedRows[row]) {\r\n          delete postProcessedRows[row][cellToRemove];\r\n        }\r\n        totalCellsRemoved++;\r\n      }\r\n    }\r\n\r\n    function cleanUpAndRenderCells(range) {\r\n      var cacheEntry;\r\n      var stringArray = [];\r\n      var processedRows = [];\r\n      var cellsAdded;\r\n      var totalCellsAdded = 0;\r\n      var colspan;\r\n\r\n      for (var row = range.top, btm = range.bottom; row <= btm; row++) {\r\n        cacheEntry = rowsCache[row];\r\n        if (!cacheEntry) {\r\n          continue;\r\n        }\r\n\r\n        // cellRenderQueue populated in renderRows() needs to be cleared first\r\n        ensureCellNodesInRowsCache(row);\r\n\r\n        cleanUpCells(range, row);\r\n\r\n        // Render missing cells.\r\n        cellsAdded = 0;\r\n\r\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\r\n        metadata = metadata && metadata.columns;\r\n\r\n        var d = getDataItem(row);\r\n\r\n        // TODO:  shorten this loop (index? heuristics? binary search?)\r\n        for (var i = 0, ii = columns.length; i < ii; i++) {\r\n          // Cells to the right are outside the range.\r\n          if (columnPosLeft[i] > range.rightPx) {\r\n            break;\r\n          }\r\n\r\n          // Already rendered.\r\n          if ((colspan = cacheEntry.cellColSpans[i]) != null) {\r\n            i += (colspan > 1 ? colspan - 1 : 0);\r\n            continue;\r\n          }\r\n\r\n          colspan = 1;\r\n          if (metadata) {\r\n            var columnData = metadata[columns[i].id] || metadata[i];\r\n            colspan = (columnData && columnData.colspan) || 1;\r\n            if (colspan === \"*\") {\r\n              colspan = ii - i;\r\n            }\r\n          }\r\n\r\n          if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\r\n            appendCellHtml(stringArray, row, i, colspan, d);\r\n            cellsAdded++;\r\n          }\r\n\r\n          i += (colspan > 1 ? colspan - 1 : 0);\r\n        }\r\n\r\n        if (cellsAdded) {\r\n          totalCellsAdded += cellsAdded;\r\n          processedRows.push(row);\r\n        }\r\n      }\r\n\r\n      if (!stringArray.length) {\r\n        return;\r\n      }\r\n\r\n      var x = document.createElement(\"div\");\r\n      x.innerHTML = sanitizeHtmlString(stringArray.join(\"\"));\r\n\r\n      var processedRow;\r\n      var node;\r\n      while ((processedRow = processedRows.pop()) != null) {\r\n        cacheEntry = rowsCache[processedRow];\r\n        var columnIdx;\r\n        while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\r\n          node = x.lastChild;\r\n\r\n          if (hasFrozenColumns() && (columnIdx > options.frozenColumn)) {\r\n            cacheEntry.rowNode[1].appendChild(node);\r\n          } else {\r\n            cacheEntry.rowNode[0].appendChild(node);\r\n          }\r\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = $(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    function renderRows(range) {\r\n      var stringArrayL = [],\r\n        stringArrayR = [],\r\n        rows = [],\r\n        needToReselectCell = false,\r\n        dataLength = getDataLength();\r\n\r\n      for (var i = range.top, ii = range.bottom; i <= ii; i++) {\r\n        if (rowsCache[i] || ( hasFrozenRows && options.frozenBottom && i == getDataLength() )) {\r\n          continue;\r\n        }\r\n        renderedRows++;\r\n        rows.push(i);\r\n\r\n        // Create an entry right away so that appendRowHtml() can\r\n        // start populatating it.\r\n        rowsCache[i] = {\r\n          \"rowNode\": null,\r\n\r\n          // ColSpans of rendered cells (by column idx).\r\n          // Can also be used for checking whether a cell has been rendered.\r\n          \"cellColSpans\": [],\r\n\r\n          // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\r\n          \"cellNodesByColumnIdx\": [],\r\n\r\n          // Column indices of cell nodes that have been rendered, but not yet indexed in\r\n          // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\r\n          // end of the row.\r\n          \"cellRenderQueue\": []\r\n        };\r\n\r\n        appendRowHtml(stringArrayL, stringArrayR, i, range, dataLength);\r\n        if (activeCellNode && activeRow === i) {\r\n          needToReselectCell = true;\r\n        }\r\n        counter_rows_rendered++;\r\n      }\r\n\r\n      if (!rows.length) { return; }\r\n\r\n      var x = document.createElement(\"div\"),\r\n        xRight = document.createElement(\"div\");\r\n\r\n      x.innerHTML = sanitizeHtmlString(stringArrayL.join(\"\"));\r\n      xRight.innerHTML = sanitizeHtmlString(stringArrayR.join(\"\"));\r\n\r\n      for (var i = 0, ii = rows.length; i < ii; i++) {\r\n        if (( hasFrozenRows ) && ( rows[i] >= actualFrozenRow )) {\r\n            if (hasFrozenColumns()) {\r\n                rowsCache[rows[i]].rowNode = $()\r\n                    .add($(x.firstChild))\r\n                    .add($(xRight.firstChild));\r\n                $canvasBottomL[0].appendChild(x.firstChild);\r\n                $canvasBottomR[0].appendChild(xRight.firstChild);\r\n            } else {\r\n                rowsCache[rows[i]].rowNode = $()\r\n                    .add($(x.firstChild));\r\n                $canvasBottomL[0].appendChild(x.firstChild);\r\n            }\r\n        } else if (hasFrozenColumns()) {\r\n            rowsCache[rows[i]].rowNode = $()\r\n                .add($(x.firstChild))\r\n                .add($(xRight.firstChild));\r\n            $canvasTopL[0].appendChild(x.firstChild);\r\n            $canvasTopR[0].appendChild(xRight.firstChild);\r\n        } else {\r\n            rowsCache[rows[i]].rowNode = $()\r\n                .add($(x.firstChild));\r\n            $canvasTopL[0].appendChild(x.firstChild);\r\n        }\r\n      }\r\n\r\n      if (needToReselectCell) {\r\n        activeCellNode = getCellNode(activeRow, activeCell);\r\n      }\r\n    }\r\n\r\n    function startPostProcessing() {\r\n      if (!options.enableAsyncPostRender) {\r\n        return;\r\n      }\r\n      clearTimeout(h_postrender);\r\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\r\n    }\r\n\r\n    function startPostProcessingCleanup() {\r\n      if (!options.enableAsyncPostRenderCleanup) {\r\n        return;\r\n      }\r\n      clearTimeout(h_postrenderCleanup);\r\n      h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\r\n    }\r\n\r\n    function invalidatePostProcessingResults(row) {\r\n      // change status of columns to be re-rendered\r\n      for (var columnIdx in postProcessedRows[row]) {\r\n        if (postProcessedRows[row].hasOwnProperty(columnIdx)) {\r\n          postProcessedRows[row][columnIdx] = 'C';\r\n        }\r\n      }\r\n      postProcessFromRow = Math.min(postProcessFromRow, row);\r\n      postProcessToRow = Math.max(postProcessToRow, row);\r\n      startPostProcessing();\r\n    }\r\n\r\n    function updateRowPositions() {\r\n      for (var row in rowsCache) {\r\n        var rowNumber = row ? parseInt(row) : 0;\r\n        rowsCache[rowNumber].rowNode[0].style.top = getRowTop(rowNumber) + \"px\";\r\n      }\r\n    }\r\n\r\n    function render() {\r\n      if (!initialized) { return; }\r\n\r\n      scrollThrottle.dequeue();\r\n\r\n      var visible = getVisibleRange();\r\n      var rendered = getRenderedRange();\r\n\r\n      // remove rows no longer in the viewport\r\n      cleanupRows(rendered);\r\n\r\n      // add new rows & missing cells in existing rows\r\n      if (lastRenderedScrollLeft != scrollLeft) {\r\n\r\n    \t  if ( hasFrozenRows ) {\r\n\r\n    \t\t  var renderedFrozenRows = jQuery.extend(true, {}, rendered);\r\n\r\n    \t\t  if (options.frozenBottom) {\r\n\r\n    \t\t\t renderedFrozenRows.top=actualFrozenRow;\r\n    \t\t\t renderedFrozenRows.bottom=getDataLength();\r\n    \t\t  }\r\n    \t\t  else {\r\n\r\n\t             renderedFrozenRows.top=0;\r\n\t             renderedFrozenRows.bottom=options.frozenRow;\r\n    \t\t  }\r\n\r\n    \t\t  cleanUpAndRenderCells(renderedFrozenRows);\r\n    \t  }\r\n\r\n          cleanUpAndRenderCells(rendered);\r\n      }\r\n\r\n      // render missing rows\r\n      renderRows(rendered);\r\n\r\n      // Render frozen rows\r\n      if (hasFrozenRows) {\r\n\t      if (options.frozenBottom) {\r\n\t        renderRows({\r\n\t          top: actualFrozenRow, bottom: getDataLength() - 1, leftPx: rendered.leftPx, rightPx: rendered.rightPx\r\n\t        });\r\n\t      }\r\n\t      else {\r\n\t          renderRows({\r\n\t           top: 0, bottom: options.frozenRow - 1, leftPx: rendered.leftPx, rightPx: rendered.rightPx\r\n\t          });\r\n\t        }\r\n      }\r\n\r\n      postProcessFromRow = visible.top;\r\n      postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\r\n      startPostProcessing();\r\n\r\n      lastRenderedScrollTop = scrollTop;\r\n      lastRenderedScrollLeft = scrollLeft;\r\n      h_render = null;\r\n      trigger(self.onRendered, { startRow: visible.top, endRow: visible.bottom, grid: self });\r\n    }\r\n\r\n    function handleHeaderScroll() {\r\n      handleElementScroll($headerScrollContainer[0]);\r\n    }\r\n\r\n    function handleHeaderRowScroll() {\r\n      var scrollLeft = $headerRowScrollContainer[0].scrollLeft;\r\n      if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\r\n        $viewportScrollContainerX[0].scrollLeft = scrollLeft;\r\n      }\r\n    }\r\n\r\n    function handleFooterRowScroll() {\r\n      var scrollLeft = $footerRowScrollContainer[0].scrollLeft;\r\n      if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\r\n        $viewportScrollContainerX[0].scrollLeft = scrollLeft;\r\n      }\r\n    }\r\n\r\n    function handlePreHeaderPanelScroll() {\r\n      handleElementScroll($preHeaderPanelScroller[0]);\r\n    }\r\n\r\n    function handleElementScroll(element) {\r\n      var scrollLeft = element.scrollLeft;\r\n      if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\r\n        $viewportScrollContainerX[0].scrollLeft = scrollLeft;\r\n      }\r\n    }\r\n\r\n    function handleScroll() {\r\n      scrollTop = $viewportScrollContainerY[0].scrollTop;\r\n      scrollLeft = $viewportScrollContainerX[0].scrollLeft;\r\n      return _handleScroll(false);\r\n    }\r\n\r\n    function _handleScroll(isMouseWheel) {\r\n      var maxScrollDistanceY = $viewportScrollContainerY[0].scrollHeight - $viewportScrollContainerY[0].clientHeight;\r\n      var maxScrollDistanceX = $viewportScrollContainerY[0].scrollWidth - $viewportScrollContainerY[0].clientWidth;\r\n\r\n      // Protect against erroneous clientHeight/Width greater than scrollHeight/Width.\r\n      // Sometimes seen in Chrome.\r\n      maxScrollDistanceY = Math.max(0, maxScrollDistanceY);\r\n      maxScrollDistanceX = Math.max(0, maxScrollDistanceX);\r\n\r\n      // Ceiling the max scroll values\r\n      if (scrollTop > maxScrollDistanceY) {\r\n        scrollTop = maxScrollDistanceY;\r\n      }\r\n      if (scrollLeft > maxScrollDistanceX) {\r\n        scrollLeft = maxScrollDistanceX;\r\n      }\r\n\r\n      var vScrollDist = Math.abs(scrollTop - prevScrollTop);\r\n      var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\r\n\r\n      if (hScrollDist) {\r\n        prevScrollLeft = scrollLeft;\r\n\r\n        $viewportScrollContainerX[0].scrollLeft = scrollLeft;\r\n        $headerScrollContainer[0].scrollLeft = scrollLeft;\r\n        $topPanelScroller[0].scrollLeft = scrollLeft;\r\n        $headerRowScrollContainer[0].scrollLeft = scrollLeft;\r\n        if (options.createFooterRow) {\r\n          $footerRowScrollContainer[0].scrollLeft = scrollLeft;\r\n        }\r\n        if (options.createPreHeaderPanel) {\r\n          if (hasFrozenColumns()) {\r\n            $preHeaderPanelScrollerR[0].scrollLeft = scrollLeft;\r\n          } else {\r\n            $preHeaderPanelScroller[0].scrollLeft = scrollLeft;\r\n          }\r\n        }\r\n\r\n        if (hasFrozenColumns()) {\r\n          if (hasFrozenRows) {\r\n            $viewportTopR[0].scrollLeft = scrollLeft;\r\n          }\r\n        } else {\r\n          if (hasFrozenRows) {\r\n            $viewportTopL[0].scrollLeft = scrollLeft;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (vScrollDist) {\r\n        vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\r\n        prevScrollTop = scrollTop;\r\n\r\n        if (isMouseWheel) {\r\n          $viewportScrollContainerY[0].scrollTop = scrollTop;\r\n        }\r\n\r\n        if (hasFrozenColumns()) {\r\n          if (hasFrozenRows && !options.frozenBottom) {\r\n            $viewportBottomL[0].scrollTop = scrollTop;\r\n          } else {\r\n            $viewportTopL[0].scrollTop = scrollTop;\r\n          }\r\n        }\r\n\r\n        // switch virtual pages if needed\r\n        if (vScrollDist < viewportH) {\r\n          scrollTo(scrollTop + offset);\r\n        } else {\r\n          var oldOffset = offset;\r\n          if (h == viewportH) {\r\n            page = 0;\r\n          } else {\r\n            page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\r\n          }\r\n          offset = Math.round(page * cj);\r\n          if (oldOffset != offset) {\r\n            invalidateAllRows();\r\n          }\r\n        }\r\n      }\r\n\r\n      if (hScrollDist || vScrollDist) {\r\n        var dx = Math.abs(lastRenderedScrollLeft - scrollLeft);\r\n        var dy = Math.abs(lastRenderedScrollTop - scrollTop);\r\n        if (dx > 20 || dy > 20) {\r\n          // if rendering is forced or scrolling is small enough to be \"easy\", just render\r\n          if (options.forceSyncScrolling || (dy < viewportH && dx < viewportW)) {\r\n            render();\r\n          } else {\r\n            // otherwise, perform \"difficult\" renders at a capped frequency\r\n            scrollThrottle.enqueue();\r\n          }\r\n\r\n          trigger(self.onViewportChanged, {});\r\n        }\r\n      }\r\n\r\n      trigger(self.onScroll, {scrollLeft: scrollLeft, scrollTop: scrollTop});\r\n\r\n      if (hScrollDist || vScrollDist) return true;\r\n      return false;\r\n    }\r\n\r\n    /*\r\n    limits the frequency at which the provided action is executed.\r\n    call enqueue to execute the action - it will execute either immediately or, if it was executed less than minPeriod_ms in the past, as soon as minPeriod_ms has expired.\r\n    call dequeue to cancel any pending action.\r\n    */\r\n    function ActionThrottle(action, minPeriod_ms) {\r\n\r\n      var blocked = false;\r\n      var queued = false;\r\n\r\n      function enqueue() {\r\n        if (!blocked) {\r\n          blockAndExecute();\r\n        } else {\r\n          queued = true;\r\n        }\r\n      }\r\n\r\n      function dequeue() {\r\n        queued = false;\r\n      }\r\n\r\n      function blockAndExecute() {\r\n        blocked = true;\r\n        setTimeout(unblock, minPeriod_ms);\r\n        action();\r\n      }\r\n\r\n      function unblock() {\r\n        if (queued) {\r\n          dequeue();\r\n          blockAndExecute();\r\n        } else {\r\n          blocked = false;\r\n        }\r\n      }\r\n\r\n      return {\r\n        enqueue: enqueue,\r\n        dequeue: dequeue\r\n      };\r\n    }\r\n\r\n    function asyncPostProcessRows() {\r\n      var dataLength = getDataLength();\r\n      while (postProcessFromRow <= postProcessToRow) {\r\n        var row = (vScrollDir >= 0) ? postProcessFromRow++ : postProcessToRow--;\r\n        var cacheEntry = rowsCache[row];\r\n        if (!cacheEntry || row >= dataLength) {\r\n          continue;\r\n        }\r\n\r\n        if (!postProcessedRows[row]) {\r\n          postProcessedRows[row] = {};\r\n        }\r\n\r\n        ensureCellNodesInRowsCache(row);\r\n        for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\r\n          if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\r\n            continue;\r\n          }\r\n\r\n          columnIdx = columnIdx | 0;\r\n\r\n          var m = columns[columnIdx];\r\n          var processedStatus = postProcessedRows[row][columnIdx]; // C=cleanup and re-render, R=rendered\r\n          if (m.asyncPostRender && processedStatus !== 'R') {\r\n            var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\r\n            if (node) {\r\n              m.asyncPostRender(node, row, getDataItem(row), m, (processedStatus === 'C'));\r\n            }\r\n            postProcessedRows[row][columnIdx] = 'R';\r\n          }\r\n        }\r\n\r\n        h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\r\n        return;\r\n      }\r\n    }\r\n\r\n    function asyncPostProcessCleanupRows() {\r\n      if (postProcessedCleanupQueue.length > 0) {\r\n        var groupId = postProcessedCleanupQueue[0].groupId;\r\n\r\n        // loop through all queue members with this groupID\r\n        while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId) {\r\n          var entry = postProcessedCleanupQueue.shift();\r\n          if (entry.actionType == 'R') {\r\n            $(entry.node).remove();\r\n          }\r\n          if (entry.actionType == 'C') {\r\n            var column = columns[entry.columnIdx];\r\n            if (column.asyncPostRenderCleanup && entry.node) {\r\n              // cleanup must also remove element\r\n              column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\r\n            }\r\n          }\r\n        }\r\n\r\n        // call this function again after the specified delay\r\n        h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\r\n      }\r\n    }\r\n\r\n    function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\r\n      var node, columnId, addedRowHash, removedRowHash;\r\n      for (var row in rowsCache) {\r\n        removedRowHash = removedHash && removedHash[row];\r\n        addedRowHash = addedHash && addedHash[row];\r\n\r\n        if (removedRowHash) {\r\n          for (columnId in removedRowHash) {\r\n            if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\r\n              node = getCellNode(row, getColumnIndex(columnId));\r\n              if (node) {\r\n                $(node).removeClass(removedRowHash[columnId]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        if (addedRowHash) {\r\n          for (columnId in addedRowHash) {\r\n            if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\r\n              node = getCellNode(row, getColumnIndex(columnId));\r\n              if (node) {\r\n                $(node).addClass(addedRowHash[columnId]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function addCellCssStyles(key, hash) {\r\n      if (cellCssClasses[key]) {\r\n        throw new Error(\"SlickGrid addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\");\r\n      }\r\n\r\n      cellCssClasses[key] = hash;\r\n      updateCellCssStylesOnRenderedRows(hash, null);\r\n\r\n      trigger(self.onCellCssStylesChanged, { \"key\": key, \"hash\": hash, \"grid\": self });\r\n    }\r\n\r\n    function removeCellCssStyles(key) {\r\n      if (!cellCssClasses[key]) {\r\n        return;\r\n      }\r\n\r\n      updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\r\n      delete cellCssClasses[key];\r\n\r\n      trigger(self.onCellCssStylesChanged, { \"key\": key, \"hash\": null, \"grid\": self });\r\n    }\r\n\r\n    function setCellCssStyles(key, hash) {\r\n      var prevHash = cellCssClasses[key];\r\n\r\n      cellCssClasses[key] = hash;\r\n      updateCellCssStylesOnRenderedRows(hash, prevHash);\r\n\r\n      trigger(self.onCellCssStylesChanged, { \"key\": key, \"hash\": hash, \"grid\": self });\r\n    }\r\n\r\n    function getCellCssStyles(key) {\r\n      return cellCssClasses[key];\r\n    }\r\n\r\n    function flashCell(row, cell, speed) {\r\n      speed = speed || 100;\r\n\r\n      function toggleCellClass($cell, times) {\r\n        if (!times) {\r\n          return;\r\n        }\r\n\r\n        setTimeout(function () {\r\n          $cell.queue(function () {\r\n            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\r\n            toggleCellClass($cell, times - 1);\r\n          });\r\n        }, speed);\r\n      }\r\n\r\n      if (rowsCache[row]) {\r\n        var $cell = $(getCellNode(row, cell));\r\n\r\n        toggleCellClass($cell, 4);\r\n      }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Interactivity\r\n\r\n    function handleMouseWheel(e, delta, deltaX, deltaY) {\r\n      scrollTop = Math.max(0, $viewportScrollContainerY[0].scrollTop - (deltaY * options.rowHeight));\r\n      scrollLeft = $viewportScrollContainerX[0].scrollLeft + (deltaX * 10);\r\n      var handled = _handleScroll(true);\r\n      if (handled) e.preventDefault();\r\n    }\r\n\r\n    function handleDragInit(e, dd) {\r\n      var cell = getCellFromEvent(e);\r\n      if (!cell || !cellExists(cell.row, cell.cell)) {\r\n        return false;\r\n      }\r\n\r\n      var retval = trigger(self.onDragInit, dd, e);\r\n      if (e.isImmediatePropagationStopped()) {\r\n        return retval;\r\n      }\r\n\r\n      // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\r\n      // cancel out of it\r\n      return false;\r\n    }\r\n\r\n    function handleDragStart(e, dd) {\r\n      var cell = getCellFromEvent(e);\r\n      if (!cell || !cellExists(cell.row, cell.cell)) {\r\n        return false;\r\n      }\r\n\r\n      var retval = trigger(self.onDragStart, dd, e);\r\n      if (e.isImmediatePropagationStopped()) {\r\n        return retval;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    function handleDrag(e, dd) {\r\n      return trigger(self.onDrag, dd, e);\r\n    }\r\n\r\n    function handleDragEnd(e, dd) {\r\n      trigger(self.onDragEnd, dd, e);\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n      trigger(self.onKeyDown, {row: activeRow, cell: activeCell}, e);\r\n      var handled = e.isImmediatePropagationStopped();\r\n      var keyCode = Slick.keyCode;\r\n\r\n      if (!handled) {\r\n         if (!e.shiftKey && !e.altKey) {\r\n            if (options.editable && currentEditor && currentEditor.keyCaptureList) {\r\n               if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\r\n                  return;\r\n               }\r\n            }\r\n            if (e.which == keyCode.HOME) {\r\n               handled = (e.ctrlKey) ? navigateTop() : navigateRowStart();\r\n            } else if (e.which == keyCode.END) {\r\n               handled = (e.ctrlKey) ? navigateBottom() : navigateRowEnd();\r\n            }\r\n         }\r\n      }\r\n      if (!handled) {\r\n        if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\r\n          // editor may specify an array of keys to bubble\r\n          if (options.editable && currentEditor && currentEditor.keyCaptureList) {\r\n            if (currentEditor.keyCaptureList.indexOf( e.which ) > -1) {\r\n                return;\r\n            }\r\n          }\r\n          if (e.which == keyCode.ESCAPE) {\r\n            if (!getEditorLock().isActive()) {\r\n              return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\r\n            }\r\n            cancelEditAndSetFocus();\r\n          } else if (e.which == keyCode.PAGE_DOWN) {\r\n            navigatePageDown();\r\n            handled = true;\r\n          } else if (e.which == keyCode.PAGE_UP) {\r\n            navigatePageUp();\r\n            handled = true;\r\n          } else if (e.which == keyCode.LEFT) {\r\n            handled = navigateLeft();\r\n          } else if (e.which == keyCode.RIGHT) {\r\n            handled = navigateRight();\r\n          } else if (e.which == keyCode.UP) {\r\n            handled = navigateUp();\r\n          } else if (e.which == keyCode.DOWN) {\r\n            handled = navigateDown();\r\n          } else if (e.which == keyCode.TAB) {\r\n            handled = navigateNext();\r\n          } else if (e.which == keyCode.ENTER) {\r\n            if (options.editable) {\r\n              if (currentEditor) {\r\n                // adding new row\r\n                if (activeRow === getDataLength()) {\r\n                  navigateDown();\r\n                } else {\r\n                  commitEditAndSetFocus();\r\n                }\r\n              } else {\r\n                if (getEditorLock().commitCurrentEdit()) {\r\n                  makeActiveCellEditable(undefined, undefined, e);\r\n                }\r\n              }\r\n            }\r\n            handled = true;\r\n          }\r\n        } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\r\n          handled = navigatePrev();\r\n        }\r\n      }\r\n\r\n      if (handled) {\r\n        // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        try {\r\n          e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\r\n        }\r\n        // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\r\n        // (hitting control key only, nothing else), \"Shift\" (maybe others)\r\n        catch (error) {\r\n        }\r\n      }\r\n    }\r\n\r\n    function handleClick(e) {\r\n      if (!currentEditor) {\r\n        // if this click resulted in some cell child node getting focus,\r\n        // don't steal it back - keyboard events will still bubble up\r\n        // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\r\n\tif (e.target != document.activeElement || $(e.target).hasClass(\"slick-cell\")) {\r\n          var selection = getTextSelection(); //store text-selection and restore it after\r\n          setFocus();\r\n          setTextSelection(selection);\r\n        }\r\n      }\r\n\r\n      var cell = getCellFromEvent(e);\r\n      if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)) {\r\n        return;\r\n      }\r\n\r\n      trigger(self.onClick, {row: cell.row, cell: cell.cell}, e);\r\n      if (e.isImmediatePropagationStopped()) {\r\n        return;\r\n      }\r\n\r\n      // this optimisation causes trouble - MLeibman #329\r\n      //if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\r\n      if (canCellBeActive(cell.row, cell.cell)) {\r\n        if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\r\n          scrollRowIntoView(cell.row, false);\r\n\r\n          var preClickModeOn = (e.target && e.target.className === Slick.preClickClassName);\r\n          var column = columns[cell.cell];\r\n          var suppressActiveCellChangedEvent = !!(options.editable && column && column.editor && options.suppressActiveCellChangeOnEdit);\r\n          setActiveCellInternal(getCellNode(cell.row, cell.cell), null, preClickModeOn, suppressActiveCellChangedEvent, e);\r\n        }\r\n      }\r\n    }\r\n\r\n    function handleContextMenu(e) {\r\n      var $cell = $(e.target).closest(\".slick-cell\", $canvas);\r\n      if ($cell.length === 0) {\r\n        return;\r\n      }\r\n\r\n      // are we editing this cell?\r\n      if (activeCellNode === $cell[0] && currentEditor !== null) {\r\n        return;\r\n      }\r\n\r\n      trigger(self.onContextMenu, {}, e);\r\n    }\r\n\r\n    function handleDblClick(e) {\r\n      var cell = getCellFromEvent(e);\r\n      if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)) {\r\n        return;\r\n      }\r\n\r\n      trigger(self.onDblClick, {row: cell.row, cell: cell.cell}, e);\r\n      if (e.isImmediatePropagationStopped()) {\r\n        return;\r\n      }\r\n\r\n      if (options.editable) {\r\n        gotoCell(cell.row, cell.cell, true, e);\r\n      }\r\n    }\r\n\r\n    function handleHeaderMouseEnter(e) {\r\n      trigger(self.onHeaderMouseEnter, {\r\n        \"column\": $(this).data(\"column\"),\r\n        \"grid\": self\r\n      }, e);\r\n    }\r\n\r\n    function handleHeaderMouseLeave(e) {\r\n      trigger(self.onHeaderMouseLeave, {\r\n        \"column\": $(this).data(\"column\"),\r\n        \"grid\": self\r\n      }, e);\r\n    }\r\n\r\n    function handleHeaderRowMouseEnter(e) {\r\n      trigger(self.onHeaderRowMouseEnter, {\r\n        \"column\": $(this).data(\"column\"),\r\n        \"grid\": self\r\n      }, e);\r\n    }\r\n\r\n    function handleHeaderRowMouseLeave(e) {\r\n      trigger(self.onHeaderRowMouseLeave, {\r\n        \"column\": $(this).data(\"column\"),\r\n        \"grid\": self\r\n      }, e);\r\n    }\r\n\r\n    function handleHeaderContextMenu(e) {\r\n      var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\r\n      var column = $header && $header.data(\"column\");\r\n      trigger(self.onHeaderContextMenu, {column: column}, e);\r\n    }\r\n\r\n    function handleHeaderClick(e) {\r\n      if (columnResizeDragging) return;\r\n      var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\r\n      var column = $header && $header.data(\"column\");\r\n      if (column) {\r\n        trigger(self.onHeaderClick, {column: column}, e);\r\n      }\r\n    }\r\n\r\n    function handleFooterContextMenu(e) {\r\n      var $footer = $(e.target).closest(\".slick-footerrow-column\", \".slick-footerrow-columns\");\r\n      var column = $footer && $footer.data(\"column\");\r\n      trigger(self.onFooterContextMenu, {column: column}, e);\r\n    }\r\n\r\n    function handleFooterClick(e) {\r\n      var $footer = $(e.target).closest(\".slick-footerrow-column\", \".slick-footerrow-columns\");\r\n      var column = $footer && $footer.data(\"column\");\r\n      trigger(self.onFooterClick, {column: column}, e);\r\n    }\r\n\r\n    function handleMouseEnter(e) {\r\n      trigger(self.onMouseEnter, {}, e);\r\n    }\r\n\r\n    function handleMouseLeave(e) {\r\n      trigger(self.onMouseLeave, {}, e);\r\n    }\r\n\r\n    function cellExists(row, cell) {\r\n      return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\r\n    }\r\n\r\n    function getCellFromPoint(x, y) {\r\n      var row = getRowFromPosition(y);\r\n      var cell = 0;\r\n\r\n      var w = 0;\r\n      for (var i = 0; i < columns.length && w < x; i++) {\r\n        w += columns[i].width;\r\n        cell++;\r\n      }\r\n\r\n      if (cell < 0) {\r\n        cell = 0;\r\n      }\r\n\r\n      return {row: row, cell: cell - 1};\r\n    }\r\n\r\n    function getCellFromNode(cellNode) {\r\n      // read column number from .l<columnNumber> CSS class\r\n      var cls = /l\\d+/.exec(cellNode.className);\r\n      if (!cls) {\r\n        throw new Error(\"SlickGrid getCellFromNode: cannot get cell - \" + cellNode.className);\r\n      }\r\n      return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\r\n    }\r\n\r\n    function getRowFromNode(rowNode) {\r\n      for (var row in rowsCache) {\r\n        for (var i in rowsCache[row].rowNode) {\r\n          if (rowsCache[row].rowNode[i] === rowNode)\r\n          return (row ? parseInt(row) : 0);\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    function getFrozenRowOffset(row) {\r\n      var offset =\r\n        ( hasFrozenRows )\r\n          ? ( options.frozenBottom )\r\n          ? ( row >= actualFrozenRow )\r\n          ? ( h < viewportTopH )\r\n          ? ( actualFrozenRow * options.rowHeight )\r\n          : h\r\n          : 0\r\n          : ( row >= actualFrozenRow )\r\n          ? frozenRowsHeight\r\n          : 0\r\n          : 0;\r\n\r\n      return offset;\r\n    }\r\n\r\n    function getCellFromEvent(e) {\r\n      var row, cell;\r\n      var $cell = $(e.target).closest(\".slick-cell\", $canvas);\r\n      if (!$cell.length) {\r\n        return null;\r\n      }\r\n\r\n      row = getRowFromNode($cell[0].parentNode);\r\n\r\n      if (hasFrozenRows) {\r\n\r\n        var c = $cell.parents('.grid-canvas').offset();\r\n\r\n        var rowOffset = 0;\r\n        var isBottom = $cell.parents('.grid-canvas-bottom').length;\r\n\r\n        if (isBottom) {\r\n          rowOffset = ( options.frozenBottom ) ? $canvasTopL.height() : frozenRowsHeight;\r\n        }\r\n\r\n        row = getCellFromPoint(e.clientX - c.left, e.clientY - c.top + rowOffset + $(document).scrollTop()).row;\r\n      }\r\n\r\n      cell = getCellFromNode($cell[0]);\r\n\r\n      if (row == null || cell == null) {\r\n        return null;\r\n      } else {\r\n        return {\r\n          \"row\": row,\r\n          \"cell\": cell\r\n        };\r\n      }\r\n    }\r\n\r\n    function getCellNodeBox(row, cell) {\r\n      if (!cellExists(row, cell)) {\r\n        return null;\r\n      }\r\n\r\n      var frozenRowOffset = getFrozenRowOffset(row);\r\n\r\n      var y1 = getRowTop(row) - frozenRowOffset;\r\n      var y2 = y1 + options.rowHeight - 1;\r\n      var x1 = 0;\r\n      for (var i = 0; i < cell; i++) {\r\n        x1 += columns[i].width;\r\n\r\n        if (options.frozenColumn == i) {\r\n          x1 = 0;\r\n        }\r\n      }\r\n      var x2 = x1 + columns[cell].width;\r\n\r\n      return {\r\n        top: y1,\r\n        left: x1,\r\n        bottom: y2,\r\n        right: x2\r\n      };\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Cell switching\r\n\r\n    function resetActiveCell() {\r\n      setActiveCellInternal(null, false);\r\n    }\r\n\r\n    function setFocus() {\r\n      if (tabbingDirection == -1) {\r\n        $focusSink[0].focus();\r\n      } else {\r\n        $focusSink2[0].focus();\r\n      }\r\n    }\r\n\r\n    function scrollCellIntoView(row, cell, doPaging) {\r\n      scrollRowIntoView(row, doPaging);\r\n\r\n      if (cell <= options.frozenColumn) {\r\n        return;\r\n      }\r\n\r\n      var colspan = getColspan(row, cell);\r\n      internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)]);\r\n    }\r\n\r\n    function internalScrollColumnIntoView(left, right) {\r\n      var scrollRight = scrollLeft + $viewportScrollContainerX.width() - (viewportHasVScroll ? scrollbarDimensions.width : 0);\r\n\r\n      if (left < scrollLeft) {\r\n        $viewportScrollContainerX.scrollLeft(left);\r\n        handleScroll();\r\n        render();\r\n      } else if (right > scrollRight) {\r\n        $viewportScrollContainerX.scrollLeft(Math.min(left, right - $viewportScrollContainerX[0].clientWidth));\r\n        handleScroll();\r\n        render();\r\n      }\r\n    }\r\n\r\n    function scrollColumnIntoView(cell) {\r\n      internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell]);\r\n    }\r\n\r\n    function setActiveCellInternal(newCell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent, e) {\r\n      if (activeCellNode !== null) {\r\n        makeActiveCellNormal();\r\n        $(activeCellNode).removeClass(\"active\");\r\n        if (rowsCache[activeRow]) {\r\n          rowsCache[activeRow].rowNode.removeClass(\"active\");\r\n        }\r\n      }\r\n\r\n      var activeCellChanged = (activeCellNode !== newCell);\r\n      activeCellNode = newCell;\r\n\r\n      if (activeCellNode != null) {\r\n        var $activeCellNode = $(activeCellNode);\r\n        var $activeCellOffset = $activeCellNode.offset();\r\n\r\n        var rowOffset = Math.floor($activeCellNode.parents('.grid-canvas').offset().top);\r\n        var isBottom = $activeCellNode.parents('.grid-canvas-bottom').length;\r\n\r\n        if (hasFrozenRows && isBottom) {\r\n          rowOffset -= ( options.frozenBottom )\r\n            ? $canvasTopL.height()\r\n            : frozenRowsHeight;\r\n        }\r\n\r\n        var cell = getCellFromPoint($activeCellOffset.left, Math.ceil($activeCellOffset.top) - rowOffset);\r\n\r\n        activeRow = cell.row;\r\n        activeCell = activePosX = activeCell = activePosX = getCellFromNode(activeCellNode);\r\n\r\n        if (opt_editMode == null) {\r\n          opt_editMode = (activeRow == getDataLength()) || options.autoEdit;\r\n        }\r\n\r\n        if (options.showCellSelection) {\r\n          $activeCellNode.addClass(\"active\");\r\n          if (rowsCache[activeRow]) {\r\n            rowsCache[activeRow].rowNode.addClass(\"active\");\r\n          }\r\n        }\r\n\r\n        if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\r\n          clearTimeout(h_editorLoader);\r\n\r\n          if (options.asyncEditorLoading) {\r\n            h_editorLoader = setTimeout(function () {\r\n              makeActiveCellEditable(undefined, preClickModeOn, e);\r\n            }, options.asyncEditorLoadDelay);\r\n          } else {\r\n            makeActiveCellEditable(undefined, preClickModeOn, e);\r\n          }\r\n        }\r\n      } else {\r\n        activeRow = activeCell = null;\r\n      }\r\n\r\n      // this optimisation causes trouble - MLeibman #329\r\n      //if (activeCellChanged) {\r\n      if (!suppressActiveCellChangedEvent) { trigger(self.onActiveCellChanged, getActiveCell()); }\r\n      //}\r\n    }\r\n\r\n    function clearTextSelection() {\r\n      if (document.selection && document.selection.empty) {\r\n        try {\r\n          //IE fails here if selected element is not in dom\r\n          document.selection.empty();\r\n        } catch (e) { }\r\n      } else if (window.getSelection) {\r\n        var sel = window.getSelection();\r\n        if (sel && sel.removeAllRanges) {\r\n          sel.removeAllRanges();\r\n        }\r\n      }\r\n    }\r\n\r\n    function isCellPotentiallyEditable(row, cell) {\r\n      var dataLength = getDataLength();\r\n      // is the data for this row loaded?\r\n      if (row < dataLength && !getDataItem(row)) {\r\n        return false;\r\n      }\r\n\r\n      // are we in the Add New row?  can we create new from this cell?\r\n      if (columns[cell].cannotTriggerInsert && row >= dataLength) {\r\n        return false;\r\n      }\r\n\r\n      // does this cell have an editor?\r\n      if (!getEditor(row, cell)) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    function makeActiveCellNormal() {\r\n      if (!currentEditor) {\r\n        return;\r\n      }\r\n      trigger(self.onBeforeCellEditorDestroy, {editor: currentEditor});\r\n      currentEditor.destroy();\r\n      currentEditor = null;\r\n\r\n      if (activeCellNode) {\r\n        var d = getDataItem(activeRow);\r\n        $(activeCellNode).removeClass(\"editable invalid\");\r\n        if (d) {\r\n          var column = columns[activeCell];\r\n          var formatter = getFormatter(activeRow, column);\r\n          var formatterResult =  formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\r\n          applyFormatResultToCellNode(formatterResult, activeCellNode);\r\n          invalidatePostProcessingResults(activeRow);\r\n        }\r\n      }\r\n\r\n      // if there previously was text selected on a page (such as selected text in the edit cell just removed),\r\n      // IE can't set focus to anything else correctly\r\n      if (navigator.userAgent.toLowerCase().match(/msie/)) {\r\n        clearTextSelection();\r\n      }\r\n\r\n      getEditorLock().deactivate(editController);\r\n    }\r\n\r\n    function makeActiveCellEditable(editor, preClickModeOn, e) {\r\n      if (!activeCellNode) {\r\n        return;\r\n      }\r\n      if (!options.editable) {\r\n        throw new Error(\"SlickGrid makeActiveCellEditable : should never get called when options.editable is false\");\r\n      }\r\n\r\n      // cancel pending async call if there is one\r\n      clearTimeout(h_editorLoader);\r\n\r\n      if (!isCellPotentiallyEditable(activeRow, activeCell)) {\r\n        return;\r\n      }\r\n\r\n      var columnDef = columns[activeCell];\r\n      var item = getDataItem(activeRow);\r\n\r\n      if (trigger(self.onBeforeEditCell, {row: activeRow, cell: activeCell, item: item, column: columnDef, target: 'grid' }) === false) {\r\n        setFocus();\r\n        return;\r\n      }\r\n\r\n      getEditorLock().activate(editController);\r\n      $(activeCellNode).addClass(\"editable\");\r\n\r\n      var useEditor = editor || getEditor(activeRow, activeCell);\r\n\r\n      // don't clear the cell if a custom editor is passed through\r\n      if (!editor && !useEditor.suppressClearOnEdit) {\r\n        activeCellNode.innerHTML = \"\";\r\n      }\r\n\r\n      var metadata = data.getItemMetadata && data.getItemMetadata(activeRow);\r\n      metadata = metadata && metadata.columns;\r\n      var columnMetaData = metadata && ( metadata[columnDef.id] || metadata[activeCell] );\r\n\r\n      currentEditor = new useEditor({\r\n        grid: self,\r\n        gridPosition: absBox($container[0]),\r\n        position: absBox(activeCellNode),\r\n        container: activeCellNode,\r\n        column: columnDef,\r\n        columnMetaData: columnMetaData,\r\n        item: item || {},\r\n        event: e,\r\n        commitChanges: commitEditAndSetFocus,\r\n        cancelChanges: cancelEditAndSetFocus\r\n      });\r\n\r\n      if (item) {\r\n        currentEditor.loadValue(item);\r\n        if (preClickModeOn && currentEditor.preClick) {\r\n          currentEditor.preClick();\r\n        }\r\n      }\r\n\r\n      serializedEditorValue = currentEditor.serializeValue();\r\n\r\n      if (currentEditor.position) {\r\n        handleActiveCellPositionChange();\r\n      }\r\n    }\r\n\r\n    function commitEditAndSetFocus() {\r\n      // if the commit fails, it would do so due to a validation error\r\n      // if so, do not steal the focus from the editor\r\n      if (getEditorLock().commitCurrentEdit()) {\r\n        setFocus();\r\n        if (options.autoEdit) {\r\n          navigateDown();\r\n        }\r\n      }\r\n    }\r\n\r\n    function cancelEditAndSetFocus() {\r\n      if (getEditorLock().cancelCurrentEdit()) {\r\n        setFocus();\r\n      }\r\n    }\r\n\r\n    function absBox(elem) {\r\n      var box = {\r\n        top: elem.offsetTop,\r\n        left: elem.offsetLeft,\r\n        bottom: 0,\r\n        right: 0,\r\n        width: $(elem).outerWidth(),\r\n        height: $(elem).outerHeight(),\r\n        visible: true\r\n      };\r\n      box.bottom = box.top + box.height;\r\n      box.right = box.left + box.width;\r\n\r\n      // walk up the tree\r\n      var offsetParent = elem.offsetParent;\r\n      while ((elem = elem.parentNode) != document.body) {\r\n        if (elem == null) break;\r\n\r\n        if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css(\"overflowY\") != \"visible\") {\r\n          box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\r\n        }\r\n\r\n        if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css(\"overflowX\") != \"visible\") {\r\n          box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\r\n        }\r\n\r\n        box.left -= elem.scrollLeft;\r\n        box.top -= elem.scrollTop;\r\n\r\n        if (elem === offsetParent) {\r\n          box.left += elem.offsetLeft;\r\n          box.top += elem.offsetTop;\r\n          offsetParent = elem.offsetParent;\r\n        }\r\n\r\n        box.bottom = box.top + box.height;\r\n        box.right = box.left + box.width;\r\n      }\r\n\r\n      return box;\r\n    }\r\n\r\n    function getActiveCellPosition() {\r\n      return absBox(activeCellNode);\r\n    }\r\n\r\n    function getGridPosition() {\r\n      return absBox($container[0]);\r\n    }\r\n\r\n    function handleActiveCellPositionChange() {\r\n      if (!activeCellNode) {\r\n        return;\r\n      }\r\n\r\n      trigger(self.onActiveCellPositionChanged, {});\r\n\r\n      if (currentEditor) {\r\n        var cellBox = getActiveCellPosition();\r\n        if (currentEditor.show && currentEditor.hide) {\r\n          if (!cellBox.visible) {\r\n            currentEditor.hide();\r\n          } else {\r\n            currentEditor.show();\r\n          }\r\n        }\r\n\r\n        if (currentEditor.position) {\r\n          currentEditor.position(cellBox);\r\n        }\r\n      }\r\n    }\r\n\r\n    function getCellEditor() {\r\n      return currentEditor;\r\n    }\r\n\r\n    function getActiveCell() {\r\n      if (!activeCellNode) {\r\n        return null;\r\n      } else {\r\n        return {row: activeRow, cell: activeCell};\r\n      }\r\n    }\r\n\r\n    function getActiveCellNode() {\r\n      return activeCellNode;\r\n    }\r\n\r\n    //This get/set methods are used for keeping text-selection. These don't consider IE because they don't loose text-selection.\r\n    //Fix for firefox selection. See https://github.com/mleibman/SlickGrid/pull/746/files\r\n    function getTextSelection(){\r\n      var textSelection = null;\r\n      if (window.getSelection) {\r\n        var selection = window.getSelection();\r\n        if (selection.rangeCount > 0) {\r\n          textSelection = selection.getRangeAt(0);\r\n        }\r\n      }\r\n      return textSelection;\r\n    }\r\n\r\n    function setTextSelection(selection){\r\n      if (window.getSelection && selection) {\r\n        var target = window.getSelection();\r\n        target.removeAllRanges();\r\n        target.addRange(selection);\r\n      }\r\n    }\r\n\r\n    function scrollRowIntoView(row, doPaging) {\r\n\t    if (!hasFrozenRows ||\r\n\t  \t  ( !options.frozenBottom && row > actualFrozenRow - 1 ) ||\r\n\t  \t  ( options.frozenBottom && row < actualFrozenRow - 1 ) ) {\r\n\r\n\t      var viewportScrollH = $viewportScrollContainerY.height();\r\n\r\n\t      // if frozen row on top\r\n\t      // subtract number of frozen row\r\n\t      var rowNumber = ( hasFrozenRows && !options.frozenBottom ? row - options.frozenRow : row );\r\n\r\n\t      var rowAtTop = rowNumber * options.rowHeight;\r\n\t      var rowAtBottom = (rowNumber + 1) * options.rowHeight\r\n\t        - viewportScrollH\r\n\t        + (viewportHasHScroll ? scrollbarDimensions.height : 0);\r\n\r\n\t      // need to page down?\r\n\t      if ((rowNumber + 1) * options.rowHeight > scrollTop + viewportScrollH + offset) {\r\n\t        scrollTo(doPaging ? rowAtTop : rowAtBottom);\r\n\t        render();\r\n\t      }\r\n\t      // or page up?\r\n\t      else if (rowNumber * options.rowHeight < scrollTop + offset) {\r\n\t        scrollTo(doPaging ? rowAtBottom : rowAtTop);\r\n\t        render();\r\n\t      }\r\n\t    }\r\n    }\r\n\r\n    function scrollRowToTop(row) {\r\n      scrollTo(row * options.rowHeight);\r\n      render();\r\n    }\r\n\r\n    function scrollPage(dir) {\r\n      var deltaRows = dir * numVisibleRows;\r\n        /// First fully visible row crosses the line with\r\n        /// y == bottomOfTopmostFullyVisibleRow\r\n      var bottomOfTopmostFullyVisibleRow = scrollTop + options.rowHeight - 1;\r\n      scrollTo((getRowFromPosition(bottomOfTopmostFullyVisibleRow) + deltaRows) * options.rowHeight);\r\n      render();\r\n\r\n      if (options.enableCellNavigation && activeRow != null) {\r\n        var row = activeRow + deltaRows;\r\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\r\n        if (row >= dataLengthIncludingAddNew) {\r\n          row = dataLengthIncludingAddNew - 1;\r\n        }\r\n        if (row < 0) {\r\n          row = 0;\r\n        }\r\n\r\n        var cell = 0, prevCell = null;\r\n        var prevActivePosX = activePosX;\r\n        while (cell <= activePosX) {\r\n          if (canCellBeActive(row, cell)) {\r\n            prevCell = cell;\r\n          }\r\n          cell += getColspan(row, cell);\r\n        }\r\n\r\n        if (prevCell !== null) {\r\n          setActiveCellInternal(getCellNode(row, prevCell));\r\n          activePosX = prevActivePosX;\r\n        } else {\r\n          resetActiveCell();\r\n        }\r\n      }\r\n    }\r\n\r\n    function navigatePageDown() {\r\n      scrollPage(1);\r\n    }\r\n\r\n    function navigatePageUp() {\r\n       scrollPage(-1);\r\n    }\r\n\r\n    function navigateTop() {\r\n       navigateToRow(0);\r\n    }\r\n\r\n    function navigateBottom() {\r\n       navigateToRow(getDataLength()-1);\r\n    }\r\n\r\n    function navigateToRow(row) {\r\n       var num_rows = getDataLength();\r\n       if (!num_rows) return true;\r\n\r\n       if (row < 0) row = 0;\r\n       else if (row >= num_rows) row = num_rows - 1;\r\n\r\n       scrollCellIntoView(row, 0, true);\r\n       if (options.enableCellNavigation && activeRow != null) {\r\n          var cell = 0, prevCell = null;\r\n          var prevActivePosX = activePosX;\r\n          while (cell <= activePosX) {\r\n             if (canCellBeActive(row, cell)) {\r\n                prevCell = cell;\r\n             }\r\n             cell += getColspan(row, cell);\r\n          }\r\n\r\n          if (prevCell !== null) {\r\n             setActiveCellInternal(getCellNode(row, prevCell));\r\n             activePosX = prevActivePosX;\r\n          } else {\r\n             resetActiveCell();\r\n          }\r\n       }\r\n       return true;\r\n    }\r\n\r\n    function getColspan(row, cell) {\r\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\r\n      if (!metadata || !metadata.columns) {\r\n        return 1;\r\n      }\r\n\r\n      var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\r\n      var colspan = (columnData && columnData.colspan);\r\n      if (colspan === \"*\") {\r\n        colspan = columns.length - cell;\r\n      } else {\r\n        colspan = colspan || 1;\r\n      }\r\n\r\n      return colspan;\r\n    }\r\n\r\n    function findFirstFocusableCell(row) {\r\n      var cell = 0;\r\n      while (cell < columns.length) {\r\n        if (canCellBeActive(row, cell)) {\r\n          return cell;\r\n        }\r\n        cell += getColspan(row, cell);\r\n      }\r\n      return null;\r\n    }\r\n\r\n    function findLastFocusableCell(row) {\r\n      var cell = 0;\r\n      var lastFocusableCell = null;\r\n      while (cell < columns.length) {\r\n        if (canCellBeActive(row, cell)) {\r\n          lastFocusableCell = cell;\r\n        }\r\n        cell += getColspan(row, cell);\r\n      }\r\n      return lastFocusableCell;\r\n    }\r\n\r\n    function gotoRight(row, cell, posX) {\r\n      if (cell >= columns.length) {\r\n        return null;\r\n      }\r\n\r\n      do {\r\n        cell += getColspan(row, cell);\r\n      }\r\n      while (cell < columns.length && !canCellBeActive(row, cell));\r\n\r\n      if (cell < columns.length) {\r\n        return {\r\n          \"row\": row,\r\n          \"cell\": cell,\r\n          \"posX\": cell\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n\r\n    function gotoLeft(row, cell, posX) {\r\n      if (cell <= 0) {\r\n        return null;\r\n      }\r\n\r\n      var firstFocusableCell = findFirstFocusableCell(row);\r\n      if (firstFocusableCell === null || firstFocusableCell >= cell) {\r\n        return null;\r\n      }\r\n\r\n      var prev = {\r\n        \"row\": row,\r\n        \"cell\": firstFocusableCell,\r\n        \"posX\": firstFocusableCell\r\n      };\r\n      var pos;\r\n      while (true) {\r\n        pos = gotoRight(prev.row, prev.cell, prev.posX);\r\n        if (!pos) {\r\n          return null;\r\n        }\r\n        if (pos.cell >= cell) {\r\n          return prev;\r\n        }\r\n        prev = pos;\r\n      }\r\n    }\r\n\r\n    function gotoDown(row, cell, posX) {\r\n      var prevCell;\r\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\r\n      while (true) {\r\n        if (++row >= dataLengthIncludingAddNew) {\r\n          return null;\r\n        }\r\n\r\n        prevCell = cell = 0;\r\n        while (cell <= posX) {\r\n          prevCell = cell;\r\n          cell += getColspan(row, cell);\r\n        }\r\n\r\n        if (canCellBeActive(row, prevCell)) {\r\n          return {\r\n            \"row\": row,\r\n            \"cell\": prevCell,\r\n            \"posX\": posX\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    function gotoUp(row, cell, posX) {\r\n      var prevCell;\r\n      while (true) {\r\n        if (--row < 0) {\r\n          return null;\r\n        }\r\n\r\n        prevCell = cell = 0;\r\n        while (cell <= posX) {\r\n          prevCell = cell;\r\n          cell += getColspan(row, cell);\r\n        }\r\n\r\n        if (canCellBeActive(row, prevCell)) {\r\n          return {\r\n            \"row\": row,\r\n            \"cell\": prevCell,\r\n            \"posX\": posX\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    function gotoNext(row, cell, posX) {\r\n      if (row == null && cell == null) {\r\n        row = cell = posX = 0;\r\n        if (canCellBeActive(row, cell)) {\r\n          return {\r\n            \"row\": row,\r\n            \"cell\": cell,\r\n            \"posX\": cell\r\n          };\r\n        }\r\n      }\r\n\r\n      var pos = gotoRight(row, cell, posX);\r\n      if (pos) {\r\n        return pos;\r\n      }\r\n\r\n      var firstFocusableCell = null;\r\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\r\n\r\n      // if at last row, cycle through columns rather than get stuck in the last one\r\n      if (row === dataLengthIncludingAddNew - 1) { row--; }\r\n\r\n      while (++row < dataLengthIncludingAddNew) {\r\n        firstFocusableCell = findFirstFocusableCell(row);\r\n        if (firstFocusableCell !== null) {\r\n          return {\r\n            \"row\": row,\r\n            \"cell\": firstFocusableCell,\r\n            \"posX\": firstFocusableCell\r\n          };\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    function gotoPrev(row, cell, posX) {\r\n      if (row == null && cell == null) {\r\n        row = getDataLengthIncludingAddNew() - 1;\r\n        cell = posX = columns.length - 1;\r\n        if (canCellBeActive(row, cell)) {\r\n          return {\r\n            \"row\": row,\r\n            \"cell\": cell,\r\n            \"posX\": cell\r\n          };\r\n        }\r\n      }\r\n\r\n      var pos;\r\n      var lastSelectableCell;\r\n      while (!pos) {\r\n        pos = gotoLeft(row, cell, posX);\r\n        if (pos) {\r\n          break;\r\n        }\r\n        if (--row < 0) {\r\n          return null;\r\n        }\r\n\r\n        cell = 0;\r\n        lastSelectableCell = findLastFocusableCell(row);\r\n        if (lastSelectableCell !== null) {\r\n          pos = {\r\n            \"row\": row,\r\n            \"cell\": lastSelectableCell,\r\n            \"posX\": lastSelectableCell\r\n          };\r\n        }\r\n      }\r\n      return pos;\r\n    }\r\n\r\n    function gotoRowStart(row, cell, posX) {\r\n       var newCell = findFirstFocusableCell(row);\r\n       if (newCell === null) return null;\r\n\r\n       return {\r\n          \"row\": row,\r\n          \"cell\": newCell,\r\n          \"posX\": newCell\r\n       };\r\n    }\r\n\r\n    function gotoRowEnd(row, cell, posX) {\r\n       var newCell = findLastFocusableCell(row);\r\n       if (newCell === null) return null;\r\n\r\n       return {\r\n          \"row\": row,\r\n          \"cell\": newCell,\r\n          \"posX\": newCell\r\n       };\r\n    }\r\n\r\n    function navigateRight() {\r\n      return navigate(\"right\");\r\n    }\r\n\r\n    function navigateLeft() {\r\n      return navigate(\"left\");\r\n    }\r\n\r\n    function navigateDown() {\r\n      return navigate(\"down\");\r\n    }\r\n\r\n    function navigateUp() {\r\n      return navigate(\"up\");\r\n    }\r\n\r\n    function navigateNext() {\r\n      return navigate(\"next\");\r\n    }\r\n\r\n    function navigatePrev() {\r\n       return navigate(\"prev\");\r\n    }\r\n\r\n    function navigateRowStart() {\r\n       return navigate(\"home\");\r\n    }\r\n\r\n    function navigateRowEnd() {\r\n       return navigate(\"end\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} dir Navigation direction.\r\n     * @return {boolean} Whether navigation resulted in a change of active cell.\r\n     */\r\n    function navigate(dir) {\r\n      if (!options.enableCellNavigation) {\r\n        return false;\r\n      }\r\n\r\n      if (!activeCellNode && dir != \"prev\" && dir != \"next\") {\r\n        return false;\r\n      }\r\n\r\n      if (!getEditorLock().commitCurrentEdit()) {\r\n        return true;\r\n      }\r\n      setFocus();\r\n\r\n      var tabbingDirections = {\r\n        \"up\": -1,\r\n        \"down\": 1,\r\n        \"left\": -1,\r\n        \"right\": 1,\r\n        \"prev\": -1,\r\n        \"next\": 1,\r\n        \"home\": -1,\r\n        \"end\": 1\r\n      };\r\n      tabbingDirection = tabbingDirections[dir];\r\n\r\n      var stepFunctions = {\r\n        \"up\": gotoUp,\r\n        \"down\": gotoDown,\r\n        \"left\": gotoLeft,\r\n        \"right\": gotoRight,\r\n        \"prev\": gotoPrev,\r\n        \"next\": gotoNext,\r\n        \"home\": gotoRowStart,\r\n        \"end\": gotoRowEnd\r\n      };\r\n      var stepFn = stepFunctions[dir];\r\n      var pos = stepFn(activeRow, activeCell, activePosX);\r\n      if (pos) {\r\n        if (hasFrozenRows && options.frozenBottom & pos.row == getDataLength()) {\r\n          return;\r\n        }\r\n\r\n        var isAddNewRow = (pos.row == getDataLength());\r\n\r\n        if (( !options.frozenBottom && pos.row >= actualFrozenRow )\r\n          || ( options.frozenBottom && pos.row < actualFrozenRow )\r\n          ) {\r\n          scrollCellIntoView(pos.row, pos.cell, !isAddNewRow && options.emulatePagingWhenScrolling);\r\n        }\r\n        setActiveCellInternal(getCellNode(pos.row, pos.cell));\r\n        activePosX = pos.posX;\r\n        return true;\r\n      } else {\r\n        setActiveCellInternal(getCellNode(activeRow, activeCell));\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function getCellNode(row, cell) {\r\n      if (rowsCache[row]) {\r\n        ensureCellNodesInRowsCache(row);\r\n        try {\r\n          if (rowsCache[row].cellNodesByColumnIdx.length > cell) {\r\n            return rowsCache[row].cellNodesByColumnIdx[cell][0];\r\n          }\r\n          else {\r\n            return null;\r\n          }\r\n        } catch (e) {\r\n          return rowsCache[row].cellNodesByColumnIdx[cell];\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    function setActiveCell(row, cell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\r\n      if (!initialized) { return; }\r\n      if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\r\n        return;\r\n      }\r\n\r\n      if (!options.enableCellNavigation) {\r\n        return;\r\n      }\r\n\r\n      scrollCellIntoView(row, cell, false);\r\n      setActiveCellInternal(getCellNode(row, cell), opt_editMode, preClickModeOn, suppressActiveCellChangedEvent);\r\n    }\r\n\r\n    function setActiveRow(row, cell, suppressScrollIntoView) {\r\n      if (!initialized) { return; }\r\n      if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\r\n        return;\r\n      }\r\n\r\n      activeRow = row;\r\n      if (!suppressScrollIntoView) {\r\n        scrollCellIntoView(row, cell || 0, false);\r\n      }\r\n    }\r\n\r\n    function canCellBeActive(row, cell) {\r\n      if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() ||\r\n          row < 0 || cell >= columns.length || cell < 0) {\r\n        return false;\r\n      }\r\n\r\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\r\n      if (rowMetadata && typeof rowMetadata.focusable !== \"undefined\") {\r\n        return !!rowMetadata.focusable;\r\n      }\r\n\r\n      var columnMetadata = rowMetadata && rowMetadata.columns;\r\n      if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable !== \"undefined\") {\r\n        return !!columnMetadata[columns[cell].id].focusable;\r\n      }\r\n      if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable !== \"undefined\") {\r\n        return !!columnMetadata[cell].focusable;\r\n      }\r\n\r\n      return !!columns[cell].focusable;\r\n    }\r\n\r\n    function canCellBeSelected(row, cell) {\r\n      if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\r\n        return false;\r\n      }\r\n\r\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\r\n      if (rowMetadata && typeof rowMetadata.selectable !== \"undefined\") {\r\n        return !!rowMetadata.selectable;\r\n      }\r\n\r\n      var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\r\n      if (columnMetadata && typeof columnMetadata.selectable !== \"undefined\") {\r\n        return !!columnMetadata.selectable;\r\n      }\r\n\r\n      return !!columns[cell].selectable;\r\n    }\r\n\r\n    function gotoCell(row, cell, forceEdit, e) {\r\n      if (!initialized) { return; }\r\n      if (!canCellBeActive(row, cell)) {\r\n        return;\r\n      }\r\n\r\n      if (!getEditorLock().commitCurrentEdit()) {\r\n        return;\r\n      }\r\n\r\n      scrollCellIntoView(row, cell, false);\r\n\r\n      var newCell = getCellNode(row, cell);\r\n\r\n      // if selecting the 'add new' row, start editing right away\r\n      var column = columns[cell];\r\n      var suppressActiveCellChangedEvent = !!(options.editable && column && column.editor && options.suppressActiveCellChangeOnEdit);\r\n      setActiveCellInternal(newCell, (forceEdit || (row === getDataLength()) || options.autoEdit), null, suppressActiveCellChangedEvent, e);\r\n\r\n      // if no editor was created, set the focus back on the grid\r\n      if (!currentEditor) {\r\n        setFocus();\r\n      }\r\n    }\r\n\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n    // IEditor implementation for the editor lock\r\n\r\n    function commitCurrentEdit() {\r\n      var item = getDataItem(activeRow);\r\n      var column = columns[activeCell];\r\n\r\n      if (currentEditor) {\r\n        if (currentEditor.isValueChanged()) {\r\n          var validationResults = currentEditor.validate();\r\n\r\n          if (validationResults.valid) {\r\n            if (activeRow < getDataLength()) {\r\n              var editCommand = {\r\n                row: activeRow,\r\n                cell: activeCell,\r\n                editor: currentEditor,\r\n                serializedValue: currentEditor.serializeValue(),\r\n                prevSerializedValue: serializedEditorValue,\r\n                execute: function () {\r\n                  this.editor.applyValue(item, this.serializedValue);\r\n                  updateRow(this.row);\r\n                  trigger(self.onCellChange, {\r\n                    command: 'execute',\r\n                    row: this.row,\r\n                    cell: this.cell,\r\n                    item: item,\r\n                    column: column\r\n                  });\r\n                },\r\n                undo: function () {\r\n                  this.editor.applyValue(item, this.prevSerializedValue);\r\n                  updateRow(this.row);\r\n                  trigger(self.onCellChange, {\r\n                    command: 'undo',\r\n                    row: this.row,\r\n                    cell: this.cell,\r\n                    item: item,\r\n                    column: column\r\n                  });\r\n                }\r\n              };\r\n\r\n              if (options.editCommandHandler) {\r\n                makeActiveCellNormal();\r\n                options.editCommandHandler(item, column, editCommand);\r\n              } else {\r\n                editCommand.execute();\r\n                makeActiveCellNormal();\r\n              }\r\n\r\n            } else {\r\n              var newItem = {};\r\n              currentEditor.applyValue(newItem, currentEditor.serializeValue());\r\n              makeActiveCellNormal();\r\n              trigger(self.onAddNewRow, {item: newItem, column: column});\r\n            }\r\n\r\n            // check whether the lock has been re-acquired by event handlers\r\n            return !getEditorLock().isActive();\r\n          } else {\r\n            // Re-add the CSS class to trigger transitions, if any.\r\n            $(activeCellNode).removeClass(\"invalid\");\r\n            $(activeCellNode).width();  // force layout\r\n            $(activeCellNode).addClass(\"invalid\");\r\n\r\n            trigger(self.onValidationError, {\r\n              editor: currentEditor,\r\n              cellNode: activeCellNode,\r\n              validationResults: validationResults,\r\n              row: activeRow,\r\n              cell: activeCell,\r\n              column: column\r\n            });\r\n\r\n            currentEditor.focus();\r\n            return false;\r\n          }\r\n        }\r\n\r\n        makeActiveCellNormal();\r\n      }\r\n      return true;\r\n    }\r\n\r\n    function cancelCurrentEdit() {\r\n      makeActiveCellNormal();\r\n      return true;\r\n    }\r\n\r\n    function rowsToRanges(rows) {\r\n      var ranges = [];\r\n      var lastCell = columns.length - 1;\r\n      for (var i = 0; i < rows.length; i++) {\r\n        ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\r\n      }\r\n      return ranges;\r\n    }\r\n\r\n    function getSelectedRows() {\r\n      if (!selectionModel) {\r\n        throw new Error(\"SlickGrid Selection model is not set\");\r\n      }\r\n      return selectedRows.slice(0);\r\n    }\r\n\r\n    function setSelectedRows(rows, caller) {\r\n      if (!selectionModel) {\r\n        throw new Error(\"SlickGrid Selection model is not set\");\r\n      }\r\n      if (self && self.getEditorLock && !self.getEditorLock().isActive()) {\r\n        selectionModel.setSelectedRanges(rowsToRanges(rows), caller || \"SlickGrid.setSelectedRows\");\r\n      }\r\n    }\r\n\r\n    /** basic html sanitizer to avoid scripting attack */\r\n    function sanitizeHtmlString(dirtyHtml) {\r\n      var sanitizer = options.sanitizer || function (dirtyHtmlStr) {\r\n        return dirtyHtmlStr.replace(/(\\b)(on\\S+)(\\s*)=|javascript:([^>]*)[^>]*|(<\\s*)(\\/*)script([<>]*).*(<\\s*)(\\/*)script(>*)|(&lt;)(\\/*)(script|script defer)(.*)(&gt;|&gt;\">)/gi, '');\r\n      }\r\n      return typeof dirtyHtml === 'string' ? sanitizer(dirtyHtml) : dirtyHtml;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Debug\r\n\r\n    this.debug = function () {\r\n      var s = \"\";\r\n\r\n      s += (\"\\n\" + \"counter_rows_rendered:  \" + counter_rows_rendered);\r\n      s += (\"\\n\" + \"counter_rows_removed:  \" + counter_rows_removed);\r\n      s += (\"\\n\" + \"renderedRows:  \" + renderedRows);\r\n      s += (\"\\n\" + \"numVisibleRows:  \" + numVisibleRows);\r\n      s += (\"\\n\" + \"maxSupportedCssHeight:  \" + maxSupportedCssHeight);\r\n      s += (\"\\n\" + \"n(umber of pages):  \" + n);\r\n      s += (\"\\n\" + \"(current) page:  \" + page);\r\n      s += (\"\\n\" + \"page height (ph):  \" + ph);\r\n      s += (\"\\n\" + \"vScrollDir:  \" + vScrollDir);\r\n\r\n      alert(s);\r\n    };\r\n\r\n    // a debug helper to be able to access private members\r\n    this.eval = function (expr) {\r\n      return eval(expr);\r\n    };\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Public API\r\n\r\n    $.extend(this, {\r\n      \"slickGridVersion\": \"2.4.44\",\r\n\r\n      // Events\r\n      \"onScroll\": new Slick.Event(),\r\n      \"onBeforeSort\": new Slick.Event(),\r\n      \"onSort\": new Slick.Event(),\r\n      \"onHeaderMouseEnter\": new Slick.Event(),\r\n      \"onHeaderMouseLeave\": new Slick.Event(),\r\n      \"onHeaderRowMouseEnter\": new Slick.Event(),\r\n      \"onHeaderRowMouseLeave\": new Slick.Event(),\r\n      \"onHeaderContextMenu\": new Slick.Event(),\r\n      \"onHeaderClick\": new Slick.Event(),\r\n      \"onHeaderCellRendered\": new Slick.Event(),\r\n      \"onBeforeHeaderCellDestroy\": new Slick.Event(),\r\n      \"onHeaderRowCellRendered\": new Slick.Event(),\r\n      \"onFooterRowCellRendered\": new Slick.Event(),\r\n      \"onFooterContextMenu\": new Slick.Event(),\r\n      \"onFooterClick\": new Slick.Event(),\r\n      \"onBeforeHeaderRowCellDestroy\": new Slick.Event(),\r\n      \"onBeforeFooterRowCellDestroy\": new Slick.Event(),\r\n      \"onMouseEnter\": new Slick.Event(),\r\n      \"onMouseLeave\": new Slick.Event(),\r\n      \"onClick\": new Slick.Event(),\r\n      \"onDblClick\": new Slick.Event(),\r\n      \"onContextMenu\": new Slick.Event(),\r\n      \"onKeyDown\": new Slick.Event(),\r\n      \"onAddNewRow\": new Slick.Event(),\r\n      \"onBeforeAppendCell\": new Slick.Event(),\r\n      \"onValidationError\": new Slick.Event(),\r\n      \"onViewportChanged\": new Slick.Event(),\r\n      \"onColumnsReordered\": new Slick.Event(),\r\n      \"onColumnsDrag\": new Slick.Event(),\r\n      \"onColumnsResized\": new Slick.Event(),\r\n      \"onColumnsResizeDblClick\": new Slick.Event(),\r\n      \"onBeforeColumnsResize\": new Slick.Event(),\r\n      \"onCellChange\": new Slick.Event(),\r\n      \"onCompositeEditorChange\": new Slick.Event(),\r\n      \"onBeforeEditCell\": new Slick.Event(),\r\n      \"onBeforeCellEditorDestroy\": new Slick.Event(),\r\n      \"onBeforeDestroy\": new Slick.Event(),\r\n      \"onActiveCellChanged\": new Slick.Event(),\r\n      \"onActiveCellPositionChanged\": new Slick.Event(),\r\n      \"onDragInit\": new Slick.Event(),\r\n      \"onDragStart\": new Slick.Event(),\r\n      \"onDrag\": new Slick.Event(),\r\n      \"onDragEnd\": new Slick.Event(),\r\n      \"onSelectedRowsChanged\": new Slick.Event(),\r\n      \"onCellCssStylesChanged\": new Slick.Event(),\r\n      \"onAutosizeColumns\": new Slick.Event(),\r\n      \"onBeforeSetColumns\": new Slick.Event(),\r\n      \"onRendered\": new Slick.Event(),\r\n      \"onSetOptions\": new Slick.Event(),\r\n\r\n      // Methods\r\n      \"registerPlugin\": registerPlugin,\r\n      \"unregisterPlugin\": unregisterPlugin,\r\n      \"getPluginByName\": getPluginByName,\r\n      \"getColumns\": getColumns,\r\n      \"setColumns\": setColumns,\r\n      \"getColumnIndex\": getColumnIndex,\r\n      \"updateColumnHeader\": updateColumnHeader,\r\n      \"setSortColumn\": setSortColumn,\r\n      \"setSortColumns\": setSortColumns,\r\n      \"getSortColumns\": getSortColumns,\r\n      \"autosizeColumns\": autosizeColumns,\r\n      \"autosizeColumn\": autosizeColumn,\r\n      \"getOptions\": getOptions,\r\n      \"setOptions\": setOptions,\r\n      \"getData\": getData,\r\n      \"getDataLength\": getDataLength,\r\n      \"getDataItem\": getDataItem,\r\n      \"setData\": setData,\r\n      \"getSelectionModel\": getSelectionModel,\r\n      \"setSelectionModel\": setSelectionModel,\r\n      \"getSelectedRows\": getSelectedRows,\r\n      \"setSelectedRows\": setSelectedRows,\r\n      \"getContainerNode\": getContainerNode,\r\n      \"updatePagingStatusFromView\": updatePagingStatusFromView,\r\n      \"applyFormatResultToCellNode\": applyFormatResultToCellNode,\r\n\r\n      \"render\": render,\r\n      \"reRenderColumns\": reRenderColumns,\r\n      \"invalidate\": invalidate,\r\n      \"invalidateRow\": invalidateRow,\r\n      \"invalidateRows\": invalidateRows,\r\n      \"invalidateAllRows\": invalidateAllRows,\r\n      \"updateCell\": updateCell,\r\n      \"updateRow\": updateRow,\r\n      \"getViewport\": getVisibleRange,\r\n      \"getRenderedRange\": getRenderedRange,\r\n      \"resizeCanvas\": resizeCanvas,\r\n      \"updateRowCount\": updateRowCount,\r\n      \"scrollRowIntoView\": scrollRowIntoView,\r\n      \"scrollRowToTop\": scrollRowToTop,\r\n      \"scrollCellIntoView\": scrollCellIntoView,\r\n      \"scrollColumnIntoView\": scrollColumnIntoView,\r\n      \"getCanvasNode\": getCanvasNode,\r\n      \"getUID\": getUID,\r\n      \"getHeaderColumnWidthDiff\": getHeaderColumnWidthDiff,\r\n      \"getScrollbarDimensions\": getScrollbarDimensions,\r\n      \"getHeadersWidth\": getHeadersWidth,\r\n      \"getCanvasWidth\": getCanvasWidth,\r\n      \"getCanvases\": getCanvases,\r\n      \"getActiveCanvasNode\": getActiveCanvasNode,\r\n      \"setActiveCanvasNode\": setActiveCanvasNode,\r\n      \"getViewportNode\": getViewportNode,\r\n      \"getViewports\": getViewports,\r\n      \"getActiveViewportNode\": getActiveViewportNode,\r\n      \"setActiveViewportNode\": setActiveViewportNode,\r\n      \"focus\": setFocus,\r\n      \"scrollTo\": scrollTo,\r\n      \"cacheCssForHiddenInit\": cacheCssForHiddenInit,\r\n      \"restoreCssFromHiddenInit\": restoreCssFromHiddenInit,\r\n\r\n      \"getCellFromPoint\": getCellFromPoint,\r\n      \"getCellFromEvent\": getCellFromEvent,\r\n      \"getActiveCell\": getActiveCell,\r\n      \"setActiveCell\": setActiveCell,\r\n      \"setActiveRow\": setActiveRow,\r\n      \"getActiveCellNode\": getActiveCellNode,\r\n      \"getActiveCellPosition\": getActiveCellPosition,\r\n      \"resetActiveCell\": resetActiveCell,\r\n      \"editActiveCell\": makeActiveCellEditable,\r\n      \"getCellEditor\": getCellEditor,\r\n      \"getCellNode\": getCellNode,\r\n      \"getCellNodeBox\": getCellNodeBox,\r\n      \"canCellBeSelected\": canCellBeSelected,\r\n      \"canCellBeActive\": canCellBeActive,\r\n      \"navigatePrev\": navigatePrev,\r\n      \"navigateNext\": navigateNext,\r\n      \"navigateUp\": navigateUp,\r\n      \"navigateDown\": navigateDown,\r\n      \"navigateLeft\": navigateLeft,\r\n      \"navigateRight\": navigateRight,\r\n      \"navigatePageUp\": navigatePageUp,\r\n      \"navigatePageDown\": navigatePageDown,\r\n      \"navigateTop\": navigateTop,\r\n      \"navigateBottom\": navigateBottom,\r\n      \"navigateRowStart\": navigateRowStart,\r\n      \"navigateRowEnd\": navigateRowEnd,\r\n      \"gotoCell\": gotoCell,\r\n      \"getTopPanel\": getTopPanel,\r\n      \"setTopPanelVisibility\": setTopPanelVisibility,\r\n      \"getPreHeaderPanel\": getPreHeaderPanel,\r\n      \"getPreHeaderPanelLeft\": getPreHeaderPanel,\r\n      \"getPreHeaderPanelRight\": getPreHeaderPanelRight,\r\n      \"setPreHeaderPanelVisibility\": setPreHeaderPanelVisibility,\r\n      \"getHeader\": getHeader,\r\n      \"getHeaderColumn\": getHeaderColumn,\r\n      \"setHeaderRowVisibility\": setHeaderRowVisibility,\r\n      \"getHeaderRow\": getHeaderRow,\r\n      \"getHeaderRowColumn\": getHeaderRowColumn,\r\n      \"setFooterRowVisibility\": setFooterRowVisibility,\r\n      \"getFooterRow\": getFooterRow,\r\n      \"getFooterRowColumn\": getFooterRowColumn,\r\n      \"getGridPosition\": getGridPosition,\r\n      \"flashCell\": flashCell,\r\n      \"addCellCssStyles\": addCellCssStyles,\r\n      \"setCellCssStyles\": setCellCssStyles,\r\n      \"removeCellCssStyles\": removeCellCssStyles,\r\n      \"getCellCssStyles\": getCellCssStyles,\r\n      \"getFrozenRowOffset\": getFrozenRowOffset,\r\n      \"setColumnHeaderVisibility\": setColumnHeaderVisibility,\r\n      \"sanitizeHtmlString\": sanitizeHtmlString,\r\n      \"getDisplayedScrollbarDimensions\": getDisplayedScrollbarDimensions,\r\n      \"getAbsoluteColumnMinWidth\": getAbsoluteColumnMinWidth,\r\n\r\n      \"init\": finishInitialization,\r\n      \"destroy\": destroy,\r\n\r\n      // IEditor implementation\r\n      \"getEditorLock\": getEditorLock,\r\n      \"getEditController\": getEditController\r\n    });\r\n\r\n    init();\r\n  }\r\n\r\n  // exports\r\n  $.extend(true, window, {\r\n    Slick: {\r\n      Grid: SlickGrid\r\n    }\r\n  });\r\n}(jQuery));"],"sourceRoot":""}